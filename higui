[33mcommit ac57d9ca2ebcda81d126c919298922cd5820318c[m[33m ([m[1;31morigin/master[m[33m)[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sun Aug 9 14:23:20 2020 +0800

    缓存文件

[1mdiff --git a/env/__pycache__/Env.cpython-36.pyc b/env/__pycache__/Env.cpython-36.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..401eba4[m
Binary files /dev/null and b/env/__pycache__/Env.cpython-36.pyc differ
[1mdiff --git a/env/__pycache__/Solution.cpython-36.pyc b/env/__pycache__/Solution.cpython-36.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..3e54e9c[m
Binary files /dev/null and b/env/__pycache__/Solution.cpython-36.pyc differ

[33mcommit 283500ada332e96523e16f61c1de43941fbc8c10[m
Author: Lwt <lwtynu@gmail.com>
Date:   Fri Aug 7 21:44:24 2020 +0800

    DRL环境
    
    (cherry picked from commit fd7a44cbadaf0d88c01f6d0f8a47e6550e026640)

[1mdiff --git a/env/UavTrajectoryEnv.py b/env/UavTrajectoryEnv.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7d32d90[m
[1m--- /dev/null[m
[1m+++ b/env/UavTrajectoryEnv.py[m
[36m@@ -0,0 +1,66 @@[m
[32m+[m[32mimport numpy as np[m
[32m+[m[32mfrom env.Env import BaseEnv[m
[32m+[m
[32m+[m
[32m+[m[32mclass UavTrajectoryEnv(BaseEnv):[m
[32m+[m
[32m+[m[32m    def __init__(self, md_position,[m
[32m+[m[32m                 start_point=(0, 0),[m
[32m+[m[32m                 end_point=(100, 0),[m
[32m+[m[32m                 latency=0.5,[m
[32m+[m[32m                 md_number=4,[m
[32m+[m[32m                 slot_number=20,[m
[32m+[m[32m                 max_velocity=15,[m
[32m+[m[32m                 reward_radius=20,[m
[32m+[m[32m                 energy_reward_coefficient=0.8,[m
[32m+[m[32m                 trajectory_reward_coefficient=0.2) -> None:[m
[32m+[m[32m        """[m
[32m+[m[32m        创建环境，随机生成MD设备的任务矩阵(md_number,slot_number)[m
[32m+[m
[32m+[m[32m        :param md_position: MD设备的位置矩阵 (2,K)[m
[32m+[m[32m        :param start_point: UAV起点[m
[32m+[m[32m        :param end_point: UAV终点[m
[32m+[m[32m        :param latency: 时延上限[m
[32m+[m[32m        :param user_number: MD设备的数量[m
[32m+[m[32m        :param slot_number: 时间片的数量[m
[32m+[m
[32m+[m[32m        :param max_velocity: UAV最大速度[m
[32m+[m[32m        :param reward_radius: 轨迹奖励衰减半径[m
[32m+[m[32m        :param energy_reward_coefficient: 能耗奖励权重[m
[32m+[m[32m        :param trajectory_reward_coefficient: 轨迹奖励权重[m
[32m+[m[32m        """[m
[32m+[m
[32m+[m[32m        super().__init__()[m
[32m+[m[32m        self.__tasks = np.random.randint(100, 200, size=(md_number, slot_number)) / 1024[m
[32m+[m[32m        self.__md_positions = md_position[m
[32m+[m[32m        self.__latency = latency[m
[32m+[m[32m        self.__n_user = md_number[m
[32m+[m[32m        self.__slots = slot_number[m
[32m+[m[32m        self.__start_point = start_point[m
[32m+[m[32m        self.__end_point = end_point[m
[32m+[m[32m        self.__max_velocity = 15[m
[32m+[m
[32m+[m[32m        self.__max_velocity = max_velocity[m
[32m+[m[32m        self.__reward_radius = reward_radius[m
[32m+[m[32m        self.__energy_reward_coefficient = energy_reward_coefficient,[m
[32m+[m[32m        self.__trajectory_reward_coefficient = trajectory_reward_coefficient[m
[32m+[m
[32m+[m[32m    def reset(self):[m
[32m+[m[32m        """[m
[32m+[m[32m        重置环境：[m
[32m+[m[32m            1. 随机生成任务矩阵[m
[32m+[m[32m            2. 使用CVX计算UAV飞行轨迹[m
[32m+[m[32m        :return:[m
[32m+[m[32m        """[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def sample(self):[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def step(self, action):[m
[32m+[m[32m        """[m
[32m+[m[32m        环境对Agent的回应[m
[32m+[m[32m        :param action: Agent所采取的动作[m
[32m+[m[32m        :return: (观察，奖励，是否成功等相关信息)[m
[32m+[m[32m        """[m
[32m+[m[32m        pass[m

[33mcommit 3e249d63abd8ef31626d5681e8360b7b724163fe[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sun Aug 9 14:16:25 2020 +0800

    DRL修改奖励函数 添加观察信息

[1mdiff --git a/data/data_1.csv b/data/data_1.csv[m
[1mnew file mode 100644[m
[1mindex 0000000..5fede8b[m
[1m--- /dev/null[m
[1m+++ b/data/data_1.csv[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m82,91,12,92,63,9,28,55,96,97,15,98,0.172,0.186,0.159,0.156,0.14,0.182,0.186,0.145,0.137,0.105,0.179,0.167,0.144,0.15,0.19,0.188,0.118,0.185,0.151,0.11,0.131,0.169,0.19,0.11,0.161,0.168,0.127,0.176,0.11,0.124,0.1,0.15,0.126,0.107,0.188,0.12,0.157,0.127,0.16,0.166,0.173,0.129,0.104,0.186,0.197,0.189,0.108,0.179,0.149,0.163,0.161,0.154,0.168,0.162,0.158,0.114,0.187,0.176,0.197,0.179,0.158,0.192,0.166,0.131,0.117,0.161,0.174,0.183,0.128,0.191,0.158,0.173,0.181,0.194,0.129,0.139,0.19,0.184,0.14,0.147,0.172,0.106,0.137,0.12,0.152,0.177,0.113,0.199,0.147,0.178,0.135,0.149,0.197,0.169,0.102,0.123,0.126,0.196,0.177,0.168,0.107,0.181,0.118,0.115,0.187,0.1,0.106,0.192,0.125,0.178,0.166,0.111,0.18,0.12,0.17,0.138,0.155,0.195,0.126,0.13,3.0042,3.5649,3.8796,3.8861,2.6632,3.4358,3.3368,3.5921,3.9387,3.6949,3.0663,3.6247,3.2974,3.7586,4.3648,4.5218,2.9247,3.8795,3.6563,3.7216,4.099,4.6948,3.6007,3.6433,3.9127,4.3861,4.035,4.8538,3.303,3.9392,3.6804,4.4984,4.0904,4.3189,4.0991,4.1502,4.1908,4.1686,4.1234,4.7292,4.0561,4.1527,3.7814,4.6524,4.21,4.7949,3.6474,4.5829,4.3068,4.4568,3.8214,4.3859,4.268,4.4579,4.4161,3.8375,3.828,4.3588,4.5594,4.4365,4.5835,4.4834,3.9635,4.1087,4.0493,4.282,4.6054,4.3215,3.5611,4.4615,4.3386,4.2752,4.5991,4.3375,3.7319,4.1223,4.5049,4.2758,4.4376,4.1693,4.5009,4.0793,4.2429,3.9181,4.2716,3.9934,3.8649,4.5868,4.0928,3.9792,4.1033,3.7531,4.8394,4.4244,3.6528,3.5341,3.7556,3.7242,4.6177,4.1603,3.4716,3.6119,3.7002,3.1874,4.9149,3.5852,3.4919,3.5666,3.4989,3.2543,4.5586,3.434,3.7607,2.9283,3.5639,2.8416,4.2943,3.7294,3.2286,2.7675,0,0,7.49,9.3755,13.477,19.775,19.012,30.423,22.909,41.772,28,52.639,33.892,63.092,40.51,73.102,45.475,84.027,55.242,91,63,81.845,63,84.332,63,72.332,63,60.332,71.471,51.832,74.255,40.159,78.814,29.059,85.486,19.085,92.324,9.2239,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.17517,0.17721,0.15736,0.15539,0.15857,0.17631,0.19097,0.16137,0.15192,0.1303,0.18968,0.17575,0.16062,0.15956,0.17809,0.17517,0.14608,0.18048,0.17594,0.14351,0.1562,0.17699,0.20298,0.14437,0.18117,0.18075,0.15471,0.18099,0.14898,0.1534,0.14541,0.17819,0.16367,0.14483,0.2099,0.15799,0.17102,0.14944,0.17383,0.17125,0.18332,0.15114,0.13188,0.18079,0.19245,0.18109,0.13664,0.17715,0.15928,0.16712,0.1728,0.16185,0.17249,0.16645,0.15872,0.13388,0.18345,0.17082,0.1813,0.17183,0.16627,0.18954,0.17852,0.15211,0.14194,0.17162,0.1672,0.17588,0.14768,0.17917,0.15988,0.1702,0.17076,0.18144,0.14581,0.14863,0.17722,0.17614,0.16726,0.17555,0.19,0.14317,0.16707,0.15695,0.15991,0.17935,0.13589,0.18627,0.15844,0.18014,0.15923,0.17345,0.19364,0.17999,0.13746,0.15622,0.14603,0.1928,0.17126,0.17056,0.13445,0.1849,0.15439,0.15759,0.19153,0.14016,0.1465,0.20983,0.15253,0.19233,0.16997,0.14222,0.18792,0.15503,0.17707,0.16369,0.15921,0.19062,0.15065,0.15876,773.94,802.75,751.76,747.33,722.18,796.7,823.48,746.57,734.62,682.71,811.28,780.97,733.73,740.24,812.77,810.09,690.27,804.49,773.85,704.37,739.64,800.77,843.7,704.28,790.19,798.13,733.45,812.19,704.86,727.47,705.32,786.21,748.17,716.26,858.69,737.03,772.56,721.89,775.6,785.14,795.41,724.95,670.67,807.87,824.89,813.66,675.51,797.04,749.31,768.57,766.84,755.81,776.88,766.9,747.44,675.89,800.41,773.65,813.7,786.89,769.69,830.08,780.8,725.36,701.57,771.59,774.3,795.35,701.35,808.62,747,769.63,789.06,806.43,698.24,713.8,801,791.75,766.18,775.32,816.6,708.8,758.92,731.21,748.15,794.57,684.73,828.1,737.85,796.1,744.5,764.93,850.7,797.81,688.04,723.05,709.34,825.75,797.75,774.4,676.47,803.69,728.47,722.06,848.69,697.13,706.39,855.95,725.4,818.48,789.42,701.4,821.66,715.66,791.3,738.5,765.31,838.34,718.57,725.62,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m82,91,12,92,63,9,28,55,96,97,15,98,0.13,0.184,0.142,0.187,0.166,0.1,0.111,0.103,0.109,0.122,0.179,0.174,0.124,0.139,0.186,0.107,0.157,0.111,0.2,0.144,0.192,0.115,0.2,0.105,0.105,0.183,0.178,0.125,0.124,0.147,0.195,0.163,0.184,0.187,0.113,0.158,0.199,0.109,0.144,0.177,0.199,0.112,0.14,0.176,0.16,0.188,0.11,0.154,0.161,0.182,0.185,0.147,0.161,0.1,0.169,0.101,0.165,0.151,0.196,0.116,0.138,0.186,0.151,0.182,0.151,0.168,0.189,0.105,0.188,0.118,0.176,0.157,0.133,0.196,0.184,0.128,0.12,0.136,0.133,0.116,0.194,0.189,0.188,0.146,0.179,0.136,0.186,0.191,0.154,0.148,0.153,0.124,0.109,0.139,0.179,0.168,0.184,0.145,0.112,0.152,0.103,0.143,0.12,0.185,0.113,0.147,0.138,0.185,0.156,0.147,0.16,0.123,0.152,0.135,0.111,0.179,0.136,0.128,0.1,0.103,2.8799,3.6457,3.8641,4.2109,2.8249,3.013,3.0508,3.4075,3.8372,4.0497,3.1636,3.8085,3.305,3.869,4.523,4.0054,3.2558,3.5407,3.8039,3.9367,4.3964,4.0325,3.5306,3.5075,3.4779,4.5071,4.4536,4.3719,3.4135,4.1522,4.1476,4.3139,4.2403,4.7823,3.3421,4.2137,4.3852,3.9864,3.904,4.7883,4.1096,3.9859,4.1434,4.5768,4.0949,4.8632,3.661,4.3711,4.1877,4.7264,4.0899,4.49,3.9444,3.8939,4.4472,3.9861,3.9146,4.5123,4.3915,4.164,4.1737,4.6368,3.619,4.5211,4.1114,4.5182,4.7207,3.8785,4.0979,4.0811,4.4243,4.399,4.3247,4.5732,4.2806,4.2188,4.0379,4.1139,4.2057,3.6905,4.402,4.5845,4.5143,3.9425,4.465,3.6718,4.4378,4.4756,4.1355,3.7452,4.281,3.5479,4.0119,4.1427,4.3383,3.8214,4.3644,3.5553,4.1498,4.1763,3.5885,3.5084,3.6278,3.4972,4.0742,3.8918,3.6749,3.4566,3.7279,3.1116,4.5007,3.5317,3.6134,3.0127,3.3509,3.1369,4.3733,3.5152,3.1939,2.7405,0,0,7.0363,9.7206,12,20.646,15.792,32.031,22.482,41.993,26.464,53.313,28.277,65.175,40.101,67.226,29.169,72.174,36.472,81.696,44.051,91,50.251,80.726,58.888,72.395,66.864,63.429,72.807,53.004,77.081,41.791,80.7,30.35,86.514,19.852,93.258,9.9269,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.15852,0.18612,0.15615,0.18166,0.18398,0.13358,0.15565,0.14471,0.14522,0.15374,0.20567,0.19501,0.16218,0.1676,0.19334,0.14034,0.1877,0.14884,0.19454,0.15719,0.18316,0.13486,0.19761,0.13263,0.14333,0.19015,0.18744,0.15007,0.15982,0.16918,0.18519,0.16355,0.17754,0.17341,0.13892,0.16139,0.19338,0.13499,0.16257,0.17519,0.19645,0.13743,0.15855,0.17853,0.17318,0.18306,0.14067,0.16601,0.17142,0.17924,0.18817,0.15844,0.17411,0.12862,0.17907,0.13245,0.18225,0.16588,0.19724,0.14311,0.15108,0.17768,0.16627,0.17648,0.16083,0.16765,0.18498,0.13395,0.19125,0.14233,0.17995,0.16754,0.15474,0.19528,0.19087,0.15206,0.14774,0.15931,0.14837,0.14116,0.18663,0.18157,0.18173,0.16054,0.17207,0.15241,0.17666,0.17925,0.15967,0.15994,0.17008,0.1565,0.1392,0.16143,0.18719,0.1856,0.19336,0.1752,0.14268,0.17342,0.1411,0.17424,0.14766,0.19457,0.13723,0.16479,0.16073,0.19503,0.17257,0.1732,0.16676,0.15077,0.17108,0.16563,0.15535,0.20986,0.16462,0.16775,0.1473,0.15511,725.75,820.01,743.53,824.68,781.92,677.55,720.81,706.38,716.37,738.28,842.06,825.67,736.4,759.86,845.1,707.64,789.72,715.98,831.11,735.7,819.43,690.08,831.08,675.29,694.68,829.86,821.24,727.14,726.01,764.95,813.4,754.39,796.32,801.39,676.84,749.68,833.68,683,738.91,800.66,833.82,689.78,738.03,793.88,768.67,822.98,689.66,762.43,768.06,810.52,814.56,745.72,768.02,671.48,791.12,681.05,783.82,762.32,843.18,707.85,722.49,806.7,742.22,800.61,742.77,771.74,822.35,678.73,819.7,700.42,791.92,764.71,732.46,840.79,822.31,724.39,711.41,739.22,715.78,688.43,818.97,812.32,811.52,738.43,790.94,713.85,800.49,808.43,742.17,735.21,771.29,724.47,699.59,748.7,823.03,797.76,839.33,766.15,712.08,777.43,697.33,765.59,713.63,826.63,701.5,756.61,742.49,828.31,777.36,762.72,782.58,724.27,770.94,746.05,730.12,852.14,770.62,758.35,711.01,718.37,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m82,91,12,92,63,9,28,55,96,97,15,98,0.161,0.195,0.123,0.19,0.105,0.103,0.11,0.165,0.153,0.116,0.114,0.153,0.196,0.118,0.126,0.112,0.16,0.193,0.124,0.147,0.191,0.171,0.153,0.164,0.173,0.173,0.148,0.128,0.12,0.192,0.105,0.134,0.169,0.16,0.143,0.11,0.114,0.17,0.148,0.134,0.137,0.143,0.168,0.16,0.107,0.115,0.107,0.103,0.178,0.185,0.142,0.197,0.187,0.186,0.137,0.196,0.175,0.135,0.189,0.1,0.157,0.152,0.108,0.187,0.128,0.138,0.147,0.182,0.16,0.156,0.136,0.128,0.148,0.125,0.134,0.144,0.185,0.193,0.183,0.153,0.171,0.133,0.146,0.194,0.135,0.117,0.147,0.165,0.112,0.112,0.13,0.191,0.168,0.122,0.16,0.166,0.152,0.176,0.102,0.119,0.197,0.15,0.107,0.131,0.1,0.158,0.2,0.159,0.161,0.133,0.123,0.151,0.19,0.1,0.157,0.143,0.162,0.184,0.145,0.121,3.0563,3.738,3.7512,4.2798,2.5753,3.0729,3.0282,3.8627,4.2066,3.969,2.8451,3.6773,3.6196,3.5967,3.9267,3.9458,3.2008,4.0162,3.3589,3.9625,4.3942,4.5713,3.3127,3.9976,3.8954,4.3461,4.0977,4.2894,3.3005,4.3919,3.6931,4.3026,4.399,4.8432,3.783,3.9971,3.9183,4.5789,4.2131,4.5257,3.9101,4.3092,4.7216,4.6591,3.891,4.416,3.9377,4.0675,4.4371,4.3942,3.6726,4.576,4.3154,4.4059,4.2137,4.7997,3.8833,4.2469,4.4211,3.9058,4.6003,4.4176,3.4197,4.6435,4.1727,4.3209,4.5098,4.442,3.8845,4.3228,4.2749,4.0289,4.4399,3.944,3.8636,4.3002,4.578,4.4816,4.5707,4.0167,4.2561,4.1424,4.112,4.283,4.38,3.7825,4.4589,4.626,4.0037,3.7169,3.9831,3.9127,4.491,3.9049,4.1055,3.7433,4.058,3.6731,3.945,3.8143,4.2261,3.4924,3.5511,3.2491,3.9746,4.0219,4.1015,3.3696,3.7771,3.0579,4.1856,3.7674,3.8418,2.8163,3.4923,2.8655,4.3534,3.6758,3.3507,2.722,0,0,6.2551,10.241,12,20.776,16.019,32.083,21.196,42.909,28,52.794,38.42,58.745,46.52,67.599,51.207,78.646,42.404,86.801,53.219,92,63,85.048,61.144,73.192,63,61.337,70.317,51.825,76.22,41.378,80.539,30.182,86.279,19.644,92.581,9.4317,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.18264,0.19679,0.14759,0.18766,0.14629,0.13904,0.1534,0.18616,0.17385,0.14801,0.15884,0.17973,0.1984,0.14516,0.14769,0.13659,0.18004,0.19212,0.14924,0.15911,0.18272,0.16835,0.17045,0.17014,0.18066,0.17567,0.16162,0.14508,0.14984,0.18713,0.14625,0.16379,0.18871,0.17742,0.17652,0.14731,0.14906,0.18429,0.17261,0.15858,0.16765,0.16782,0.19556,0.19028,0.15471,0.15621,0.1542,0.14905,0.16474,0.16937,0.15033,0.17432,0.17141,0.16983,0.15531,0.1884,0.18524,0.15347,0.18822,0.12937,0.17242,0.17085,0.14737,0.19232,0.15548,0.16157,0.1609,0.18536,0.1769,0.16929,0.15545,0.1521,0.1607,0.14918,0.15687,0.15938,0.1839,0.18998,0.17587,0.1626,0.17179,0.14724,0.15676,0.18574,0.1678,0.15946,0.17633,0.18789,0.15268,0.15584,0.14917,0.19095,0.16999,0.14401,0.16894,0.17695,0.16766,0.18813,0.13056,0.14588,0.19523,0.17254,0.14198,0.16466,0.13135,0.17577,0.20248,0.18376,0.17811,0.16609,0.14594,0.17127,0.19642,0.14217,0.16949,0.16701,0.16325,0.18466,0.16294,0.15265,783.35,844.78,723.25,838.16,692.1,688.4,718.39,807.24,790.13,727.65,723.78,787.49,839.35,707.53,722.1,698.14,773.52,834.61,708.94,744.43,823.84,782.58,753.06,770.64,789.73,788.65,751.85,718.31,704.45,827.29,707.38,754.56,813.88,797.55,768.61,714.39,716.63,806.58,773.65,749.2,752.77,762.74,826.58,812.24,725.86,738.25,723.44,716.81,769.14,778.96,706.49,795.57,780.98,779.8,732.49,832.84,793.32,729.06,821.94,671,779.88,770.77,701.25,836.66,731.22,747.74,754.41,818.8,776.49,768.46,734.95,722.5,750.29,712.74,729.18,743.66,816.37,828.21,802.62,745.71,775.83,714.96,733.89,817.21,764.86,734.42,785.94,813.82,725,725.45,721.11,825.52,782.68,708.1,766.88,776.65,766.29,802.52,685.39,712.81,843.72,761.7,702.36,741.57,691.06,785.33,858,785.8,789.2,743.61,728.23,772.8,842.86,688.68,769.72,746.87,778.79,821.23,748.83,711.19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m82,91,12,92,63,9,28,55,96,97,15,98,0.144,0.175,0.102,0.139,0.148,0.115,0.141,0.191,0.147,0.125,0.153,0.106,0.129,0.179,0.164,0.102,0.157,0.121,0.198,0.179,0.112,0.138,0.149,0.118,0.171,0.184,0.1,0.113,0.128,0.199,0.14,0.117,0.112,0.191,0.181,0.162,0.154,0.178,0.132,0.164,0.174,0.158,0.117,0.199,0.181,0.149,0.162,0.176,0.146,0.174,0.178,0.146,0.118,0.16,0.155,0.15,0.105,0.178,0.154,0.143,0.182,0.119,0.127,0.164,0.139,0.13,0.125,0.149,0.178,0.181,0.179,0.189,0.105,0.199,0.143,0.119,0.197,0.183,0.193,0.152,0.175,0.152,0.154,0.196,0.174,0.157,0.139,0.116,0.111,0.13,0.169,0.119,0.113,0.107,0.185,0.124,0.12,0.139,0.163,0.159,0.193,0.168,0.156,0.171,0.167,0.177,0.157,0.181,0.19,0.17,0.136,0.128,0.164,0.163,0.102,0.175,0.122,0.105,0.115,0.166,3.0143,3.6851,3.6014,3.974,2.812,3.2081,3.1738,3.925,4.1073,3.9774,3.0058,3.2596,3.3201,4.071,4.3701,3.8961,3.2445,3.5641,3.8934,4.1974,3.9013,4.3512,3.3784,3.6472,3.9797,4.3962,3.785,4.1762,3.4493,4.4059,3.9453,3.9476,3.8746,4.957,3.979,4.291,4.1596,4.4395,3.9469,4.62,4.0761,4.2472,3.9286,4.603,4.1765,4.4009,4.137,4.4232,4.3789,4.5292,4.0494,4.3664,3.9382,4.4254,4.6012,4.3101,3.4126,4.5336,4.4455,4.2787,4.82,4.1128,3.5841,4.4819,4.2879,4.2545,4.0653,4.2179,3.9651,4.5492,4.3519,4.5377,3.8902,4.5925,3.983,4.1279,4.5003,4.47,4.4973,4,4.2856,4.3255,4.0249,4.2777,4.5511,4.0967,4.3889,4.1732,3.8293,3.8549,4.4307,3.6104,4.1955,3.9625,4.3713,3.6186,3.7209,3.4143,4.5075,4.0988,4.1311,3.5509,3.7709,3.321,4.4165,3.9469,3.6786,3.3305,3.8398,3.155,4.1657,3.4854,3.6044,3.0862,3.241,3.0969,4.1805,3.2988,3.2808,3.0215,0,0,7.9372,9,15,18.701,21.891,28.525,28.217,38.723,33.891,49.297,41.701,58.407,47.204,69.071,50.737,80.539,58.296,89.859,53.145,92,50.663,80.26,52.566,68.412,56.677,57.138,63.032,46.959,71.43,38.387,79.672,29.666,87.044,20.197,93.316,9.9664,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.1766,0.1906,0.13677,0.16219,0.18179,0.15204,0.16992,0.19517,0.16385,0.14901,0.18039,0.14166,0.16251,0.18964,0.17627,0.1341,0.18397,0.15351,0.20003,0.18466,0.13968,0.15482,0.17352,0.14729,0.18399,0.18788,0.13254,0.13924,0.15912,0.19723,0.16258,0.14488,0.14162,0.18606,0.19049,0.17437,0.16384,0.1765,0.15063,0.16549,0.17797,0.16558,0.13793,0.18559,0.17935,0.15601,0.16762,0.17349,0.16066,0.17814,0.18606,0.1608,0.14442,0.16992,0.16897,0.16859,0.14319,0.18544,0.16997,0.16384,0.1881,0.14974,0.16202,0.17959,0.16356,0.15699,0.14078,0.15611,0.17774,0.17315,0.17408,0.17815,0.13278,0.19115,0.16104,0.1415,0.19095,0.18257,0.17787,0.15775,0.16934,0.15419,0.1588,0.18205,0.18923,0.18225,0.1656,0.14949,0.149,0.16444,0.18766,0.15866,0.14717,0.14452,0.19928,0.16271,0.1428,0.16022,0.16456,0.1664,0.1876,0.17841,0.15875,0.1732,0.1586,0.16987,0.16042,0.17916,0.18354,0.17896,0.14518,0.14694,0.17011,0.17528,0.14505,0.2029,0.15163,0.14705,0.15581,0.19756,771.05,818.72,701.86,762.31,777.49,723.54,755.47,843.21,764.65,729.04,774.14,697.98,738.7,827.29,794.4,693.75,782.92,725.17,844.89,815.7,700.27,741.64,759.31,709.75,793.81,823.49,680.4,701.59,726.04,846.26,743.03,705.32,698.21,832.43,817.44,777.09,753.36,799.63,719.07,768.6,783.61,759.12,688.91,823.72,798.71,738.85,758.7,780.02,749.43,791.67,810.06,749.23,704.59,770.97,772.05,763.14,692.18,818.53,770.04,752.71,830.83,719.06,733.3,791.68,751.74,737.32,694.89,731.12,786.82,791.07,787.98,803.18,676.3,831.41,737.23,698.98,829.53,809.21,807.52,734.13,770.38,734.93,737.83,811.43,817.7,789.52,761.7,724.09,715.57,746.94,810.65,729.5,720.1,710.07,846.4,738.15,703.83,733.39,771.65,764.96,827.58,778.63,744.04,765.22,761.08,786.27,745.16,792.5,821.52,778.68,727.27,714.65,770.6,769.04,710.78,828.27,743.9,715.95,732.51,815.35,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m82,91,12,92,63,9,28,55,96,97,15,98,0.122,0.148,0.149,0.102,0.158,0.142,0.158,0.192,0.133,0.11,0.12,0.13,0.187,0.155,0.2,0.128,0.106,0.13,0.2,0.175,0.192,0.16,0.127,0.196,0.123,0.14,0.129,0.164,0.142,0.196,0.197,0.109,0.193,0.18,0.171,0.136,0.168,0.181,0.183,0.181,0.132,0.118,0.154,0.125,0.179,0.104,0.142,0.178,0.108,0.169,0.123,0.112,0.131,0.101,0.163,0.133,0.2,0.109,0.19,0.15,0.111,0.186,0.111,0.165,0.124,0.145,0.157,0.192,0.128,0.139,0.12,0.134,0.112,0.155,0.156,0.162,0.123,0.143,0.104,0.104,0.131,0.149,0.169,0.176,0.14,0.176,0.173,0.163,0.114,0.129,0.153,0.182,0.14,0.197,0.167,0.131,0.156,0.137,0.192,0.104,0.123,0.109,0.181,0.119,0.175,0.156,0.183,0.2,0.115,0.115,0.164,0.103,0.182,0.138,0.14,0.157,0.134,0.13,0.12,0.172,2.9007,3.5326,4.0249,3.627,2.8514,3.3884,3.2796,3.965,4.0061,3.856,2.8566,3.4775,3.5825,3.8849,4.5075,4.1176,2.8961,3.6054,3.7274,4.0315,4.3088,4.3415,3.0903,4.0686,3.5918,4.1298,3.9946,4.7013,3.4942,4.4638,4.0727,3.8459,4.2198,4.7268,3.6597,4.0628,4.0621,4.6534,4.0709,4.7652,3.5632,4.0335,4.2071,4.3148,4.0385,4.0734,3.8758,4.788,4.1476,4.9121,3.8581,4.3683,4.1749,4.1969,4.4227,4.2423,3.9247,3.9106,4.4191,4.4235,4.1856,4.7167,3.5389,4.5574,4.1837,4.4104,4.6276,4.5972,3.819,4.3258,4.1149,4.1515,4.143,4.2359,4.2476,4.5817,4.1176,4.1324,4.0306,3.7533,4.1591,4.5183,4.4889,4.3481,4.2798,4.0576,4.4806,4.4033,3.8987,3.7084,4.1396,3.8335,4.2052,4.4605,4.1137,3.4817,4.2102,3.5186,4.921,3.7532,3.8218,3.2837,3.933,3.0237,4.4798,3.8056,3.839,3.4086,3.4946,2.988,4.6459,3.4343,3.8486,3.0838,3.445,2.9678,4.1869,3.4122,3.2409,2.9874,0,0,7.2109,9.5918,12.412,20.406,17.968,31.043,21.673,42.456,19.446,54.248,22.32,65.898,28,76.469,39.638,79.396,42.696,91,54.374,88.239,59.912,77.593,63,65.997,63,59.553,73.025,52.958,75.915,41.311,82,30.968,87.377,20.241,92.567,9.4209,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.16119,0.17375,0.16899,0.13655,0.18852,0.17099,0.18341,0.19825,0.15716,0.1406,0.15985,0.16073,0.19368,0.16937,0.19134,0.14745,0.14359,0.15458,0.18405,0.16611,0.17304,0.15349,0.14532,0.17798,0.15314,0.16009,0.15334,0.17074,0.1686,0.19409,0.18823,0.13104,0.18421,0.17073,0.17687,0.14891,0.17376,0.17554,0.18322,0.17432,0.15444,0.13873,0.17272,0.14987,0.19174,0.13521,0.16767,0.18278,0.15457,0.19638,0.17122,0.15583,0.17456,0.14745,0.16926,0.15019,0.19829,0.1352,0.18666,0.16039,0.14487,0.19521,0.15196,0.18259,0.15573,0.16965,0.17214,0.19609,0.15938,0.16228,0.14974,0.16038,0.14444,0.17692,0.17751,0.1781,0.15381,0.16922,0.14107,0.1441,0.16231,0.1722,0.18695,0.19336,0.15912,0.18659,0.17992,0.17405,0.14318,0.15714,0.16033,0.18241,0.15068,0.18454,0.16983,0.15221,0.17895,0.17245,0.19577,0.14264,0.15798,0.1522,0.17255,0.14175,0.16293,0.15848,0.17479,0.1895,0.15191,0.15757,0.1762,0.14236,0.19722,0.17474,0.16464,0.182,0.15206,0.15762,0.15185,0.19184,735.47,776.56,777.72,701.67,793.75,767.58,786.53,850.39,745.46,708.73,725.94,741.5,826.2,765.26,844.07,722.91,687.73,726.09,808.51,761.81,797.45,740.12,689.5,803.68,718.66,745.3,727.49,784.17,749.45,843.74,819.86,673.22,813.46,795.1,771.01,716.48,770.99,801.22,803.61,801.58,715.25,692.44,769.44,722.57,818.39,688.85,750.69,817.7,729.46,829.89,754.37,736.4,768.17,717.3,769.42,721.81,833.89,683.99,821.61,748.97,710.38,841.55,710.28,798.26,731.93,765.73,778.36,843.65,731.46,749.84,719.03,741.52,711.47,780.8,781.77,792.84,729.72,761.98,702.25,702.06,746.24,776.29,808.69,819.29,747.09,803.42,798.03,784.07,705.29,729.63,747.71,802.75,726.47,824.93,769.85,713.37,788.68,757.86,855.56,703.93,735.33,712.33,790.3,683.94,769.19,741.76,793.32,816.08,722.92,723.11,801.07,703.11,842.09,760.85,756.87,783.64,746.09,740.9,724.65,807.21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m82,91,12,92,63,9,28,55,96,97,15,98,0.179,0.109,0.158,0.153,0.143,0.121,0.143,0.185,0.173,0.144,0.197,0.179,0.104,0.175,0.172,0.104,0.193,0.147,0.124,0.145,0.184,0.125,0.192,0.106,0.109,0.16,0.151,0.167,0.104,0.126,0.171,0.134,0.13,0.182,0.18,0.175,0.163,0.196,0.102,0.115,0.146,0.128,0.129,0.199,0.104,0.102,0.194,0.116,0.104,0.146,0.189,0.13,0.194,0.187,0.128,0.143,0.193,0.112,0.106,0.119,0.122,0.118,0.103,0.172,0.116,0.145,0.112,0.136,0.14,0.192,0.171,0.191,0.149,0.117,0.141,0.159,0.154,0.19,0.159,0.125,0.196,0.117,0.148,0.189,0.171,0.154,0.169,0.144,0.14,0.163,0.174,0.194,0.184,0.197,0.111,0.199,0.12,0.108,0.166,0.168,0.198,0.177,0.139,0.16,0.161,0.177,0.158,0.139,0.168,0.124,0.135,0.107,0.182,0.107,0.13,0.193,0.156,0.122,0.2,0.188,3.1321,3.2158,4.0382,4.0311,2.7636,3.2118,3.0479,3.7424,4.0688,3.9455,3.0537,3.6039,3.0882,4.0403,4.315,3.8722,3.3493,3.7521,3.4294,4.0517,4.4351,4.2557,3.5618,3.6153,3.5614,4.4223,4.2891,4.8658,3.294,4.0476,4.0469,4.0702,3.8925,4.7777,3.8465,4.3485,4.3258,4.8653,3.6961,4.3192,3.949,4.2466,4.0877,5.032,3.5707,4.1318,4.3154,4.2484,3.6958,4.4571,3.8586,4.1965,4.1984,4.8102,4.2933,4.5885,4.0415,4.1625,3.8785,4.3532,4.4018,4.2478,3.4976,4.7049,4.1803,4.5484,4.098,4.0442,3.7047,4.5473,4.5438,4.4944,4.4892,3.8675,3.9358,4.4343,4.3824,4.462,4.4603,3.8314,4.4863,4.0324,4.2074,4.3009,4.4499,3.8741,4.4038,4.2027,4.053,3.9151,4.1854,3.8063,4.4602,4.3501,3.5442,3.802,3.7271,3.1991,4.554,4.1819,4.1624,3.6087,3.7187,3.3355,4.4883,4.0449,3.7478,3.184,3.8557,3.0383,4.3715,3.4665,3.8326,2.8952,3.2502,3.0091,4.1981,3.2248,3.5613,2.9527,0,0,6.0879,10.341,11.466,21.068,15.002,32.536,21.049,42.901,28.888,51.986,33.404,63.104,30.392,74.72,29.089,86.649,40.273,91,52.273,91,63,85.621,63,73.621,64.2,61.681,70.754,51.629,75.865,40.772,79.159,29.233,85.762,19.213,92.063,9,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.19409,0.1428,0.17008,0.16673,0.17388,0.15242,0.15569,0.174,0.16327,0.1464,0.18863,0.17201,0.14074,0.18218,0.17718,0.13212,0.20135,0.16643,0.15645,0.16537,0.18772,0.14814,0.20258,0.13973,0.15089,0.18162,0.17652,0.18173,0.14943,0.15981,0.17428,0.14891,0.14794,0.17317,0.1822,0.17349,0.18251,0.19879,0.14136,0.1458,0.17434,0.15719,0.16122,0.20074,0.14585,0.13794,0.20544,0.14881,0.13295,0.15667,0.19164,0.14794,0.19094,0.17986,0.16252,0.17123,0.21323,0.15043,0.14821,0.15438,0.15977,0.15802,0.15282,0.19544,0.15702,0.17693,0.13595,0.15495,0.1616,0.18694,0.17365,0.18691,0.16284,0.1455,0.16314,0.17043,0.16753,0.19056,0.16727,0.14966,0.19084,0.14124,0.16243,0.18856,0.1729,0.16793,0.17211,0.15736,0.15615,0.17355,0.1643,0.18028,0.16724,0.17596,0.12903,0.18318,0.14375,0.14009,0.16721,0.1726,0.19157,0.18478,0.15575,0.17439,0.16228,0.17743,0.16846,0.1617,0.1868,0.16356,0.15734,0.14475,0.19645,0.15111,0.14589,0.18844,0.15279,0.14049,0.18621,0.18618,827.8,702.34,781.65,773.5,757.35,721.47,721.33,794.87,765.62,721,810.12,784.35,688.88,801.45,796.87,687.49,838.8,756.26,724.48,756.68,829.3,724.53,840.13,692.33,715.74,797.71,783.51,809.04,704.71,741.76,777.01,717.41,711.51,802.72,798.11,779.76,794.9,855.67,693.82,715.6,764.76,735.85,740.1,860.2,697.78,694.17,851.56,716.55,673.8,739.95,817.96,714.91,823.42,813.16,749.36,772.46,864.18,721.85,710.1,732.36,746.68,738.89,713.93,827.47,734.38,782.28,689.91,727.48,734.32,825.43,780.49,822.75,757.87,705.31,744.23,772.31,762.84,830.36,766.93,711.71,833.24,698.82,746.66,821.57,787.09,758.76,782.22,742.93,735.3,771.51,759.28,798.17,783.33,802.08,658.78,803.63,704.29,683.79,775.86,779.02,833.9,802.65,736.46,768.36,769.67,805.47,763.57,734.52,809.35,736.97,754.21,708.3,839.07,707.68,707.77,814.3,746.93,693.99,822.33,805.76,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m82,91,12,92,63,9,28,55,96,97,15,98,0.198,0.138,0.152,0.167,0.15,0.173,0.102,0.168,0.132,0.188,0.114,0.103,0.106,0.152,0.121,0.176,0.105,0.123,0.183,0.104,0.179,0.111,0.185,0.179,0.122,0.14,0.146,0.139,0.121,0.122,0.169,0.115,0.128,0.106,0.122,0.103,0.17,0.14,0.138,0.149,0.126,0.136,0.159,0.122,0.146,0.158,0.113,0.131,0.155,0.14,0.172,0.123,0.147,0.182,0.114,0.19,0.145,0.148,0.164,0.154,0.183,0.118,0.113,0.126,0.2,0.109,0.153,0.178,0.184,0.196,0.2,0.155,0.124,0.152,0.174,0.148,0.127,0.183,0.183,0.155,0.16,0.151,0.178,0.189,0.1,0.198,0.134,0.14,0.137,0.185,0.174,0.118,0.141,0.1,0.181,0.123,0.108,0.166,0.122,0.155,0.116,0.179,0.199,0.11,0.184,0.149,0.105,0.152,0.148,0.19,0.134,0.176,0.113,0.139,0.154,0.118,0.119,0.124,0.175,0.195,3.1131,3.3111,3.8484,3.9838,2.715,3.4071,2.9834,3.8881,4.0568,4.5905,2.8573,3.3147,3.2224,4.0203,4.0673,4.7357,2.9997,3.6959,3.7455,3.5772,4.3509,4.0057,3.4915,4.0995,3.7071,4.2785,4.2911,4.6352,3.4594,4.0331,4.3032,4.2564,4.1315,4.3856,3.6878,4.0586,4.2691,4.4382,3.9187,4.6506,3.6883,4.3575,4.3243,4.3697,3.8638,4.7215,3.7008,4.4494,4.186,4.443,3.7285,4.1266,3.9046,4.8241,3.972,4.8029,3.6269,4.3516,4.2327,4.5252,4.7633,4.2137,3.5471,4.2702,4.6594,4.1231,4.2921,4.3064,3.912,4.511,4.4862,4.1441,4.1776,4.2566,4.2332,4.4299,4.0444,4.4856,4.4556,4.022,4.167,4.3098,4.2312,4.2353,3.7764,4.2771,4.2381,4.3204,3.9945,4.1643,4.4188,3.5845,4.4726,3.8622,4.2934,3.5916,3.6993,3.6849,4.2801,4.2171,3.6591,3.712,4.1524,3.0738,4.7579,3.9169,3.3797,3.2995,3.6353,3.2832,4.2337,3.8734,3.2943,3.0149,3.5027,2.7594,3.9952,3.3403,3.5421,3.0473,0,0,6.9217,9.8026,12.692,20.324,17.306,31.402,21.789,42.533,24.923,54.116,26.354,66.031,28,77.917,28,89.917,39.951,90.999,44.973,87.084,55.858,82.033,55.935,70.033,58.103,58.231,63.353,47.44,70.069,37.495,77.356,27.961,84.893,18.623,92.069,9.0052,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.19114,0.15158,0.15494,0.16296,0.16631,0.17307,0.14826,0.18962,0.1613,0.19528,0.16008,0.14546,0.15322,0.18168,0.15679,0.19096,0.15482,0.16255,0.18651,0.13226,0.17728,0.13327,0.19061,0.18006,0.16288,0.17108,0.17557,0.1664,0.1648,0.15928,0.20145,0.15837,0.17103,0.14879,0.17081,0.14955,0.1855,0.16213,0.16633,0.16648,0.15956,0.15999,0.18169,0.15277,0.17721,0.1766,0.15256,0.15916,0.16854,0.15509,0.1851,0.14578,0.16603,0.17946,0.14138,0.18607,0.16885,0.16299,0.1754,0.16532,0.19232,0.15017,0.15329,0.15609,0.20459,0.14353,0.15137,0.1668,0.17474,0.17512,0.17768,0.15428,0.14796,0.16785,0.18313,0.16311,0.15174,0.18621,0.1729,0.15999,0.16166,0.15419,0.17232,0.17894,0.13329,0.19898,0.15575,0.15932,0.16067,0.192,0.18844,0.15578,0.16419,0.13723,0.19456,0.1598,0.14329,0.18765,0.14849,0.17402,0.15042,0.19614,0.19577,0.1457,0.17978,0.1658,0.13817,0.17478,0.16513,0.19648,0.1486,0.18109,0.14298,0.16572,0.17057,0.15275,0.13983,0.15086,0.18398,0.20201,825.27,724.41,747.2,771.36,743.01,777.58,703.7,812.7,754.3,855.19,723.74,704.52,717.06,793.73,742.87,834.46,715.15,744.58,808.82,673.64,803.08,686.16,811.28,801.8,741.95,771.95,782.77,771.5,740.06,741.05,831.63,741.66,764.51,727.45,753.06,720.42,803.69,755.47,753.29,771.51,732.13,747.7,793.33,732.89,773.61,793.52,717.55,746.58,763.98,740.27,792.18,714.11,751.01,815.61,698.85,829.82,750.54,755.6,779.09,762.35,834.39,719.69,712.6,734.15,858.75,703.87,724.49,772.47,781.97,799.36,803.03,726.64,716.55,762.22,797.96,757.11,721.12,819.95,791.97,739.61,748.14,734.65,783.98,800.02,679.37,845.22,736.35,746.58,739.73,825.53,814.27,723.68,761.95,694.33,835.16,730.89,704.35,799.69,728.43,783.21,717.29,829.38,845.34,695.77,824.02,760.08,686.45,762.31,757.44,833.54,735.75,803.77,700.41,742.53,770.86,713.48,714.87,724.01,803.88,843.15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m82,91,12,92,63,9,28,55,96,97,15,98,0.193,0.175,0.155,0.121,0.1,0.178,0.131,0.121,0.117,0.181,0.162,0.164,0.193,0.19,0.168,0.197,0.123,0.101,0.193,0.126,0.198,0.122,0.128,0.191,0.182,0.109,0.158,0.115,0.107,0.161,0.107,0.147,0.162,0.194,0.193,0.161,0.15,0.165,0.193,0.2,0.103,0.197,0.181,0.107,0.18,0.166,0.191,0.146,0.15,0.184,0.148,0.153,0.124,0.133,0.129,0.104,0.158,0.185,0.177,0.124,0.159,0.149,0.182,0.135,0.103,0.189,0.167,0.118,0.12,0.14,0.148,0.133,0.152,0.19,0.163,0.137,0.186,0.17,0.159,0.152,0.108,0.159,0.14,0.155,0.112,0.179,0.151,0.183,0.12,0.194,0.158,0.107,0.131,0.199,0.161,0.142,0.192,0.136,0.175,0.114,0.17,0.149,0.142,0.123,0.199,0.112,0.12,0.138,0.113,0.194,0.191,0.144,0.149,0.106,0.184,0.178,0.139,0.148,0.166,0.147,3.1422,3.5871,3.9472,3.6966,2.5121,3.4901,3.0989,3.4818,3.789,4.4243,3.0251,3.6737,3.5348,4.0576,4.1608,4.5987,2.9412,3.305,3.7406,3.8005,4.3753,4.1015,3.1352,4.1883,3.9968,3.9571,4.2136,4.2887,3.2403,4.3599,3.43,4.2908,3.9703,4.8569,3.767,4.3459,3.8625,4.4994,4.0135,4.8316,3.2591,4.7011,4.1593,4.0115,3.7946,4.5248,3.9591,4.4131,4.1843,4.8814,3.6244,4.4628,3.7523,4.418,4.0799,4.0888,3.7058,4.7299,4.2409,4.3354,4.3425,4.4698,4.0265,4.3432,3.626,4.797,4.5634,4.1895,3.8747,4.5761,4.1807,4.3268,4.2111,4.4027,4.1621,4.2582,4.2597,4.2369,4.4608,4.1059,3.9111,4.5516,4.1236,4.1043,3.9428,4.0237,4.2384,4.4879,3.9131,4.0941,4.2916,3.3844,4.216,4.5669,4.1814,3.6354,4.2931,3.3944,4.6007,3.7092,4.0254,3.4449,3.8906,3.2148,4.9462,3.6658,3.6148,3.2733,3.3993,3.3022,4.7198,3.67,3.5849,2.8267,3.5839,2.9711,4.0795,3.4207,3.418,2.8096,0,0,5.6027,10.612,9.7037,21.889,12.731,33.501,14.698,45.339,16.002,57.268,19.389,68.78,19.611,80.778,28,89.359,31.922,91,36.84,80.054,42.845,69.665,51.158,61.011,61.621,55.134,73.502,53.45,76.858,41.929,81.418,30.83,87.413,20.434,93.757,10.248,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.19566,0.17962,0.16269,0.14144,0.13802,0.18258,0.16181,0.14989,0.14337,0.1815,0.18469,0.17874,0.19,0.18236,0.16765,0.18052,0.15034,0.12913,0.19056,0.14534,0.18648,0.13907,0.15419,0.18436,0.19892,0.14438,0.17988,0.14586,0.15055,0.18041,0.13595,0.15639,0.17005,0.18045,0.19192,0.16525,0.15978,0.16265,0.18532,0.18041,0.13176,0.18008,0.17965,0.12924,0.18308,0.16608,0.18803,0.15391,0.16842,0.18382,0.1732,0.16749,0.1537,0.15336,0.15607,0.1355,0.18169,0.18861,0.18876,0.14936,0.17114,0.16275,0.18996,0.15395,0.1363,0.1859,0.18571,0.15223,0.15735,0.16567,0.1761,0.16294,0.15806,0.18008,0.16586,0.14722,0.17924,0.16954,0.17403,0.17297,0.14086,0.17303,0.16398,0.17513,0.1369,0.18364,0.16266,0.18103,0.14353,0.19223,0.17074,0.14213,0.15209,0.19437,0.17401,0.16666,0.18624,0.15918,0.17227,0.13909,0.1754,0.16782,0.16854,0.16139,0.19576,0.14736,0.15451,0.17243,0.14292,0.20015,0.1825,0.16319,0.16765,0.1436,0.17923,0.18252,0.14512,0.15843,0.17008,0.16462,832.55,793.57,762.93,708.48,675.34,809.87,736.78,719.81,714.18,825.24,786.9,789.53,819.04,813.93,770.58,823.52,700.92,665.07,822,707.29,829.15,701.05,711.6,819.28,838.88,710.24,790.48,720.28,707.8,795.28,677.47,740.2,764.66,822.51,822.42,763.01,734.61,757.25,811.1,819.22,660.95,816.25,800.4,673.92,799.8,766.43,815.96,736.45,762.78,826.16,760.83,767.19,721.81,736.31,731.61,690.59,778.73,830,818.34,724.02,769.84,753.87,817.18,731.97,680.9,827.34,806.85,727.7,732.32,763.36,777.08,753,740.44,808.8,758.15,717.05,803.39,769.03,782.89,771.79,701.86,782.66,753.19,777.6,689.25,804.85,751.55,810.55,702.26,828.3,774.13,692.81,732.15,847.33,779.68,750.06,828.3,730.81,792.07,695.69,784.78,752.34,763.76,733.32,863.98,715.22,728.45,758.64,701.53,839.69,835,750.8,759.47,691.1,808.39,799.82,728.16,741.83,770.8,741.97,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m82,91,12,92,63,9,28,55,96,97,15,98,0.156,0.134,0.116,0.117,0.105,0.181,0.175,0.186,0.171,0.116,0.174,0.156,0.11,0.191,0.191,0.163,0.142,0.124,0.109,0.181,0.197,0.101,0.148,0.11,0.142,0.158,0.143,0.101,0.199,0.193,0.178,0.14,0.169,0.171,0.134,0.104,0.162,0.195,0.175,0.123,0.156,0.139,0.155,0.173,0.149,0.192,0.169,0.135,0.161,0.145,0.179,0.1,0.159,0.102,0.198,0.151,0.128,0.111,0.134,0.164,0.198,0.109,0.121,0.127,0.177,0.107,0.19,0.122,0.172,0.176,0.19,0.12,0.173,0.135,0.139,0.151,0.113,0.136,0.194,0.118,0.131,0.181,0.125,0.116,0.119,0.199,0.141,0.139,0.176,0.106,0.117,0.172,0.132,0.17,0.102,0.159,0.154,0.114,0.111,0.193,0.151,0.105,0.115,0.167,0.148,0.16,0.146,0.193,0.183,0.198,0.194,0.173,0.105,0.2,0.147,0.106,0.2,0.157,0.146,0.101,3.083,3.4596,3.7641,3.8004,2.6176,3.6141,3.241,3.7697,4.1339,3.7355,3.0055,3.4962,3.1219,4.0693,4.4645,4.4065,3.1119,3.5214,3.3785,4.3025,4.6795,4.0249,3.4198,3.6538,3.7252,4.1672,4.1415,3.9647,3.8079,4.3288,4.1721,4.2314,4.3059,4.8097,3.6189,3.8095,4.1023,4.7296,4.1233,4.2491,3.8146,4.2258,4.0835,4.6237,3.7492,4.7891,3.9436,4.2574,4.364,4.6067,3.9078,3.9972,4.1115,4.1217,4.7524,4.5121,3.6426,4.0777,4.0405,4.6342,4.9743,4.0618,3.5835,4.2175,4.6273,4.0622,4.7956,3.881,3.8609,4.3817,4.6538,3.8857,4.8101,4.1299,3.9752,4.4508,4.0843,4.1467,4.8932,3.8288,4.0484,4.6641,4.1488,3.8047,4.1021,4.2215,4.24,4.2279,4.4687,3.5315,3.9824,3.9048,4.2915,4.4308,3.7092,3.7978,4.1883,3.3464,4.1496,4.4722,4.0438,3.2449,3.5485,3.365,4.3558,3.9181,3.7061,3.4458,3.7128,3.1938,4.508,3.6855,3.1083,3.1624,3.5005,2.718,4.7389,3.5978,3.422,2.6542,0,0,7.9372,9.0001,14.522,19.032,20.598,29.38,26.863,39.615,28.011,51.56,28,63.56,27.571,75.552,29.548,87.388,41.286,84.892,51.619,90.993,63,87.189,63,75.189,67.824,64.201,72.945,53.349,76.761,41.972,82.081,31.216,88.326,20.969,94.08,10.438,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.18658,0.16616,0.14855,0.14897,0.15208,0.19767,0.1783,0.17902,0.16588,0.133,0.18034,0.16345,0.1429,0.18879,0.18441,0.16725,0.16723,0.14942,0.14877,0.19228,0.19849,0.13474,0.17913,0.14658,0.16144,0.16766,0.15756,0.12716,0.19783,0.18836,0.18696,0.15994,0.1795,0.1753,0.16222,0.13608,0.17085,0.18493,0.17913,0.1415,0.17,0.15358,0.16395,0.16982,0.16356,0.17979,0.17474,0.14813,0.18062,0.1663,0.19817,0.13624,0.18199,0.13668,0.19627,0.16742,0.15978,0.14127,0.16002,0.17523,0.20116,0.14519,0.16063,0.15854,0.19103,0.14344,0.17956,0.14346,0.17859,0.17538,0.18111,0.14188,0.18403,0.16387,0.16866,0.1724,0.14658,0.16446,0.19489,0.15185,0.15985,0.18893,0.15401,0.15047,0.14706,0.20213,0.16254,0.16119,0.18455,0.14252,0.14848,0.19025,0.15704,0.18304,0.13874,0.18244,0.17675,0.15493,0.14355,0.20027,0.17617,0.14832,0.14039,0.17931,0.15565,0.16854,0.16141,0.1947,0.17042,0.18476,0.16791,0.16486,0.12581,0.18623,0.17034,0.1475,0.19141,0.17626,0.17051,0.14397,790,755.25,726.36,728.53,708.98,842.88,779.47,809.58,774.92,690.31,779.34,751.52,689.84,828.49,829.07,774.36,741.91,712.31,704.79,831.38,856.8,692.21,768.82,706.58,737.59,762.05,739.71,672.73,837.51,828.98,815.7,744.75,790.55,794.51,736.56,687.03,766.48,829.43,786.91,707.13,758.63,731.09,750.53,777.86,742.19,820.75,773.2,719.69,789.48,764.24,830.44,692.21,787.71,694.7,848.98,764.1,729.03,701.7,738.54,784.75,859.1,705.88,726.89,736.73,827.59,702.92,815.33,698.57,775.98,783.08,816.78,695.43,809.22,749.59,756.8,776.16,714.72,751.14,846.47,714.99,736.61,827.66,727.06,711.82,714.94,851.96,750.78,748.1,806.05,694.04,719.67,806.74,744.62,805.35,695.36,786.86,782.51,718.65,713.76,857.73,778.99,703.88,697.75,778.7,750.39,769.61,747.81,831.65,783.11,803.88,800.35,757.04,652.55,806.56,764.96,699.17,859.97,781.83,764.49,691.16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[1mdiff --git a/env/Env.py b/env/Env.py[m
[1mindex 85fb697..2d24f9a 100644[m
[1m--- a/env/Env.py[m
[1m+++ b/env/Env.py[m
[36m@@ -4,7 +4,7 @@[m [mimport numpy as np[m
 [m
 Velocity = namedtuple("velocity", ['x', 'y', 'val'])[m
 Action = namedtuple('action', ['position', 'velocity'])[m
[31m-Observation = namedtuple('observation', ['uav_position', 'md_task_size', 'data_rate', 'constraints'])[m
[32m+[m[32mObservation = namedtuple('observation', ['uav_position', 'task_size', 'data_rate', 'task_latency', 'constraints'])[m
 [m
 [m
 class BaseEnv(object):[m
[1mdiff --git a/env/Solution.py b/env/Solution.py[m
[1mindex c0287da..2b6aa36 100644[m
[1m--- a/env/Solution.py[m
[1m+++ b/env/Solution.py[m
[36m@@ -6,8 +6,8 @@[m [mimport numpy as np[m
 class Solution:[m
     __bandwidth = 10[m
     __storage = 50[m
[31m-    __energy_budget = 10 ^ 6[m
[31m-    __frequency = 5 * 10 ^ 3[m
[32m+[m[32m    __energy_budget = 10 ** 6[m
[32m+[m[32m    __frequency = 5 * 10 ** 3[m
     __channel_power = -50[m
     __noise_pose = -130[m
     __transmit_power = 1[m
[36m@@ -57,14 +57,6 @@[m [mclass Solution:[m
     def solve(self):[m
         pass[m
 [m
[31m-    def uavFlyEnergy(self, velocity):[m
[31m-        '''[m
[31m-        uavFlyEnergy: 计算UAV的飞行能耗[m
[31m-[m
[31m-            @velocity: UAV的速度向量[m
[31m-        '''[m
[31m-        pass[m
[31m-[m
     def Db2Dec(self, dB):[m
         '''[m
             dB 为矩阵[m
[36m@@ -195,7 +187,7 @@[m [mclass Solution:[m
 [m
             @return(latency) 本地处理时延矩阵[m
         """[m
[31m-        task_type * (1 - task_offloading_portion) * self.__md_tasks * self.__BITS[m
[32m+[m[32m        task_type * (1 - task_offloading_portion) * self.__md_tasks * self.__BITS / self.__md_frequency[m
 [m
     def offloadingLatency(self, trajectory, bandwidth, task_type, task_portion, allocated_frequency):[m
         """[m
[36m@@ -288,3 +280,31 @@[m [mclass Solution:[m
         # e_trn_matrix, e_trn = self.mdTransmitionEnergy(uav_position, bandwidth, offloading_portion)[m
 [m
         return (e_trn + e_cac + e_exe)[m
[32m+[m
[32m+[m[32m    def slotLocalLatency(self, task_size, task_type, offloading_portion):[m
[32m+[m[32m        latency = task_type * (1 - offloading_portion) * task_size * self.__BITS / self.__md_frequency[m
[32m+[m[32m        return latency[m
[32m+[m
[32m+[m[32m    def slotOffloadingLatency(self, task_size, uav_position, bandwidth, task_type, task_portion, allocated_frequency):[m
[32m+[m[32m        rate = self.slotDataRate(uav_position, bandwidth)[m
[32m+[m[32m        latency_trn = task_size * task_portion / rate[m
[32m+[m[32m        latency_exe = task_type * task_size * task_portion * self.__BITS / allocated_frequency[m
[32m+[m[32m        return latency_exe + latency_trn[m
[32m+[m
[32m+[m[32m    def slotLatency(self, task_size, uav_position, bandwidth, task_type, task_portion, allocated_frequency):[m
[32m+[m[32m        loc = self.slotLocalLatency(task_size, task_type, task_portion)[m
[32m+[m[32m        off = self.slotOffloadingLatency(task_size, uav_position, bandwidth, task_type, task_portion,[m
[32m+[m[32m                                         allocated_frequency)[m
[32m+[m
[32m+[m[32m        return np.maximum(loc, off)[m
[32m+[m
[32m+[m[32m    def isUnderLatencyConstraint(self, task_size, uav_position, bandwidth, task_type, task_portion,[m
[32m+[m[32m                                 allocated_frequency):[m
[32m+[m[32m        latency = self.slotLatency(task_size, uav_position, bandwidth, task_type, task_portion, allocated_frequency)[m
[32m+[m[32m        latency = (latency <= self.__latency)[m
[32m+[m[32m        return latency[m
[32m+[m
[32m+[m[32m    def isUnderFrequencyConstraint(self, task_type, allocated_frequency):[m
[32m+[m[32m        total = task_type * allocated_frequency[m
[32m+[m[32m        total = total.sum()[m
[32m+[m[32m        return total <= self.__frequency[m
[1mdiff --git a/env/trajectory/SimulatedEnv.py b/env/trajectory/SimulatedEnv.py[m
[1mindex 1ceb20f..f9007e9 100644[m
[1m--- a/env/trajectory/SimulatedEnv.py[m
[1m+++ b/env/trajectory/SimulatedEnv.py[m
[36m@@ -1,7 +1,7 @@[m
 import os[m
 from math import sqrt[m
 [m
[31m-from env.Env import BaseEnv, ActionSet, Velocity, Action[m
[32m+[m[32mfrom env.Env import BaseEnv, ActionSet, Velocity, Action, Observation[m
 import pandas as pd[m
 import numpy as np[m
 [m
[36m@@ -15,7 +15,7 @@[m [mclass SimulatedEnv(BaseEnv):[m
                  start_point=(0, 0),[m
                  end_point=(100, 0),[m
                  latency=0.5,[m
[31m-                 md_number=10,[m
[32m+[m[32m                 md_number=6,[m
                  slot_number=20,[m
                  max_velocity=15,[m
                  reward_radius=5,[m
[36m@@ -150,6 +150,18 @@[m [mclass SimulatedEnv(BaseEnv):[m
         uav_position = np.array((x, y))[m
 [m
         # 1. 判断约束条件是否满足 TODO[m
[32m+[m[32m        # 是否满足时间片时延约束[m
[32m+[m[32m        isUnderLatencyConstraint = self.__solution.isUnderLatencyConstraint(sol_tasks, uav_position, sol_bandwidth,[m
[32m+[m[32m                                                                            sol_types, sol_offloading,[m
[32m+[m[32m                                                                            sol_frequency)[m
[32m+[m[32m        # 是否满足CPU频率约束[m
[32m+[m[32m        isUnderFrequencyConstraint = self.__solution.isUnderFrequencyConstraint(sol_types, sol_frequency)[m
[32m+[m[32m        rate = self.__solution.slotDataRate(uav_position, sol_bandwidth)[m
[32m+[m[32m        task_latency = self.__solution.slotLatency(task_size=sol_tasks,[m
[32m+[m[32m                                                   uav_position=uav_position,[m
[32m+[m[32m                                                   bandwidth=sol_bandwidth, task_type=sol_types,[m
[32m+[m[32m                                                   task_portion=sol_offloading,[m
[32m+[m[32m                                                   allocated_frequency=sol_frequency)[m
 [m
         # 2. 计算能耗和轨迹奖励[m
         if 0 <= x <= 100 and 0 <= y <= 100:[m
[36m@@ -168,20 +180,24 @@[m [mclass SimulatedEnv(BaseEnv):[m
             t_reward = -1[m
 [m
         # 3. 返回相关信息[m
[32m+[m[32m        observation = Observation(uav_position=uav_position, task_size=sol_tasks, data_rate=rate,[m
[32m+[m[32m                                  task_latency=task_latency,[m
[32m+[m[32m                                  constraints=(isUnderLatencyConstraint, isUnderFrequencyConstraint))[m
[32m+[m
         reward = 0.2 * t_reward + 0.8 * e_reward[m
 [m
[31m-        return (done, reward)[m
[32m+[m[32m        return (done, observation, reward)[m
 [m
 [m
 if __name__ == '__main__':[m
     work_dir = '/Users/yulu/workspace/UAV_RL/data'[m
[31m-    file_path = os.path.join(work_dir, 'data.csv')[m
[32m+[m[32m    file_path = os.path.join(work_dir, 'data_1.csv')[m
     senv = SimulatedEnv(file_path)[m
 [m
[31m-    # for i in range(0, 20):[m
[31m-    #     v = senv.sample()[m
[31m-    #     current_position = (0, 0)[m
[31m-    #     print(senv.step(Action(velocity=v, position=current_position)))[m
[32m+[m[32m    for i in range(0, 20):[m
[32m+[m[32m        v = senv.sample()[m
[32m+[m[32m        current_position = (0, 0)[m
[32m+[m[32m        print(senv.step(Action(velocity=v, position=current_position)))[m
     #[m
     # from itertools import product[m
     #[m

[33mcommit 57311424498ce123bb54ee250c815bc2d5619df0[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sun Aug 9 10:03:51 2020 +0800

    修改奖励函数，超出步数抛出异常

[1mdiff --git a/env/Env.py b/env/Env.py[m
[1mindex 2c1222b..85fb697 100644[m
[1m--- a/env/Env.py[m
[1m+++ b/env/Env.py[m
[36m@@ -2,6 +2,10 @@[m [mfrom collections import namedtuple[m
 [m
 import numpy as np[m
 [m
[32m+[m[32mVelocity = namedtuple("velocity", ['x', 'y', 'val'])[m
[32m+[m[32mAction = namedtuple('action', ['position', 'velocity'])[m
[32m+[m[32mObservation = namedtuple('observation', ['uav_position', 'md_task_size', 'data_rate', 'constraints'])[m
[32m+[m
 [m
 class BaseEnv(object):[m
     def __init__(self, start_point=(0, 0), end_point=(100, 0), latency=0.5, md_number=4, slot_number=20,[m
[36m@@ -26,10 +30,6 @@[m [mclass BaseEnv(object):[m
         pass[m
 [m
 [m
[31m-Velocity = namedtuple("velocity", ['x', 'y', 'val'])[m
[31m-Action = namedtuple('action', ['position', 'velocity'])[m
[31m-[m
[31m-[m
 class ActionSet:[m
 [m
     def __init__(self, set) -> None:[m
[1mdiff --git a/env/trajectory/SimulatedEnv.py b/env/trajectory/SimulatedEnv.py[m
[1mindex 3380ec8..1ceb20f 100644[m
[1m--- a/env/trajectory/SimulatedEnv.py[m
[1m+++ b/env/trajectory/SimulatedEnv.py[m
[36m@@ -21,12 +21,22 @@[m [mclass SimulatedEnv(BaseEnv):[m
                  reward_radius=5,[m
                  energy_reward_coefficient=0.8,[m
                  trajectory_reward_coefficient=0.2) -> None:[m
[32m+[m[32m        super().__init__(start_point, end_point, latency, md_number, slot_number, max_velocity)[m
[32m+[m[32m        self.__load_csv_data(filepath, md_number, slot_number)[m
 [m
[31m-        self.__step = 0[m
[32m+[m[32m        self.__step = -1[m
         self.__action_space = [][m
[32m+[m[32m        self.__trajectory = pd.DataFrame(np.zeros(shape=(2, slot_number)))[m
[32m+[m
         self.__reward_radius = reward_radius[m
         self.__energy_reward_coefficient = energy_reward_coefficient,[m
         self.__trajectory_reward_coefficient = trajectory_reward_coefficient[m
[32m+[m
[32m+[m[32m        # 模拟求解,生成动作空间[m
[32m+[m[32m        self.__solution = Solution(self.md_position, self.tasks, slot_number, latency)[m
[32m+[m[32m        self.__generate_action_space()[m
[32m+[m
[32m+[m[32m    def __load_csv_data(self, filepath, md_number, slot_number):[m
         self.data = pd.read_csv(filepath, header=None)[m
         row = np.random.randint(0, 9)[m
         # MD Position[m
[36m@@ -34,7 +44,6 @@[m [mclass SimulatedEnv(BaseEnv):[m
         idx_e = (2 * md_number - 1)[m
         vals = self.data.loc[row, idx_s:idx_e].values[m
         self.md_position = np.reshape(vals, (2, md_number), order="F")[m
[31m-        super().__init__(start_point, end_point, latency, md_number, slot_number, max_velocity)[m
 [m
         # MD Tasks Matrix[m
         idx_s = idx_e + 1[m
[36m@@ -73,11 +82,6 @@[m [mclass SimulatedEnv(BaseEnv):[m
         idx_e = idx_e + md_number * slot_number[m
         self.offloading = np.reshape(self.data.loc[row, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
 [m
[31m-        self.__solution = Solution(self.md_position, self.tasks, slot_number, latency)[m
[31m-[m
[31m-        # print(self.offloading)[m
[31m-        self.__generate_action_space()[m
[31m-[m
     def __generate_action_space(self) -> ActionSet:[m
         """[m
         创建动作空间[m
[36m@@ -110,43 +114,40 @@[m [mclass SimulatedEnv(BaseEnv):[m
         :param action: Agent所采取的动作[m
         :return: (观察，奖励，是否成功等相关信息)[m
         """[m
[31m-        self.__step = 1[m
         done = False[m
         t_reward = 0[m
         e_reward = 0[m
         t_ce = self.__trajectory_reward_coefficient[m
         e_ce = self.__energy_reward_coefficient[m
 [m
[31m-        sol_point = self.trajectory[:, self.__step][m
[31m-        sol_tasks = self.tasks[:, self.__step - 1][m
[31m-        sol_bandwidth = self.bandwidth[:, self.__step - 1][m
[31m-        sol_frequency = self.frequency[:, self.__step - 1][m
[31m-        sol_offloading = self.offloading[:, self.__step - 1][m
[31m-        sol_types = self.task_type[:, self.__step - 1][m
[31m-[m
[31m-        # action_end = action.p_end  # 时间到达点[m
[31m-[m
[31m-        # action_vel = action.velocity  # 时间片速度[m
[31m-        # action_end = (action.position[0] + action_vel.x * self.latency, action.position[1] + action_vel.y * self.latency)[m
[32m+[m[32m        print(self.__step)[m
[32m+[m[32m        if self.__step < self.slot_number - 1:[m
[32m+[m[32m            self.__step += 1  # 步数累加, 以slot_number数量作为一个周期[m
[32m+[m[32m        else:[m
[32m+[m[32m            self.__step = 0[m
[32m+[m[32m            raise Exception('超出步数')[m
 [m
[31m-        self.__step += 1  # 步数累加[m
[31m-        if self.__step == self.slot_number:[m
[31m-            # 时间片终止[m
[31m-            if action.p_start == 0:[m
[31m-                # UAV如果到达了终点[m
[31m-                done = True[m
[31m-            else:[m
[31m-                # UAV最后一个时间没有到达终点[m
[31m-                done = False[m
[32m+[m[32m        # 加载对应时间片数据[m
[32m+[m[32m        sol_point = self.trajectory[:, self.__step][m
[32m+[m[32m        sol_tasks = self.tasks[:, self.__step][m
[32m+[m[32m        sol_bandwidth = self.bandwidth[:, self.__step][m
[32m+[m[32m        sol_frequency = self.frequency[:, self.__step][m
[32m+[m[32m        sol_offloading = self.offloading[:, self.__step][m
[32m+[m[32m        sol_types = self.task_type[:, self.__step][m
 [m
         # 根据当前的时间片和位置计算奖励值[m
         x = action.position[0][m
         y = action.position[1][m
         x = x + action.velocity.x * self.latency[m
         y = y + action.velocity.y * self.latency[m
[32m+[m[32m        # action_vel = action.velocity  # 时间片速度[m
[32m+[m[32m        # action_end = (action.position[0] + action_vel.x * self.latency, action.position[1] + action_vel.y * self.latency)[m
 [m
[31m-        observation = (x, y)[m
[31m-        uav_position = np.array(observation)[m
[32m+[m[32m        # 时间片终止[m
[32m+[m[32m        if self.__step == (self.slot_number - 1) and x == self.end_point[0] and y == self.end_point[1]:  # UAV到达了终点[m
[32m+[m[32m            done = True[m
[32m+[m
[32m+[m[32m        uav_position = np.array((x, y))[m
 [m
         # 1. 判断约束条件是否满足 TODO[m
 [m
[36m@@ -167,9 +168,9 @@[m [mclass SimulatedEnv(BaseEnv):[m
             t_reward = -1[m
 [m
         # 3. 返回相关信息[m
[31m-[m
         reward = 0.2 * t_reward + 0.8 * e_reward[m
[31m-        return (done, observation, reward)[m
[32m+[m
[32m+[m[32m        return (done, reward)[m
 [m
 [m
 if __name__ == '__main__':[m
[36m@@ -177,7 +178,12 @@[m [mif __name__ == '__main__':[m
     file_path = os.path.join(work_dir, 'data.csv')[m
     senv = SimulatedEnv(file_path)[m
 [m
[31m-    for i in range(0, 100):[m
[31m-        v = senv.sample()[m
[31m-        current_position = (0, 0)[m
[31m-        print(senv.step(Action(velocity=v, position=current_position)))[m
[32m+[m[32m    # for i in range(0, 20):[m
[32m+[m[32m    #     v = senv.sample()[m
[32m+[m[32m    #     current_position = (0, 0)[m
[32m+[m[32m    #     print(senv.step(Action(velocity=v, position=current_position)))[m
[32m+[m[32m    #[m
[32m+[m[32m    # from itertools import product[m
[32m+[m[32m    #[m
[32m+[m[32m    # lst = np.zeros(shape=(10, 2 ** 10))[m
[32m+[m[32m    # lst = list(product([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], repeat=10))[m

[33mcommit e1e45304d67b045917a9feabe33c314cb90e8dd0[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sun Aug 9 09:21:16 2020 +0800

    修改BaseEnv init函数签名

[1mdiff --git a/env/Env.py b/env/Env.py[m
[1mindex da85f1d..2c1222b 100644[m
[1m--- a/env/Env.py[m
[1m+++ b/env/Env.py[m
[36m@@ -4,23 +4,16 @@[m [mimport numpy as np[m
 [m
 [m
 class BaseEnv(object):[m
[31m-    def __init__(self,[m
[31m-                 md_position,[m
[31m-                 start_point=(0, 0),[m
[31m-                 end_point=(100, 0),[m
[31m-                 latency=0.5,[m
[31m-                 md_number=4,[m
[31m-                 slot_number=20,[m
[31m-                 max_velocity=15, ) -> None:[m
[32m+[m[32m    def __init__(self, start_point=(0, 0), end_point=(100, 0), latency=0.5, md_number=4, slot_number=20,[m
[32m+[m[32m                 max_velocity=15) -> None:[m
         super().__init__()[m
[31m-        self.md_position = md_position[m
[32m+[m
         self.tasks = np.random.randint(100, 200, size=(md_number, slot_number)) / 1024[m
         self.latency = latency[m
         self.md_number = md_number[m
         self.slot_number = slot_number[m
         self.start_point = start_point[m
         self.end_point = end_point[m
[31m-[m
         self.max_velocity = max_velocity[m
 [m
     def reset(self):[m
[1mdiff --git a/env/trajectory/SimulatedEnv.py b/env/trajectory/SimulatedEnv.py[m
[1mindex 5a50081..3380ec8 100644[m
[1m--- a/env/trajectory/SimulatedEnv.py[m
[1m+++ b/env/trajectory/SimulatedEnv.py[m
[36m@@ -33,8 +33,8 @@[m [mclass SimulatedEnv(BaseEnv):[m
         idx_s = 0[m
         idx_e = (2 * md_number - 1)[m
         vals = self.data.loc[row, idx_s:idx_e].values[m
[31m-        md_position = np.reshape(vals, (2, md_number), order="F")[m
[31m-        super().__init__(md_position, start_point, end_point, latency, md_number, slot_number, max_velocity)[m
[32m+[m[32m        self.md_position = np.reshape(vals, (2, md_number), order="F")[m
[32m+[m[32m        super().__init__(start_point, end_point, latency, md_number, slot_number, max_velocity)[m
 [m
         # MD Tasks Matrix[m
         idx_s = idx_e + 1[m
[1mdiff --git a/env/trajectory/UavTrajectoryEnv.py b/env/trajectory/UavTrajectoryEnv.py[m
[1mindex db052cf..3f5e959 100644[m
[1m--- a/env/trajectory/UavTrajectoryEnv.py[m
[1m+++ b/env/trajectory/UavTrajectoryEnv.py[m
[36m@@ -35,7 +35,8 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
         :param trajectory_reward_coefficient: 轨迹奖励权重[m
         """[m
 [m
[31m-        super().__init__(md_position, start_point, end_point, latency, md_number, slot_number, max_velocity)[m
[32m+[m[32m        super().__init__(start_point, end_point, latency, md_number, slot_number, max_velocity)[m
[32m+[m[32m        self.md_position = md_position[m
         self.__reward_radius = reward_radius[m
         self.__energy_reward_coefficient = energy_reward_coefficient,[m
         self.__trajectory_reward_coefficient = trajectory_reward_coefficient[m

[33mcommit 9e12b616e2bc25baed7d32341a5ebd4add40a8f0[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sun Aug 9 09:17:34 2020 +0800

    去除缓存文件

[1mdiff --git a/env/__pycache__/Env.cpython-36.pyc b/env/__pycache__/Env.cpython-36.pyc[m
[1mdeleted file mode 100644[m
[1mindex f74d388..0000000[m
Binary files a/env/__pycache__/Env.cpython-36.pyc and /dev/null differ
[1mdiff --git a/env/__pycache__/Solution.cpython-36.pyc b/env/__pycache__/Solution.cpython-36.pyc[m
[1mdeleted file mode 100644[m
[1mindex 93d67f5..0000000[m
Binary files a/env/__pycache__/Solution.cpython-36.pyc and /dev/null differ

[33mcommit b67c8c6f5ab2513f5720cb009c0efebb45bf2598[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sat Aug 8 22:17:46 2020 +0800

    DRL 环境变量 修改奖励函数

[1mdiff --git a/env/Env.py b/env/Env.py[m
[1mindex bf8911a..da85f1d 100644[m
[1m--- a/env/Env.py[m
[1m+++ b/env/Env.py[m
[36m@@ -34,7 +34,7 @@[m [mclass BaseEnv(object):[m
 [m
 [m
 Velocity = namedtuple("velocity", ['x', 'y', 'val'])[m
[31m-Action = namedtuple('action', ['p_start', 'p_end', 'velocity'])[m
[32m+[m[32mAction = namedtuple('action', ['position', 'velocity'])[m
 [m
 [m
 class ActionSet:[m
[36m@@ -51,7 +51,7 @@[m [mclass ActionSet:[m
         """[m
         import random[m
         if n_sample == 1:[m
[31m-            idx = random.randint(0, len(self.__action_set))[m
[32m+[m[32m            idx = random.randint(0, len(self.__action_set) - 1)[m
             return self.__action_set[idx][m
         else:[m
             sample = [][m
[1mdiff --git a/env/trajectory/SimulatedEnv.py b/env/trajectory/SimulatedEnv.py[m
[1mindex 3eef5ed..5a50081 100644[m
[1m--- a/env/trajectory/SimulatedEnv.py[m
[1m+++ b/env/trajectory/SimulatedEnv.py[m
[36m@@ -124,8 +124,10 @@[m [mclass SimulatedEnv(BaseEnv):[m
         sol_offloading = self.offloading[:, self.__step - 1][m
         sol_types = self.task_type[:, self.__step - 1][m
 [m
[31m-        action_end = action.p_end  # 时间到达点[m
[31m-        action_vel = action.velocity  # 时间片速度[m
[32m+[m[32m        # action_end = action.p_end  # 时间到达点[m
[32m+[m
[32m+[m[32m        # action_vel = action.velocity  # 时间片速度[m
[32m+[m[32m        # action_end = (action.position[0] + action_vel.x * self.latency, action.position[1] + action_vel.y * self.latency)[m
 [m
         self.__step += 1  # 步数累加[m
         if self.__step == self.slot_number:[m
[36m@@ -138,27 +140,31 @@[m [mclass SimulatedEnv(BaseEnv):[m
                 done = False[m
 [m
         # 根据当前的时间片和位置计算奖励值[m
[31m-        x = action.p_start[0][m
[31m-        y = action.p_start[1][m
[32m+[m[32m        x = action.position[0][m
[32m+[m[32m        y = action.position[1][m
         x = x + action.velocity.x * self.latency[m
         y = y + action.velocity.y * self.latency[m
[32m+[m
         observation = (x, y)[m
[32m+[m[32m        uav_position = np.array(observation)[m
 [m
         # 1. 判断约束条件是否满足 TODO[m
 [m
         # 2. 计算能耗和轨迹奖励[m
[31m-        dis = np.linalg.norm(np.array(action_end) - sol_point, ord=1)[m
[31m-        if dis <= self.__reward_radius:[m
[31m-            # 时间片终点在范围内[m
[31m-            t_reward = (self.__reward_radius - dis) / self.__reward_radius[m
[31m-        else:[m
[31m-            t_reward = 0[m
[32m+[m[32m        if 0 <= x <= 100 and 0 <= y <= 100:[m
[32m+[m[32m            energy = self.__solution.slotDeviceEnergy(sol_tasks, uav_position, sol_types, sol_offloading, sol_bandwidth)[m
[32m+[m[32m            e_reward = (1 - energy)[m
[32m+[m
[32m+[m[32m            dis = np.linalg.norm(uav_position - sol_point, ord=1)[m
[32m+[m[32m            if dis <= self.__reward_radius:[m
[32m+[m[32m                # 时间片终点在范围内[m
[32m+[m[32m                t_reward = (self.__reward_radius - dis) / self.__reward_radius[m
[32m+[m[32m            else:[m
[32m+[m[32m                t_reward = 0[m
 [m
[31m-        if 0 <= x <= 100 and 0 < y <= 100:[m
[31m-            energy = self.__solution.slotDeviceEnergy(sol_tasks, sol_point, sol_types, sol_offloading, sol_bandwidth)[m
[31m-            e_reward = (20 - energy) / 20[m
         else:[m
[31m-            e_reward = 0[m
[32m+[m[32m            e_reward = -1[m
[32m+[m[32m            t_reward = -1[m
 [m
         # 3. 返回相关信息[m
 [m
[36m@@ -171,7 +177,7 @@[m [mif __name__ == '__main__':[m
     file_path = os.path.join(work_dir, 'data.csv')[m
     senv = SimulatedEnv(file_path)[m
 [m
[31m-    v = senv.sample()[m
[31m-    ps = (0, 0)[m
[31m-    pe = (v.x * senv.latency, v.y * senv.latency)[m
[31m-    print(senv.step(Action(velocity=v, p_start=(0, 0), p_end=pe)))[m
[32m+[m[32m    for i in range(0, 100):[m
[32m+[m[32m        v = senv.sample()[m
[32m+[m[32m        current_position = (0, 0)[m
[32m+[m[32m        print(senv.step(Action(velocity=v, position=current_position)))[m

[33mcommit 6bc5f61125f63a6ccffe9fad4e247416fea87bf4[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sat Aug 8 21:57:24 2020 +0800

    DRL虚拟环境

[1mdiff --git a/data/data.csv b/data/data.csv[m
[1mindex f357f85..1a16d3c 100644[m
[1m--- a/data/data.csv[m
[1m+++ b/data/data.csv[m
[36m@@ -1 +1,10 @@[m
[31m-55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.192,0.16,0.158,0.184,0.184,0.118,0.142,0.182,0.174,0.185,0.113,0.144,0.171,0.173,0.107,0.171,0.163,0.135,0.13,0.102,0.139,0.131,0.143,0.171,0.114,0.148,0.18,0.125,0.187,0.194,0.111,0.111,0.165,0.152,0.191,0.18,0.15,0.106,0.109,0.145,0.13,0.195,0.167,0.127,0.136,0.108,0.125,0.132,0.164,0.117,0.168,0.111,0.19,0.163,0.158,0.118,0.174,0.123,0.18,0.178,0.194,0.179,0.136,0.151,0.163,0.127,0.18,0.133,0.113,0.106,0.166,0.126,0.186,0.178,0.111,0.156,0.197,0.183,0.188,0.126,0.173,0.134,0.183,0.11,0.169,0.165,0.126,0.163,0.191,0.162,0.118,0.13,0.135,0.131,0.169,0.195,0.15,0.179,0.195,0.137,0.104,0.176,0.174,0.13,0.127,0.171,0.115,0.185,0.186,0.157,0.122,0.195,0.123,0.131,0.144,0.152,0.146,0.1,0.187,0.102,0.189,0.183,0.194,0.131,0.118,0.105,0.169,0.115,0.116,0.123,0.128,0.121,0.161,0.151,0.165,0.164,0.186,0.103,0.156,0.138,0.179,0.123,0.161,0.127,0.123,0.133,0.106,0.175,0.189,0.101,0.165,0.156,0.191,0.169,0.142,0.158,0.112,0.116,0.122,0.148,0.126,0.11,0.152,0.17,0.109,0.173,0.102,0.17,0.196,0.146,0.106,0.128,0.114,0.15,0.118,0.2,0.142,0.139,0.106,0.16,0.112,0.126,0.13,0.109,0.183,0.111,0.148,0.129,0.123,0.122,0.167,0.18,0.141,0.132,0.173,0.127,0.187,0.129,0.105,0.147,2.8514,2.3696,2.8791,2.6064,2.4777,2.9351,2.4033,3.5347,2.7068,2.3862,2.7073,2.7287,3.0502,2.4709,2.58,2.6789,2.7221,3.6921,3.0451,2.3649,3.0727,3.1548,2.9998,2.6443,2.7909,3.1725,2.819,2.8166,2.429,2.5299,3.0699,3.1905,3.2488,2.7874,2.8678,3.0904,2.6469,2.9932,2.7076,2.7302,2.7509,3.1774,2.7748,3.0164,2.9447,3.2353,2.9459,3.363,2.9032,2.8847,3.004,3.4822,3.1644,2.8787,3.2081,3.2896,2.9034,2.8257,2.9716,2.8895,3.3498,3.2199,3.1783,3.1478,3.096,3.0259,2.7654,3.5857,2.9226,3.0276,3.0086,2.8189,3.5705,3.0202,2.9645,3.6631,2.9585,3.4254,3.3243,2.956,3.0605,3.7316,3.5956,3.1302,2.9394,2.7144,3.0262,3.6251,3.0024,3.2833,2.7762,3.5799,3.7639,3.5876,3.1599,2.7052,3.4784,3.3794,2.5541,3.2879,3.4347,3.1352,3.2927,3.1788,3.423,3.3999,3.1753,3.1637,2.9748,3.3967,3.7735,3.8527,3.211,3.4055,3.0394,2.7647,3.1487,2.8486,2.925,3.3334,3.6125,3.3961,3.5167,2.6547,3.3668,3.4129,3.1335,2.9333,2.6534,3.395,3.3555,3.6876,3.0936,3.0696,3.173,3.2346,2.4949,3.2927,2.8521,3.2387,2.8972,3.6459,2.9473,3.1076,3.4898,3.5867,3.028,2.8,2.7371,2.8484,3.2625,3.0893,2.9373,3.0681,3.6325,2.6951,2.8256,2.9979,2.7583,3.0019,2.5438,3.2208,3.0402,3.03,3.1095,3.6824,2.8025,2.9171,2.4436,2.9335,2.7684,3.069,3.1052,2.6102,3.3669,3.2469,2.6349,2.9565,2.5732,2.6811,3.0429,2.9078,2.8218,2.8207,3.2286,2.7839,2.4502,2.7978,2.464,2.8013,2.6399,2.7045,2.884,2.3981,3.1556,2.7418,2.751,2.8418,2.5168,2.5774,0,0,4.7414,5.8111,9.4455,11.652,14.119,17.519,19.176,23.057,24.582,28.255,29.996,33.446,35.44,38.604,42.128,42,49.478,43.492,55.671,47.723,62.602,44.858,69.534,41.994,72.693,35.192,76.068,28.494,79.741,21.955,83.976,15.764,88.99,10.187,94.502,5.1013,100,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,0,0,0,0,1,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0,0,0,0,1,1,1,1,0,1,0,0,1,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,1,1,0,1,0,0,0,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,1,1,0,1,1,0,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,1,1,1.9874e-09,2.1018e-09,2.1501e-09,1.9893e-09,1.9008e-09,2.0154e-09,1.9273e-09,2.5124e-09,2.0317e-09,1.8875e-09,2.0636e-09,2.0637e-09,2.0914e-09,2.0028e-09,1.9676e-09,1.969e-09,1.9423e-09,2.4833e-09,2.0981e-09,1.8349e-09,2.077e-09,2.1499e-09,2.174e-09,2.0151e-09,1.9156e-09,2.0365e-09,1.8973e-09,2.3714e-09,2.0407e-09,1.8498e-09,2.1016e-09,2.0961e-09,2.1232e-09,2.0349e-09,1.9875e-09,1.9976e-09,1.9115e-09,2.3235e-09,2.0406e-09,1.9229e-09,2.1086e-09,2.165e-09,2.2081e-09,1.9792e-09,1.927e-09,2.0097e-09,1.9769e-09,2.267e-09,2.0333e-09,1.8767e-09,2.1221e-09,2.1156e-09,2.1364e-09,2.0621e-09,1.9324e-09,2.0206e-09,1.9372e-09,2.2673e-09,2.0182e-09,1.9516e-09,2.0649e-09,2.114e-09,2.1913e-09,1.9892e-09,1.9918e-09,2.0237e-09,1.9977e-09,2.1988e-09,2.0503e-09,1.9554e-09,2.0879e-09,2.1318e-09,2.1414e-09,2.0114e-09,2.0048e-09,2.0484e-09,2.0372e-09,2.1324e-09,1.9849e-09,2.002e-09,2.17e-09,2.1993e-09,2.1364e-09,2.0157e-09,1.9732e-09,2.0689e-09,1.9851e-09,2.0701e-09,2.0124e-09,1.9576e-09,2.1554e-09,2.2092e-09,2.1828e-09,2.0721e-09,2.0009e-09,2.1433e-09,1.9877e-09,1.9554e-09,1.9109e-09,1.9761e-09,2.116e-09,2.1559e-09,2.1239e-09,2.0961e-09,2.032e-09,2.1175e-09,2.016e-09,1.9714e-09,1.947e-09,2.0171e-09,2.0764e-09,2.2032e-09,2.1448e-09,2.04e-09,2.1146e-09,2.1715e-09,1.9739e-09,1.9332e-09,1.8902e-09,2.0542e-09,2.1045e-09,2.1672e-09,2.0923e-09,2.0463e-09,2.2029e-09,2.1713e-09,1.9989e-09,1.8796e-09,1.8827e-09,2.0392e-09,2.1431e-09,2.2304e-09,2.1374e-09,1.953e-09,2.1556e-09,2.1736e-09,1.9658e-09,1.9571e-09,1.7964e-09,2.0688e-09,2.1283e-09,2.1594e-09,2.1303e-09,1.9329e-09,2.2628e-09,2.1853e-09,2.0127e-09,1.9155e-09,1.8404e-09,2.0041e-09,2.1284e-09,2.2351e-09,2.1096e-09,1.9239e-09,2.2328e-09,2.2018e-09,1.9387e-09,2.0061e-09,1.7789e-09,2.0024e-09,2.1284e-09,2.2279e-09,2.0478e-09,1.9164e-09,2.2696e-09,2.2149e-09,1.9973e-09,1.9627e-09,1.7759e-09,2.0021e-09,2.0528e-09,2.1673e-09,2.109e-09,1.984e-09,2.3032e-09,2.2255e-09,1.9301e-09,1.9751e-09,1.7755e-09,2.0051e-09,2.0963e-09,2.1444e-09,2.0783e-09,1.9427e-09,2.3716e-09,2.2118e-09,1.9096e-09,1.9621e-09,1.7567e-09,2.0463e-09,2.0717e-09,2.1965e-09,2.0003e-09,1.8796e-09,2.3907e-09,2.2575e-09,1.9488e-09,2.0276e-09,1.7516e-09,1.983e-09,2.579e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.509e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.6409e-05,2.8731e-05,2.8731e-05,2.0808e-05,2.1075e-05,2.8731e-05,2.8731e-05,2.0739e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.1066e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.757e-05,2.8731e-05,1.7257e-05,1.7587e-05,1.7467e-05,1.7697e-05,2.8731e-05,1.5026e-05,1.4964e-05,2.8731e-05,2.8731e-05,1.5141e-05,1.5016e-05,1.5015e-05,1.5128e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.4891e-05,1.5157e-05,1.5162e-05,2.8731e-05,1.4961e-05,1.4977e-05,1.5134e-05,2.8731e-05,1.5041e-05,1.5129e-05,2.8731e-05,1.4843e-05,1.5135e-05,1.5133e-05,2.8731e-05,1.5019e-05,2.8731e-05,2.1529e-05,2.0731e-05,2.8731e-05,2.053e-05,2.8731e-05,2.0515e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.5099e-05,1.5053e-05,1.5073e-05,1.5073e-05,2.8731e-05,1.4924e-05,2.8731e-05,2.8731e-05,1.5082e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.5104e-05,1.5104e-05,1.4889e-05,1.5096e-05,1.5027e-05,2.8731e-05,2.8731e-05,1.5062e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.7456e-05,2.8731e-05,1.7523e-05,1.7462e-05,1.7524e-05,1.764e-05,1.3226e-05,1.3152e-05,1.3196e-05,2.8731e-05,1.311e-05,1.3148e-05,1.308e-05,2.8731e-05,2.8731e-05,1.3237e-05,3.0889e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,3.2254e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.318e-05,1.3058e-05,1.3242e-05,2.8731e-05,2.8731e-05,1.3123e-05,1.3099e-05,1.3231e-05,2.8731e-05,1.321e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.7391e-05,1.7826e-05,1.7302e-05,1.75e-05,2.8731e-05,1.7501e-05,2.8731e-05,2.8731e-05,1.7432e-05,2.8731e-05,1.7286e-05,2.8731e-05,1.7382e-05,2.8731e-05,1.7709e-05,2.8731e-05,1.7739e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.5153e-05,1.5154e-05,1.4915e-05,1.4883e-05,2.8731e-05,1.5167e-05,1.4992e-05,2.8731e-05,2.8731e-05,1.322e-05,1.319e-05,1.3189e-05,1.3202e-05,2.8731e-05,1.3197e-05,1.3049e-05,1.3107e-05,1.1699e-05,1.1658e-05,2.8731e-05,2.8731e-05,1.1705e-05,1.1734e-05,1.1628e-05,1.1664e-05,1.1682e-05,1.1719e-05,2.8731e-05,1.7766e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.7515e-05,1.7288e-05,1.7573e-05,1.7388e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.103e-05,2.0716e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.0939e-05,2.1058e-05,1,0.83333,0.87374,0.86034,1,0.86188,0.8538,0.86911,1,0.86631,0.85294,1,1,0.86413,0.86188,1,0.86413,0.87179,0.86702,1,0.83766,0.86486,0.85465,0.8538,1,0.84472,1,1,1,1,0.85632,1,1,0.86486,0.86979,1,1,1,1,0.86188,0.83974,0.84177,0.87374,1,1,1,0.83871,1,1,1,0.84472,1,1,0.87437,1,1,1,0.85207,1,0.86111,1,1,0.84663,1,0.85465,1,0.84375,0.86631,0.85294,0.84663,1,1,1,1,0.8366,1,0.86772,0.84663,1,0.87437,0.86702,0.84472,1,1,1,1,1,0.84472,0.85465,1,0.83871,0.86034,0.84756,0.85714,1,0.84756,1,1,1,1,1,1,1,0.86842,1,1,1,0.8538,0.8366,1,1,0.8731,0.86486,0.86264,0.86702,0.85955,1,0.87374,0.87113,0.85294,1,1,1,0.84375,0.875,1,1,1,0.85714,1,0.8494,0.86772,0.86111,1,1,1,1,0.85876,1,0.83974,0.84568,1,0.86979,1,0.86979,1,0.86842,1,0.86034,1,0.85632,0.86559,0.8366,1,1,1,1,0.85714,1,1,0.86702,0.84756,1,1,1,1,0.86772,1,1,1,1,1,0.86339,0.875,1,1,1,1,1,1,0.86339,1,0.85632,0.8366,0.8503,1,1,1,1,0.85294,0.84076,0.86111,1,1,0.86559,0.84076,0.82993,0.86842,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.131,0.17,0.138,0.118,0.102,0.106,0.168,0.145,0.154,0.19,0.2,0.121,0.166,0.126,0.102,0.176,0.132,0.138,0.159,0.183,0.163,0.188,0.127,0.18,0.118,0.196,0.169,0.121,0.195,0.173,0.125,0.121,0.152,0.102,0.12,0.142,0.137,0.146,0.128,0.159,0.187,0.111,0.152,0.113,0.172,0.14,0.157,0.118,0.114,0.149,0.135,0.194,0.177,0.175,0.191,0.108,0.155,0.159,0.197,0.129,0.124,0.11,0.101,0.193,0.167,0.179,0.128,0.159,0.106,0.149,0.198,0.188,0.134,0.197,0.123,0.195,0.195,0.18,0.163,0.188,0.129,0.185,0.162,0.101,0.135,0.114,0.199,0.148,0.15,0.164,0.137,0.113,0.183,0.119,0.151,0.122,0.109,0.187,0.198,0.197,0.191,0.178,0.133,0.108,0.141,0.123,0.113,0.105,0.173,0.101,0.177,0.114,0.108,0.109,0.167,0.124,0.142,0.156,0.186,0.173,0.127,0.113,0.105,0.13,0.126,0.146,0.169,0.17,0.128,0.138,0.118,0.179,0.105,0.17,0.178,0.178,0.126,0.137,0.159,0.127,0.137,0.119,0.146,0.104,0.18,0.107,0.152,0.13,0.158,0.196,0.165,0.103,0.143,0.151,0.154,0.168,0.128,0.113,0.139,0.196,0.118,0.191,0.154,0.146,0.189,0.146,0.173,0.14,0.191,0.169,0.17,0.133,0.176,0.164,0.124,0.116,0.18,0.196,0.146,0.159,0.186,0.146,0.196,0.158,0.182,0.191,0.182,0.116,0.163,0.14,0.106,0.142,0.126,0.185,0.103,0.196,0.135,0.136,0.101,0.118,2.6403,2.9624,2.8176,2.4642,2.3204,2.4302,2.6342,3.3385,2.8455,2.6315,3.1132,2.7428,3.0794,2.6011,2.3863,2.9367,2.5529,3.2532,2.9403,2.7223,2.9876,3.2188,2.8592,2.9723,2.5388,3.1053,2.8256,3.0202,3.1589,2.7639,3.0504,3.088,3.3658,2.7584,2.8266,3.1173,2.9571,3.4306,3.0238,3.0154,3.547,3.0315,3.4003,2.9059,3.2218,3.1595,3.1692,3.0776,2.9087,3.0476,3.1248,3.5851,3.486,3.3095,3.2891,2.8423,3.1309,3.1731,3.3543,2.8981,3.2415,3.1325,3.0345,3.6539,3.368,3.6156,3.1612,3.2103,2.8549,3.2944,3.5659,3.5045,3.1032,3.4736,2.8453,3.4883,3.4579,2.9917,3.0466,3.3989,3.2666,3.6919,3.5161,2.9346,3.1119,3.0765,3.7031,2.942,3.1334,3.4565,3.3131,3.0616,3.6584,3.1283,3.101,3.0655,3.0157,3.1463,3.5211,3.6239,3.8521,3.7528,3.3931,3.1036,3.2372,3.2492,3.1491,2.725,3.395,3.0094,3.6686,3.1428,3.0794,3.0396,3.3455,3.1817,3.3273,3.0235,3.3989,3.5331,3.3521,3.2102,3.1111,3.305,3.1455,3.4648,3.6224,3.1182,3.0418,3.3794,3.1476,3.6669,3.0177,3.454,3.4565,3.605,3.1174,2.9465,3.1568,3.124,3.3125,3.2101,3.3739,2.8907,3.5765,3.0757,3.2939,2.9145,3.0769,3.6178,3.4136,2.9867,3.2417,3.136,3.4042,3.5498,2.9846,2.7556,2.8158,3.4987,2.8466,3.4842,3.1013,2.8731,3.528,3.216,3.056,2.8136,2.8593,3.1229,3.1253,3.02,3.1414,2.8712,3.0625,2.9357,2.9852,3.0807,2.5297,2.9823,3.0161,2.9447,3.0439,2.6492,3.374,3.3092,2.799,2.4898,2.431,2.6965,2.5731,2.996,2.695,2.7912,2.9166,3.4407,2.5902,2.6932,2.1317,2.6147,0,0,7.6269,9.2645,15.482,18.336,23.175,27.546,31.157,36.506,39.799,44.832,48.59,53,55.758,62.624,57,65,47.253,72,55,65,55,65,59.999,66.619,57,55,64.076,47.864,70.101,37.487,77.011,27.675,84.474,18.279,91.889,8.8438,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.096107,0.10998,0.09747,0.091669,0.084907,0.08585,0.11275,0.095091,0.10439,0.12179,0.11777,0.088118,0.10465,0.092059,0.08233,0.1103,0.09542,0.09066,0.10321,0.11547,0.10007,0.10736,0.08595,0.10698,0.085179,0.11159,0.10425,0.081476,0.11063,0.10652,0.096224,0.093744,0.10609,0.086891,0.096027,0.104,0.10329,0.10256,0.098048,0.11313,0.11644,0.086522,0.10281,0.08892,0.11362,0.099777,0.10756,0.089716,0.089419,0.10522,0.08982,0.10938,0.10382,0.10491,0.11141,0.079838,0.098557,0.099799,0.113,0.089464,0.092259,0.086059,0.082119,0.11926,0.11127,0.11381,0.095135,0.10939,0.086808,0.10389,0.10561,0.10259,0.085087,0.10623,0.082866,0.10534,0.10566,0.10508,0.097835,0.10371,0.091526,0.11194,0.10409,0.080522,0.096067,0.08598,0.11744,0.104,0.10284,0.1056,0.093647,0.084496,0.11004,0.086852,0.10234,0.089015,0.082894,0.1172,0.11751,0.11601,0.11963,0.11512,0.097925,0.087758,0.10356,0.094318,0.090035,0.090105,0.11677,0.08478,0.11035,0.086462,0.083942,0.084897,0.10952,0.091186,0.098401,0.10813,0.11701,0.1101,0.095378,0.089459,0.086061,0.097414,0.097056,0.10363,0.11262,0.11853,0.099202,0.10064,0.087496,0.10998,0.082026,0.10846,0.11182,0.11023,0.091841,0.099023,0.10687,0.092265,0.096998,0.089106,0.10062,0.084464,0.11353,0.08416,0.10425,0.097832,0.10933,0.1197,0.1065,0.081081,0.098468,0.10328,0.10176,0.10634,0.094041,0.088882,0.10118,0.11846,0.083517,0.10772,0.097016,0.096038,0.10649,0.092374,0.10532,0.094042,0.1145,0.10298,0.10441,0.089608,0.10665,0.1047,0.084976,0.082467,0.10994,0.1151,0.10075,0.10141,0.10655,0.091457,0.10994,0.099625,0.10119,0.10524,0.10741,0.082972,0.10405,0.091571,0.087864,0.1015,0.096994,0.12275,0.082548,0.12011,0.10258,0.10194,0.089928,0.093791,469.95,521.53,479.84,451.18,427.22,433.07,523.39,489.08,503.39,565.46,562.56,442.86,506.42,451.37,416.26,518.97,461.85,468.1,498.37,543.21,483.4,525.89,435.24,517.33,422.44,537.6,493.47,426.88,538.2,498.78,473.91,466.57,512.08,439.54,466.61,497.5,492.92,504,479.76,523.98,558.41,440.82,500.33,444.98,527.2,483.08,508.92,453.07,448.01,498.15,447.35,534.61,514.08,500.5,532.76,409.06,476.05,480.71,542.17,440.9,459.96,438.32,426.33,564.85,519.2,545.93,467.28,509.95,434.97,496.73,519.57,505.82,426.49,518.41,411.14,515.65,517.53,498.94,466.07,508.84,457.73,542.85,503.22,416.9,466.03,436.02,564.08,485.66,488.68,507.15,463.24,428.32,535.84,437.93,482.51,442.11,424.94,543.2,557.42,555.82,569.43,550.54,479.75,443,490.56,464.78,452.06,439.84,536.59,433.37,537.66,438.94,431.77,432.7,513.55,454.18,481.31,500.59,552.34,523.24,474.07,452.45,442.14,478.03,472.55,500.18,534.05,535.76,477.47,491.39,442.35,534.99,423.64,513.6,535.3,534.74,455.3,470.46,501.12,456.77,476.27,449.46,489.11,428.67,545.39,432.77,498.76,467.85,507.45,568.74,511.29,422.96,481.96,492.53,496.05,514.52,462.44,440.29,478.36,565.71,424.85,531.92,474.53,463.49,530.29,462.49,501.04,456.49,537.12,495.51,502.99,451.62,511.54,495.53,440.06,428.69,529.7,549.75,473.71,490.3,520,454.22,533.02,472.38,513.3,525.12,516.94,415.78,481.41,449.62,442.14,492.47,472.18,565.95,436.68,578.12,486.7,487.06,436.27,461.76,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.13,0.184,0.142,0.187,0.166,0.1,0.111,0.103,0.109,0.122,0.179,0.174,0.124,0.139,0.186,0.107,0.157,0.111,0.2,0.144,0.192,0.115,0.2,0.105,0.105,0.183,0.178,0.125,0.124,0.147,0.195,0.163,0.184,0.187,0.113,0.158,0.199,0.109,0.144,0.177,0.199,0.112,0.14,0.176,0.16,0.188,0.11,0.154,0.161,0.182,0.185,0.147,0.161,0.1,0.169,0.101,0.165,0.151,0.196,0.116,0.138,0.186,0.151,0.182,0.151,0.168,0.189,0.105,0.188,0.118,0.176,0.157,0.133,0.196,0.184,0.128,0.12,0.136,0.133,0.116,0.194,0.189,0.188,0.146,0.179,0.136,0.186,0.191,0.154,0.148,0.153,0.124,0.109,0.139,0.179,0.168,0.184,0.145,0.112,0.152,0.103,0.143,0.12,0.185,0.113,0.147,0.138,0.185,0.156,0.147,0.16,0.123,0.152,0.135,0.111,0.179,0.136,0.128,0.1,0.103,0.125,0.133,0.17,0.137,0.18,0.159,0.135,0.115,0.1,0.138,0.141,0.136,0.181,0.109,0.111,0.123,0.151,0.173,0.191,0.126,0.112,0.151,0.13,0.199,0.104,0.119,0.176,0.139,0.156,0.182,0.167,0.16,0.168,0.106,0.109,0.161,0.137,0.2,0.182,0.193,0.118,0.163,0.102,0.174,0.104,0.168,0.121,0.159,0.127,0.102,0.169,0.145,0.173,0.105,0.153,0.105,0.114,0.179,0.123,0.109,0.114,0.114,0.185,0.159,0.18,0.125,0.163,0.19,0.153,0.187,0.122,0.197,0.108,0.176,0.12,0.111,0.156,0.132,0.122,0.144,2.6756,3.0811,2.8891,2.8631,2.7206,2.4246,2.3712,3.013,2.5947,2.3606,2.998,3.069,2.7894,2.6728,2.8499,2.4999,2.68,2.9976,3.1503,2.5304,3.2559,2.833,3.4423,2.5939,2.5227,3.1358,2.9679,3.1734,2.8374,2.717,3.3083,3.19,3.3619,3.1566,2.5883,3.0185,3.128,2.8929,2.9608,2.9319,3.4907,2.92,3.1849,3.2506,3.0214,3.343,2.7213,3.2439,3.1614,3.1311,3.5849,3.3505,3.4844,2.833,3.2158,2.8454,3.3003,3.2096,3.4851,2.8766,3.2457,3.6021,3.3785,3.4945,3.0853,3.375,3.497,2.7027,3.3983,2.9311,3.624,3.5033,3.2892,3.647,3.4667,3.2097,3.0831,2.9333,3.0078,3.0356,3.5484,3.5481,3.5071,3.118,3.2947,3.1204,3.3797,3.1216,2.9754,3.1264,3.4793,3.2224,3.0902,3.3065,3.3745,3.4952,3.618,2.9785,2.906,3.3514,3.048,3.4174,3.1938,3.6406,2.9789,3.408,3.3067,3.1569,3.1768,3.3773,3.6601,3.3359,3.5831,3.3813,3.0144,3.7204,3.3856,2.9268,2.8605,3.057,3.3052,3.3697,3.6603,3.3417,3.4778,3.5178,3.3209,2.7847,2.8134,3.324,3.3888,3.3627,3.6702,3.0114,2.978,3.2103,3.3727,3.1358,3.3621,3.1755,3.0623,3.4549,3.207,3.5593,2.9492,3.1705,3.4364,2.9232,3.0248,3.5198,3.3394,3.3857,3.3216,2.7165,2.95,3.4155,2.9834,3.1704,2.963,3.4188,3.0435,3.5264,2.879,3.2315,3.0781,3.6128,2.9073,3.0882,2.6752,2.8298,3.2592,3.2556,3.2609,2.6056,3.4563,2.9753,2.7025,3.113,2.5009,2.7617,2.624,2.7609,3.0425,2.7002,3.4275,2.9244,2.7549,2.9528,2.4257,3.0063,2.6621,3.2861,2.5409,2.7272,3.04,2.8264,2.6756,2.6421,2.2265,2.7514,0,0,7.0277,9.7268,14.281,19.287,21.622,28.779,29.43,37.891,36.631,47.491,43.003,57.659,55,57.922,57,55,50.367,65,60,65,55,65,55,65,60,59.561,66.485,49.464,73.774,39.931,79,29.129,85.225,18.87,92.11,9.0416,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.098452,0.11825,0.10189,0.12188,0.11458,0.085499,0.092081,0.08088,0.088576,0.097917,0.10992,0.10714,0.088301,0.096523,0.11431,0.083007,0.10434,0.079752,0.11639,0.10032,0.1164,0.086705,0.1175,0.084062,0.084829,0.1141,0.1139,0.088068,0.091151,0.10329,0.11045,0.099205,0.10569,0.10906,0.083326,0.098983,0.1139,0.078118,0.093646,0.10762,0.11322,0.081735,0.092224,0.10683,0.1027,0.11059,0.082829,0.09775,0.10161,0.11052,0.1123,0.09845,0.10326,0.080465,0.1096,0.080884,0.10697,0.10177,0.11779,0.088517,0.092171,0.10877,0.09659,0.10832,0.099716,0.10389,0.11107,0.081761,0.11174,0.085973,0.10918,0.10226,0.09344,0.11712,0.11419,0.091847,0.089191,0.098684,0.096436,0.087646,0.1061,0.10424,0.1043,0.09162,0.10313,0.087253,0.1049,0.10957,0.09652,0.092381,0.10136,0.0903,0.083938,0.096717,0.1138,0.10782,0.11326,0.10306,0.087476,0.10227,0.082171,0.09865,0.089702,0.11483,0.088319,0.10062,0.097444,0.12007,0.10724,0.10095,0.10993,0.095041,0.10698,0.10077,0.091926,0.11789,0.10123,0.10205,0.087258,0.086926,0.093231,0.096587,0.11078,0.098857,0.11709,0.10738,0.098095,0.09354,0.084902,0.099535,0.097788,0.095673,0.11259,0.085642,0.087068,0.090855,0.10262,0.11496,0.12006,0.092736,0.085406,0.10023,0.092986,0.11942,0.082317,0.087887,0.11134,0.10036,0.1071,0.11295,0.10245,0.099037,0.10306,0.081027,0.080106,0.099143,0.093235,0.11735,0.11262,0.11198,0.093015,0.10986,0.085954,0.11796,0.084986,0.11119,0.096064,0.11277,0.10172,0.086478,0.11221,0.10139,0.11393,0.088053,0.10296,0.084105,0.091885,0.11812,0.098786,0.088562,0.083678,0.082216,0.10985,0.10315,0.10375,0.085738,0.10421,0.11275,0.10364,0.11101,0.093276,0.11958,0.087368,0.11719,0.088219,0.085881,0.10914,0.098407,0.098062,0.10287,477.55,563.79,494.18,567.77,525.72,433.31,450.75,436.78,446.54,465.76,532.28,514.15,446.39,467.03,540.7,421.99,492.13,426.87,558.85,473.53,554.57,439.34,564.28,423.91,423.15,542.67,537.25,452.04,451.16,482.77,536.01,483.77,521.95,526.15,414.85,476.75,541.78,409.45,457.99,512.94,549.37,422.66,460.86,507.93,486.28,535.35,419.64,479.09,488.61,527.62,545.09,483.73,501.77,416.2,511.14,418.03,507.7,488.22,559.4,439.52,457.67,532.83,475.15,527.23,474.01,497.48,536.87,411.43,535.23,429.57,522.29,498.21,465.17,560.35,543.94,457.96,447.35,469.31,465.05,440.47,522.48,516.7,515.13,449.39,502.75,436.28,513.19,519.44,460.17,451.48,493.84,454.96,432.87,474.75,539.38,513.96,547.21,483.41,436.99,491.82,427.14,484.79,452.3,551.84,440.99,489.39,477.69,552.78,501.82,488.63,523.09,472.56,512.43,488.56,453.33,560.16,490.67,479.16,437.55,441.6,466.04,477.99,527.6,482.58,551.78,512.8,480.5,451.91,429.18,483.32,480.72,474.62,545.99,435.48,437.52,455.64,494.88,523.94,559.66,459.21,436.95,491.77,462.64,566.02,424,446.79,524.81,475.02,498.15,543.21,496.23,487.85,497.79,413.1,416.33,488.37,457.26,550.87,528.7,540.99,464.47,527.79,440.68,541.98,442.2,533.59,469.4,521.82,477.71,439.82,528.89,497.02,534.47,439.32,505.41,438.95,453.33,554.63,466.15,444.58,425.09,425.54,532.46,486.47,523.56,440.06,492.39,538.79,479.13,534.18,462.56,576.43,442.25,536.48,457.61,445.94,510.62,476.41,463.15,492.47,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.139,0.114,0.116,0.163,0.186,0.178,0.133,0.188,0.184,0.152,0.148,0.105,0.115,0.108,0.153,0.168,0.162,0.188,0.166,0.183,0.114,0.117,0.192,0.135,0.121,0.192,0.197,0.164,0.139,0.169,0.101,0.114,0.137,0.184,0.13,0.105,0.138,0.124,0.105,0.14,0.135,0.174,0.106,0.138,0.134,0.165,0.189,0.114,0.182,0.161,0.102,0.177,0.154,0.18,0.141,0.167,0.12,0.119,0.134,0.152,0.172,0.167,0.182,0.143,0.192,0.111,0.118,0.169,0.125,0.116,0.189,0.106,0.2,0.187,0.187,0.163,0.122,0.18,0.105,0.158,0.144,0.175,0.102,0.139,0.148,0.115,0.141,0.191,0.147,0.125,0.153,0.106,0.129,0.179,0.164,0.102,0.157,0.121,0.198,0.179,0.112,0.138,0.149,0.118,0.171,0.184,0.1,0.113,0.128,0.199,0.14,0.117,0.112,0.191,0.181,0.162,0.154,0.178,0.132,0.164,0.174,0.158,0.117,0.199,0.181,0.149,0.162,0.176,0.146,0.174,0.178,0.146,0.118,0.16,0.155,0.15,0.105,0.178,0.154,0.143,0.182,0.119,0.127,0.164,0.139,0.13,0.125,0.149,0.178,0.181,0.179,0.189,0.105,0.199,0.143,0.119,0.197,0.183,0.193,0.152,0.175,0.152,0.154,0.196,0.174,0.157,0.139,0.116,0.111,0.13,0.169,0.119,0.113,0.107,0.185,0.124,0.12,0.139,0.163,0.159,0.193,0.168,0.156,0.171,0.167,0.177,0.157,0.181,0.19,0.17,0.136,0.128,0.164,0.163,0.102,0.175,0.122,0.105,0.115,0.166,2.6165,2.5402,2.5896,2.6435,2.7008,2.7698,2.4005,3.5415,2.9242,2.4152,2.8416,2.6213,2.7358,2.4811,2.7092,2.9,2.7181,3.6267,2.9842,2.726,2.7101,2.8064,3.3446,2.7676,2.6069,3.1417,3.0139,3.4309,2.8917,2.7939,2.8824,3.0714,3.2996,3.3794,2.9387,2.8641,3.0055,3.2933,2.8751,2.9396,3.1211,3.4643,2.9414,3.045,2.9215,3.2727,3.2983,2.9803,3.3241,3.0658,2.9484,3.6106,3.4565,3.4692,3.0897,3.4256,2.9863,2.9906,3.073,3.1762,3.5608,3.5515,3.6551,3.2518,3.4527,3.0109,3.0206,3.2159,2.9697,2.9724,3.6241,2.9468,3.7139,3.5603,3.2754,3.325,3.046,3.1462,2.8031,3.2651,3.4436,3.6435,3.0345,3.359,3.1877,3.0939,3.3723,3.1756,3.1981,3.2012,3.4563,3.0478,3.2507,3.5478,3.3314,2.9606,3.3899,2.8012,3.4174,3.5278,3.1597,3.4084,3.4842,3.1382,3.433,3.6919,2.9567,2.7945,3.0282,3.7143,3.3282,3.0964,3.0573,3.6516,3.336,3.403,3.3941,3.0354,3.0052,3.4358,3.5048,3.3677,3.0342,3.6065,3.2806,3.2414,3.3615,2.9886,3.0326,3.4164,3.6243,3.408,3.1384,3.3899,3.2846,3.3895,2.9309,3.1741,3.1258,3.2558,3.5904,3.156,3.1603,3.3175,3.2324,3.2428,3.0399,2.9816,3.1372,3.4804,3.3626,3.5273,2.7846,3.2908,3.1842,3.0168,3.3016,3.0638,2.9832,3.0984,3.3335,3.3099,3.1797,3.2301,3.5238,3.3874,2.9218,2.7071,2.4809,2.9417,3.2373,3.0252,2.8242,2.6036,3.655,3.1272,2.7264,2.8754,2.7013,3.0924,3.0077,3.0382,2.7911,2.676,3.2261,3.1781,2.6399,2.8187,2.5033,2.8278,2.7616,2.8747,2.8991,2.6757,2.882,3.2933,2.4954,2.4686,2.1958,2.8793,0,0,7.693,9.2097,15.217,18.558,23.036,27.661,31.376,36.289,39.507,45.114,47.93,53.662,44,65,53.747,72,55.735,60.166,55,60,55,72,55,69.121,57,57.289,65.412,48.731,71.962,38.676,77.622,28.095,84.186,18.049,92.235,9.1486,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.094551,0.083777,0.084215,0.10447,0.11295,0.10909,0.094227,0.10459,0.10973,0.1024,0.099846,0.081643,0.085522,0.084711,0.10348,0.10777,0.10725,0.10797,0.10602,0.11579,0.084771,0.085229,0.11187,0.094203,0.089329,0.11407,0.11739,0.099754,0.094687,0.1087,0.087565,0.092934,0.1026,0.12371,0.10291,0.090083,0.10627,0.095968,0.089964,0.108,0.093994,0.10755,0.08143,0.096215,0.095659,0.10582,0.11546,0.085185,0.11235,0.10633,0.081849,0.11071,0.10233,0.11349,0.10024,0.10841,0.091018,0.090459,0.097066,0.10442,0.10733,0.1053,0.11049,0.097809,0.11672,0.084629,0.088141,0.10976,0.0922,0.08763,0.109,0.079172,0.11227,0.10889,0.11196,0.10165,0.086148,0.11057,0.080161,0.10017,0.099274,0.11106,0.082118,0.097791,0.10388,0.088542,0.098607,0.12286,0.1033,0.092569,0.10071,0.08203,0.091663,0.11096,0.10691,0.080772,0.1032,0.092476,0.12009,0.11118,0.087287,0.097933,0.10237,0.090701,0.11287,0.11568,0.082783,0.091712,0.097028,0.12164,0.093995,0.085362,0.083227,0.11229,0.11166,0.10299,0.099604,0.1137,0.093676,0.1035,0.10218,0.097071,0.0821,0.11078,0.10735,0.094573,0.098807,0.10853,0.095491,0.10312,0.10935,0.097705,0.087052,0.10417,0.10308,0.099721,0.082427,0.1142,0.10435,0.097937,0.1106,0.086753,0.090674,0.10596,0.095644,0.091261,0.09097,0.10294,0.11384,0.11136,0.10374,0.10583,0.077235,0.11212,0.090822,0.081673,0.11126,0.10851,0.11322,0.095596,0.10852,0.098967,0.10124,0.11808,0.10607,0.10033,0.097248,0.088429,0.088313,0.092799,0.11105,0.089872,0.088897,0.088062,0.1133,0.091326,0.093592,0.10137,0.1143,0.10823,0.10595,0.096343,0.09431,0.10142,0.093957,0.098252,0.096352,0.10363,0.11041,0.099382,0.099597,0.094505,0.11083,0.11286,0.080996,0.11123,0.095647,0.087056,0.095365,0.11191,461.66,425.86,427.79,494.38,536.95,525.54,453.72,535.22,532.53,482.33,483.48,421.77,435.53,427,491.37,511,503.1,545.55,507.34,544.81,429.4,433.13,543.89,459.43,440.35,546.56,552.91,496.55,464.06,507.87,444.92,464.07,496.35,574.79,489.31,451.45,499.74,478.34,450.7,505.27,465.05,517.43,422.22,469.58,464.68,506.28,548.64,434.47,539.22,503.18,424,538.47,496.49,543.85,481.19,515.95,450.6,448.57,470.2,497.8,515.66,508.75,537.78,476.97,553.99,431.85,441.66,511.31,451.53,440.83,532.21,408.95,544.05,529.79,531.16,488.24,432.19,520.81,407.49,483.44,487.52,529.32,426.02,480.91,494.23,446.94,483.29,562.36,491.65,463.06,490.24,423.76,455.86,535.75,506.02,418.37,495.82,445.83,560.96,537.7,443.64,480.19,494.5,452.69,526.78,554.09,425.44,444.87,466.64,575.78,466.61,434.13,426.08,545.22,533.32,496.75,485.65,528.73,455.57,501.21,499.44,478.32,421.46,542.47,520.5,466.96,483.98,502.1,462.57,501.72,534.9,480.99,441,500.65,494.59,487.18,423.27,535.27,492.45,479.58,538.28,441.41,451.89,504.13,470.66,457.64,450.46,483.4,533.89,539.13,510.13,521.87,398.23,536.19,452.68,419.49,533.24,515.43,529.34,466.39,519.4,488.03,490.04,558.71,518.27,495.34,471.02,438,431.39,460.46,525.98,455.51,446.12,438.92,558.12,463.38,457.82,484.21,518.65,514.85,520.89,477.18,460.95,482.05,476.11,499.62,463.9,505.06,518.83,482.46,484.62,472.27,522.28,523.05,434.43,538.12,464.71,438.59,454.92,528.82,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.131,0.149,0.169,0.176,0.14,0.176,0.173,0.163,0.114,0.129,0.153,0.182,0.14,0.197,0.167,0.131,0.156,0.137,0.192,0.104,0.123,0.109,0.181,0.119,0.175,0.156,0.183,0.2,0.115,0.115,0.164,0.103,0.182,0.138,0.14,0.157,0.134,0.13,0.12,0.172,0.177,0.161,0.123,0.17,0.115,0.188,0.145,0.148,0.12,0.162,0.199,0.159,0.165,0.129,0.132,0.119,0.151,0.114,0.162,0.146,0.163,0.107,0.189,0.138,0.12,0.15,0.193,0.17,0.134,0.13,0.166,0.108,0.136,0.148,0.176,0.132,0.18,0.179,0.101,0.119,0.165,0.15,0.102,0.136,0.163,0.2,0.12,0.115,0.136,0.155,0.167,0.136,0.123,0.1,0.118,0.11,0.124,0.132,0.107,0.14,0.116,0.158,0.138,0.164,0.178,0.108,0.138,0.198,0.1,0.146,0.147,0.183,0.129,0.178,0.1,0.149,0.132,0.181,0.14,0.107,0.171,0.101,0.133,0.15,0.174,0.131,0.11,0.183,0.1,0.188,0.11,0.112,0.116,0.114,0.18,0.181,0.117,0.111,0.157,0.17,0.156,0.102,0.177,0.172,0.172,0.12,0.107,0.2,0.148,0.173,0.109,0.15,0.15,0.112,0.135,0.19,0.169,0.173,0.188,0.131,0.179,0.109,0.158,0.153,0.143,0.121,0.143,0.185,0.173,0.144,0.197,0.179,0.104,0.175,0.172,0.104,0.193,0.147,0.124,0.145,0.184,0.125,0.192,0.106,0.109,0.16,0.151,0.167,0.104,0.126,0.171,0.134,0.13,0.182,0.18,0.175,0.163,0.196,0.102,0.115,2.5837,2.7832,2.9376,2.7183,2.5001,2.7758,2.6043,3.3935,2.5323,2.3168,2.8333,3.0884,2.8795,2.9483,2.7404,2.6459,2.6553,3.202,3.0877,2.2768,2.8217,2.7808,3.3318,2.6999,2.9564,2.9823,2.9909,3.7285,2.7656,2.519,3.253,2.844,3.4862,2.9766,2.8842,3.133,2.8697,3.2112,2.9003,3.0157,3.4099,3.3607,3.094,3.2625,2.7545,3.3929,3.0283,3.2506,2.9108,3.0623,3.6768,3.4541,3.5152,3.0873,2.9936,3.0282,3.2033,2.9277,3.258,3.1111,3.4954,3.0246,3.7134,3.2353,2.9023,3.2994,3.5751,3.2314,3.0958,3.0753,3.5956,3.0922,3.3544,3.3844,3.3988,3.2516,3.6017,3.1982,2.8021,3.1017,3.6002,3.4509,3.0244,3.3234,3.2914,3.7284,3.182,2.702,3.0994,3.4436,3.7769,3.5162,3.3846,3.0982,3.1432,3.2178,3.338,2.9884,2.9599,3.4638,3.1825,3.5118,3.3547,3.5353,3.3992,3.0301,3.338,3.1762,2.7785,3.3805,3.4512,3.7126,3.2812,3.5999,2.8364,3.4073,3.2538,3.1571,3.0912,3.013,3.6095,3.0336,3.301,3.335,3.4856,3.2895,3.0028,3.2305,2.7139,3.6086,3.1612,3.2026,3.2211,3.1097,3.5391,3.7114,3.1293,2.8304,3.2482,3.536,3.3859,2.9689,3.5231,3.349,3.4436,3.1277,2.8596,3.2742,2.9553,3.3961,2.9324,3.3685,3.2574,2.8125,3.2223,3.6647,3.2394,3.1132,3.0527,3.0395,3.3513,2.9429,3.1987,2.9837,3.2881,3.0888,2.9438,3.126,2.8302,3.0384,3.3016,3.3635,2.6616,2.9512,3.4609,2.8502,3.0739,2.8315,2.4251,2.9212,3.1594,2.9487,3.1753,2.4614,2.9886,3.292,2.7783,2.9244,2.2346,2.7469,2.8606,2.8109,2.6059,2.6724,3.3661,3.1737,2.6281,2.8806,2.0543,2.4829,0,0,7.0002,9.7467,14.345,19.236,21.702,28.716,29.418,37.907,38.567,45.672,42,57.17,52.343,63.255,55,72,57,65,57,72,57,65,60,55,55,56.042,63.626,47.7,71.028,38.255,78,28.488,85.086,18.803,92.536,9.3962,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.092435,0.09828,0.10496,0.11017,0.097427,0.10954,0.11023,0.097618,0.084905,0.094435,0.099326,0.10835,0.093183,0.11562,0.10617,0.091645,0.10254,0.088422,0.11221,0.082535,0.090725,0.084074,0.11104,0.090051,0.11266,0.10428,0.11556,0.11429,0.087325,0.08999,0.10729,0.082182,0.11238,0.098495,0.10044,0.10551,0.097742,0.092156,0.090508,0.1133,0.10881,0.10262,0.088032,0.10749,0.087645,0.11345,0.099111,0.098084,0.088493,0.10626,0.11736,0.10311,0.10508,0.09313,0.095591,0.088778,0.10222,0.087277,0.10653,0.10093,0.10413,0.082337,0.11267,0.095611,0.090379,0.10046,0.11575,0.10997,0.095198,0.093488,0.10701,0.084291,0.095803,0.10116,0.11344,0.094946,0.11295,0.1169,0.0835,0.089997,0.10668,0.10152,0.081831,0.096268,0.1091,0.11996,0.089792,0.092315,0.098655,0.10388,0.1158,0.10336,0.097862,0.087749,0.097682,0.092366,0.098898,0.10694,0.093372,0.10597,0.087579,0.10435,0.096751,0.10676,0.11428,0.084933,0.096928,0.12498,0.083178,0.10026,0.099938,0.11297,0.09311,0.11208,0.082534,0.10133,0.094878,0.11814,0.10048,0.08454,0.10926,0.081233,0.09511,0.10282,0.11188,0.094251,0.086488,0.11846,0.084049,0.11645,0.087904,0.088565,0.090534,0.090631,0.11783,0.1164,0.092039,0.091974,0.11066,0.11346,0.10051,0.078844,0.10795,0.10775,0.10673,0.086486,0.082655,0.11984,0.10158,0.10766,0.083014,0.098139,0.09932,0.085846,0.092821,0.1118,0.10776,0.11081,0.11762,0.092866,0.10941,0.081886,0.10225,0.10239,0.094663,0.086401,0.098344,0.11427,0.11261,0.097778,0.11479,0.10708,0.080576,0.10994,0.10322,0.078581,0.11573,0.099379,0.093189,0.097519,0.11568,0.091622,0.11874,0.087111,0.083065,0.10413,0.10571,0.11114,0.088511,0.094288,0.10616,0.090952,0.091343,0.11258,0.10425,0.10435,0.10545,0.11565,0.08369,0.085564,460.36,482.47,509.95,521.44,473.23,520.31,517.31,501.88,433.9,458.04,482.78,528.79,463.39,550.95,501.91,452.06,486.85,459.51,541.79,414.47,452.26,429.75,539.58,446.49,523.59,497,544.41,564.27,438.65,441.01,514.76,426.74,547.32,479.31,482.5,504.56,473.55,467.04,451.77,526.24,532.05,498.19,446.88,512.65,437.39,545.72,478.82,482.13,442.29,502.52,566.09,500.83,509.41,462,466.6,447.1,492.2,440.11,505.67,485.94,505.25,425.41,548.02,471.44,446.68,487.1,554.78,514.06,464.18,460.52,515.82,432.95,473.43,491.59,529.71,468.64,544.5,543.73,422.89,451.01,515.83,493.34,425.97,476.23,513.85,571.15,453.34,446.59,474.66,502.66,545.33,499.44,481.69,448.59,476.23,463.25,484.31,496.4,457.65,507.68,446.93,503.03,476.38,513.43,542.88,434.47,477.55,568.91,421.55,489.11,489.14,544.84,462.71,540.94,422.2,491.05,468.07,545.4,477.99,432.46,523.3,423.3,470.09,495.23,527.74,467.95,438.44,549.89,422.23,555.77,447.87,448.54,455.18,453.65,556.01,555.98,457.77,449.09,512.84,532.27,491.78,414.11,528.28,513.27,513.27,441.44,423.24,559.64,479.81,514.73,428.85,483.86,484.66,433.28,465.7,548.25,511.55,516.39,545.58,460.26,534.82,426.12,494.93,490.17,476.06,444.58,476.14,542.58,515.48,477.81,553.44,527.22,415.36,514.85,510.21,415.64,548.44,476.77,444.38,474.77,553.94,459.96,562.61,435,438.83,509.7,498.85,519.83,430.6,463.95,508.03,455.81,451.36,533.98,529.41,511.86,497.65,550.81,411.44,431.56,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.198,0.138,0.152,0.167,0.15,0.173,0.102,0.168,0.132,0.188,0.114,0.103,0.106,0.152,0.121,0.176,0.105,0.123,0.183,0.104,0.179,0.111,0.185,0.179,0.122,0.14,0.146,0.139,0.121,0.122,0.169,0.115,0.128,0.106,0.122,0.103,0.17,0.14,0.138,0.149,0.126,0.136,0.159,0.122,0.146,0.158,0.113,0.131,0.155,0.14,0.172,0.123,0.147,0.182,0.114,0.19,0.145,0.148,0.164,0.154,0.183,0.118,0.113,0.126,0.2,0.109,0.153,0.178,0.184,0.196,0.2,0.155,0.124,0.152,0.174,0.148,0.127,0.183,0.183,0.155,0.16,0.151,0.178,0.189,0.1,0.198,0.134,0.14,0.137,0.185,0.174,0.118,0.141,0.1,0.181,0.123,0.108,0.166,0.122,0.155,0.116,0.179,0.199,0.11,0.184,0.149,0.105,0.152,0.148,0.19,0.134,0.176,0.113,0.139,0.154,0.118,0.119,0.124,0.175,0.195,0.112,0.155,0.114,0.105,0.103,0.143,0.142,0.167,0.139,0.123,0.109,0.157,0.121,0.138,0.101,0.125,0.165,0.112,0.166,0.186,0.187,0.115,0.147,0.19,0.173,0.187,0.139,0.15,0.19,0.143,0.167,0.142,0.171,0.161,0.144,0.155,0.16,0.188,0.168,0.172,0.197,0.106,0.118,0.132,0.195,0.123,0.157,0.111,0.127,0.127,0.171,0.11,0.176,0.13,0.174,0.137,0.143,0.112,0.11,0.154,0.164,0.109,0.114,0.103,0.116,0.122,0.169,0.106,0.169,0.14,0.114,0.199,0.15,0.129,0.105,0.131,0.161,0.124,0.157,0.128,2.9029,2.6921,2.8158,2.6545,2.53,2.7383,2.2091,3.3951,2.6295,2.5549,2.7456,2.7387,2.8013,2.8914,2.6399,3.0766,2.4981,3.3015,3.2261,2.4165,3.2005,2.814,3.3737,3.0859,2.6597,2.8975,2.8075,3.3111,2.828,2.5791,3.3624,3.0273,3.1763,2.7962,2.8241,2.7936,3.163,3.3775,3.1119,2.951,3.1281,3.263,3.4746,3.0053,3.0552,3.2925,2.8663,3.2067,3.2572,3.0005,3.4527,3.1137,3.3296,3.4149,2.8082,3.4913,3.1166,3.1506,3.228,3.1215,3.588,3.0921,3.0608,3.0877,3.4039,2.9269,3.2649,3.23,3.3725,3.4852,3.6972,3.3787,3.1279,3.2999,3.2668,3.2589,3.0918,3.1003,3.2969,3.2817,3.4472,3.3304,3.5766,3.6316,2.6483,3.5409,3.2037,2.8349,3.0987,3.4981,3.7115,3.218,3.4254,3.0192,3.4604,3.2135,3.1068,3.0488,3.0097,3.4959,3.1189,3.5937,3.7272,3.0185,3.3732,3.3209,2.9735,2.8822,3.1078,3.6248,3.3412,3.6607,3.1363,3.3144,3.2649,3.1344,3.1376,2.8179,3.3404,3.684,3.2555,3.6129,3.251,3.1343,2.938,3.4576,3.4831,3.1201,3.2022,3.2952,3.1474,3.5904,3.2484,3.3165,2.9296,3.281,3.5271,2.7758,3.2635,3.6756,3.5255,3.0299,3.2351,3.3902,3.3824,3.5715,3.0635,2.9229,3.1288,3.1245,3.298,3.2106,3.3101,3.085,3.1999,3.3208,3.0951,3.1168,2.8777,3.2345,3.5549,3.0047,2.9876,2.9264,3.7631,3.2024,3.118,2.7344,2.6488,2.9999,3.2379,2.9328,3.2472,2.7596,3.5686,3.2241,2.8721,2.6693,2.3984,3.053,3.1214,2.8894,2.7629,2.4979,3.1356,3.0832,2.9375,2.6047,2.6181,2.9066,2.5983,3.2874,2.8068,2.4878,2.8933,2.9788,2.6932,2.5851,2.3779,2.6467,0,0,7.3239,9.5058,14.375,19.216,21.561,28.826,29.297,38,38.354,45.872,44,56.461,52.696,64.73,45.183,74.088,57,72,57,72,55,65,57,70.971,60,59.352,64.439,48.203,70.754,38,78,28.434,84.633,18.434,92.244,9.1564,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.11451,0.092665,0.097356,0.10529,0.099632,0.10676,0.080813,0.097693,0.090666,0.11461,0.093973,0.087933,0.088957,0.11155,0.09887,0.12042,0.091676,0.092808,0.12181,0.092001,0.11289,0.085734,0.11347,0.11414,0.093008,0.09911,0.10286,0.09422,0.09069,0.093886,0.1136,0.090986,0.096177,0.08853,0.096872,0.08687,0.11621,0.099994,0.10186,0.10891,0.094251,0.09778,0.1063,0.093519,0.10481,0.1078,0.090282,0.095921,0.10681,0.10254,0.10563,0.087268,0.096187,0.11012,0.086022,0.11249,0.097556,0.098539,0.10468,0.10151,0.10852,0.08491,0.082726,0.088873,0.11718,0.08208,0.099395,0.11034,0.11123,0.11475,0.11183,0.097137,0.085766,0.096678,0.10626,0.095369,0.087573,0.11168,0.10954,0.098165,0.10004,0.097384,0.10615,0.10995,0.079908,0.11443,0.091037,0.097758,0.093541,0.1098,0.11215,0.090648,0.10006,0.082851,0.11788,0.093309,0.086426,0.11578,0.094961,0.10593,0.084848,0.10836,0.11492,0.08282,0.11277,0.098419,0.080661,0.10449,0.10025,0.11247,0.094857,0.1105,0.086392,0.097547,0.10507,0.089024,0.089507,0.095484,0.11351,0.11812,0.090778,0.10909,0.091936,0.088083,0.089002,0.10491,0.10415,0.12005,0.10565,0.09636,0.086953,0.10633,0.092327,0.10022,0.084756,0.094059,0.11064,0.092558,0.11394,0.11822,0.10734,0.081376,0.094008,0.10995,0.10333,0.10685,0.092288,0.098656,0.11278,0.093423,0.1005,0.090872,0.10198,0.10032,0.091861,0.095295,0.099792,0.11075,0.10544,0.10319,0.12117,0.084643,0.091242,0.099011,0.11812,0.091539,0.10878,0.090244,0.099529,0.095722,0.111,0.085427,0.11302,0.097471,0.10872,0.095855,0.10247,0.089302,0.09119,0.10555,0.11323,0.088591,0.092663,0.08947,0.089747,0.093444,0.11748,0.089995,0.12101,0.10437,0.089375,0.11967,0.10441,0.098089,0.081501,0.093722,0.11053,0.09457,0.11227,0.095862,551.64,460.55,479.97,499.44,477.35,508.36,411.5,500.67,454.15,539.82,465.19,447.41,452.51,518.24,474.68,552.3,452.45,477.28,573.83,450.32,542.48,437.01,549.2,541.36,453.31,479.17,488.71,476.99,453.24,454.25,535.5,458.99,478.29,445.75,469.68,442.32,538.69,495.37,494,508.67,469.73,482.63,514.9,462.84,497.07,514.24,451.8,476.51,511.08,489.56,510.09,443.34,476.81,533.07,431.03,544.33,475.83,478.75,501.07,486.69,529.94,431.47,424.91,442.48,550.69,419.63,481.43,523.83,532.55,546.57,547.42,478.22,436.8,473.99,503.29,469.88,442.22,526.9,527.63,478.89,488.47,476.02,522.05,535.51,405.23,548.03,454.84,462.67,459.01,531.95,534.34,456.43,489.47,429.76,554.42,464.68,443.47,524.87,464.35,508.92,433.94,527.95,553.96,424.27,535.7,479.51,418.69,484.21,479.31,543.69,472.34,528.06,442.26,478.1,499.2,449.89,452.04,458.84,529.14,564.71,460.53,520.53,463,448.86,446.37,504.94,504.44,538.85,500.59,476.47,445.31,511.85,462.31,485.54,432.62,468.42,525.03,450.05,526.53,562.55,527.76,420.4,464.73,530.42,498.26,527.28,455.52,469.57,533.36,459.61,492.91,459.12,498.01,484.46,461.86,477.34,485.5,531.5,496.07,499.4,574.2,437.29,455.56,474.86,569.98,462.87,511.8,445.89,470.4,468.79,527.61,441.82,534.09,470.81,530.44,481.19,491.21,445.98,444.43,504.86,532.95,453.78,462.08,445.14,463.97,473.74,541.62,450.5,541.94,499.82,450.34,574.77,500.7,470.97,435.54,474.13,517.72,464.69,512.73,470.38,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.192,0.112,0.149,0.164,0.157,0.189,0.169,0.183,0.166,0.134,0.127,0.135,0.141,0.183,0.171,0.183,0.193,0.182,0.197,0.195,0.132,0.139,0.158,0.169,0.146,0.179,0.163,0.16,0.114,0.117,0.131,0.197,0.107,0.196,0.148,0.144,0.185,0.183,0.113,0.181,0.151,0.132,0.11,0.159,0.178,0.189,0.198,0.112,0.14,0.104,0.164,0.189,0.169,0.139,0.176,0.2,0.1,0.183,0.132,0.175,0.123,0.12,0.181,0.177,0.181,0.176,0.109,0.189,0.138,0.122,0.157,0.134,0.171,0.17,0.185,0.2,0.18,0.114,0.177,0.157,0.156,0.134,0.116,0.117,0.105,0.181,0.175,0.186,0.171,0.116,0.174,0.156,0.11,0.191,0.191,0.163,0.142,0.124,0.109,0.181,0.197,0.101,0.148,0.11,0.142,0.158,0.143,0.101,0.199,0.193,0.178,0.14,0.169,0.171,0.134,0.104,0.162,0.195,0.175,0.123,0.156,0.139,0.155,0.173,0.149,0.192,0.169,0.135,0.161,0.145,0.179,0.1,0.159,0.102,0.198,0.151,0.128,0.111,0.134,0.164,0.198,0.109,0.121,0.127,0.177,0.107,0.19,0.122,0.172,0.176,0.19,0.12,0.173,0.135,0.139,0.151,0.113,0.136,0.194,0.118,0.131,0.181,0.125,0.116,0.119,0.199,0.141,0.139,0.176,0.106,0.117,0.172,0.132,0.17,0.102,0.159,0.154,0.114,0.111,0.193,0.151,0.105,0.115,0.167,0.148,0.16,0.146,0.193,0.183,0.198,0.194,0.173,0.105,0.2,0.147,0.106,0.2,0.157,0.146,0.101,2.8503,2.492,2.7706,2.6164,2.5409,2.7852,2.5433,3.4597,2.798,2.3023,2.5903,2.7225,2.798,2.8026,2.6867,2.8539,2.7496,3.422,3.0191,2.6699,2.8801,3.0089,3.1789,3.0077,2.7931,3.107,2.881,3.4463,2.7481,2.5265,2.9297,3.4294,2.8216,3.2319,2.8529,2.9577,3.0851,3.4981,2.754,2.9786,3.2646,3.1716,3.0043,3.2205,3.2003,3.4304,3.3743,2.9824,3.0916,2.6766,3.3384,3.5451,3.4315,3.068,3.1836,3.4894,2.6987,3.3204,2.9531,3.1997,3.1585,3.1472,3.636,3.4877,3.3529,3.4973,2.93,3.3178,3.0728,3.0083,3.3716,3.1884,3.4625,3.3871,3.331,3.5949,3.4479,2.6404,3.2093,3.2721,3.4979,3.3,3.1727,3.1256,2.786,3.5419,3.5501,3.2729,3.4117,3.0262,3.584,3.4348,3.04,3.6293,3.4197,3.4237,3.2789,2.7451,2.8073,3.5338,3.7861,2.9829,3.4172,3.0478,3.1285,3.4216,3.3357,2.592,3.4738,3.6573,3.5759,3.3113,3.496,3.4185,3.1003,2.9491,3.3617,3.1884,3.1913,3.0649,3.4199,3.263,3.3934,3.4858,3.1144,3.5771,3.4566,2.7808,3.1723,3.2533,3.6932,3.035,3.5402,2.9563,3.6149,3.4545,3.1946,2.7717,3.0373,3.4681,3.6943,3.0626,3.1146,3.0471,3.5011,3.0255,3.4902,2.8183,3.118,3.4383,3.5691,3.1447,3.4473,3.0168,3.2794,3.4148,2.8565,2.9202,3.1096,2.953,3.0782,3.5689,3.0162,2.7778,3.1421,3.7285,2.9808,2.9206,2.8955,2.7908,2.8575,3.4044,2.9567,2.9929,2.9611,3.3854,2.9343,2.6835,2.4026,3.2701,2.8763,2.6859,2.6157,2.7414,3.2073,3.1814,2.6653,2.9694,2.5505,3.0601,2.9835,3.0652,2.4447,2.7543,3.1574,2.6963,2.7975,2.7077,2.2803,2.392,0,0,7.4377,9.4171,14.616,19.033,21.904,28.567,29.595,37.778,38.261,46.078,46.287,55,55,63.251,43.269,65,55,67.527,54.31,69.103,60,58.538,55,69.447,57,57.614,63.633,47.614,70.093,37.501,77.155,27.799,84.413,18.243,92.025,8.9661,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.11064,0.081076,0.094634,0.10245,0.10045,0.11024,0.10524,0.10071,0.10126,0.093298,0.084962,0.087039,0.088784,0.10532,0.10205,0.10476,0.10957,0.09828,0.10806,0.11117,0.093941,0.095825,0.10248,0.10902,0.10135,0.11207,0.10786,0.10048,0.086533,0.090446,0.089925,0.11203,0.079428,0.11378,0.098392,0.095502,0.11114,0.10591,0.083167,0.11073,0.10115,0.093298,0.084017,0.10518,0.11353,0.11555,0.11975,0.085295,0.097948,0.084291,0.099889,0.10764,0.10095,0.092018,0.10642,0.11242,0.077026,0.10772,0.090062,0.10585,0.088336,0.086963,0.10923,0.10917,0.11226,0.10865,0.083614,0.11589,0.096464,0.089428,0.096399,0.088285,0.1012,0.1016,0.10815,0.11104,0.10494,0.084622,0.10631,0.097454,0.10297,0.09482,0.087144,0.088158,0.08537,0.11333,0.11071,0.11832,0.11049,0.08869,0.10603,0.099955,0.082296,0.11242,0.11468,0.1031,0.095345,0.092511,0.08423,0.10943,0.11594,0.080142,0.099048,0.084319,0.099351,0.1035,0.097607,0.084288,0.12009,0.11572,0.10687,0.093301,0.10401,0.10567,0.092754,0.079418,0.10249,0.11784,0.10978,0.087863,0.098208,0.092334,0.098056,0.10465,0.098405,0.11126,0.10331,0.095648,0.10299,0.095145,0.11273,0.081361,0.10561,0.083312,0.12145,0.10287,0.094566,0.090236,0.099232,0.10862,0.11613,0.082757,0.088372,0.092061,0.10971,0.082088,0.11514,0.092031,0.11175,0.10997,0.11478,0.087941,0.10908,0.096665,0.095758,0.099839,0.087406,0.098184,0.12139,0.088956,0.09493,0.11211,0.092631,0.090604,0.088269,0.1177,0.10077,0.10048,0.11734,0.085159,0.08965,0.10934,0.096065,0.11296,0.080602,0.10393,0.10657,0.089968,0.091447,0.11947,0.097973,0.078619,0.084361,0.10612,0.093143,0.098478,0.098111,0.11384,0.11462,0.11473,0.11473,0.10564,0.081686,0.11952,0.093815,0.079505,0.11904,0.10295,0.10293,0.080176,536,415.84,467.93,489.05,479.02,531.45,495.4,520.73,491.17,447.79,424.29,433.53,442.84,510.27,482.12,508.26,523.14,504.67,527.84,524.94,464.67,472.44,499.6,515.5,483.97,538.11,507.41,499.95,439.26,442.84,445.89,542.33,411.65,543.85,468.95,463.39,529.4,523.48,420.88,523.31,489.39,461.74,431.83,500.91,536.43,550.01,563.38,433.24,475.11,422.28,486.76,528.96,493.29,454.61,502.33,543.62,398.25,521.17,445.08,500.26,444.33,438.7,532.62,528.56,533.38,515.03,424.28,542.66,465.94,442.18,473.95,442.05,492.2,491.57,521.58,539.55,515.17,414.76,512.16,473.08,499.12,467.6,443.61,445.78,427.3,542.45,524.63,549.07,519.95,442.99,510.41,485.45,423.57,544.79,544.29,496.03,468.73,442.68,422.61,530.18,558.31,415.24,482.88,430.28,475.07,496.24,476.65,415.04,562.76,552.91,526.13,463.74,503.86,507.26,457.18,413.36,495.12,548.27,512.87,441.1,484.38,460.19,483.03,507.32,475.29,541.62,501.76,455.39,492.06,468.83,544.53,422.65,507.28,427.05,570.18,496.51,465.4,439.31,474.35,513.06,558.66,426.17,444.7,454.09,531.08,423.58,549.33,445.09,515.21,518.01,552.97,446.11,519.69,469.63,473.86,490.1,437.84,468.78,560.66,443.96,468.15,544.8,459.42,447.49,450.54,568.88,482.6,477.76,530.49,430.97,450.26,524.03,471.5,524.64,426.88,508.08,502.76,444.53,442.54,564.8,477.07,411.38,427.37,499.33,472.1,488.14,471.1,542.15,533.01,549.44,550.58,509.53,417.7,560.19,476.01,417.94,559.62,488.78,477.66,410.62,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.162,0.128,0.159,0.143,0.11,0.196,0.168,0.196,0.115,0.18,0.142,0.193,0.169,0.114,0.103,0.112,0.171,0.101,0.148,0.155,0.182,0.145,0.1,0.122,0.104,0.199,0.164,0.1,0.103,0.122,0.178,0.14,0.151,0.188,0.19,0.143,0.176,0.123,0.117,0.198,0.164,0.166,0.188,0.102,0.128,0.172,0.145,0.195,0.145,0.112,0.191,0.1,0.176,0.1,0.146,0.12,0.196,0.14,0.103,0.178,0.131,0.164,0.14,0.144,0.126,0.179,0.146,0.104,0.195,0.15,0.149,0.134,0.164,0.14,0.175,0.188,0.149,0.165,0.129,0.163,0.164,0.151,0.116,0.173,0.132,0.139,0.186,0.168,0.108,0.157,0.108,0.165,0.139,0.182,0.178,0.2,0.13,0.117,0.118,0.16,0.133,0.191,0.108,0.177,0.149,0.164,0.159,0.153,0.17,0.155,0.193,0.155,0.192,0.181,0.185,0.19,0.12,0.134,0.19,0.115,0.149,0.11,0.115,0.159,0.14,0.142,0.151,0.166,0.15,0.134,0.119,0.146,0.137,0.182,0.101,0.157,0.162,0.199,0.189,0.152,0.129,0.101,0.124,0.185,0.198,0.17,0.16,0.161,0.165,0.1,0.137,0.133,0.198,0.1,0.174,0.14,0.106,0.136,0.112,0.103,0.169,0.102,0.101,0.143,0.113,0.145,0.136,0.11,0.164,0.165,0.165,0.187,0.1,0.102,0.152,0.147,0.2,0.136,0.139,0.184,0.162,0.107,0.105,0.153,0.14,0.174,0.163,0.1,0.101,0.184,0.116,0.157,0.194,0.197,0.185,0.189,0.191,0.107,0.186,0.141,2.7413,2.636,2.8643,2.5418,2.3104,2.8482,2.5683,3.5911,2.5234,2.531,2.8595,3.249,3.1636,2.5751,2.4406,2.6023,2.8125,2.9812,2.9401,2.6453,3.2975,3.1555,2.825,2.8072,2.5914,3.3101,2.9793,3.0321,2.754,2.6422,3.225,3.0425,3.1598,3.1759,3.0623,2.9315,3.0234,3.0326,2.7765,3.0445,3.3242,3.3922,3.5759,2.7525,2.8461,3.2909,3.0292,3.5632,3.1073,2.7162,3.6608,2.9593,3.6308,2.8663,3.0917,3.048,3.5267,3.1623,2.8503,3.342,3.256,3.5199,3.3632,3.3008,2.9557,3.5102,3.2767,2.7504,3.5199,3.2431,3.365,3.2087,3.4879,3.2664,3.2,3.493,3.309,3.0298,3.0388,3.3388,3.5419,3.4346,3.1285,3.53,3.0679,3.2793,3.6121,3.0683,2.8184,3.3892,3.0626,3.5429,3.3351,3.5927,3.3879,3.7103,3.2001,2.7377,2.9055,3.4129,3.2427,3.6676,2.9976,3.4992,3.1613,3.4271,3.3754,2.9252,3.2091,3.3324,3.5865,3.3486,3.596,3.4098,3.3193,3.5117,2.9451,2.8627,3.283,2.8791,3.4797,3.1167,3.1863,3.4999,3.1241,3.3198,3.4152,3.1549,3.2583,3.2294,3.1097,3.365,3.2683,3.49,2.7975,3.393,3.3472,3.2804,3.3099,3.2658,3.1862,2.979,3.1464,3.4413,3.6118,3.5377,3.2783,3.1334,3.0967,2.813,3.3009,3.3691,3.7214,2.8148,3.6441,3.4309,2.879,3.0385,2.7145,2.8998,3.41,2.9921,2.862,3.0244,3.1447,3.414,2.9976,2.7688,2.8877,3.2814,3.1357,3.4318,2.6436,2.5018,3.332,3.2296,3.1182,2.792,2.5256,3.1597,3.0604,2.8225,2.6466,2.7732,3.286,3.4104,2.8618,2.5191,2.2339,3.1088,2.4738,2.8895,2.8814,2.6765,3.3141,3.177,2.6935,2.3394,2.3773,2.5867,0,0,7.0797,9.689,14.183,19.361,21.259,29.053,28.721,38.451,35.96,48.021,42,58.39,44.181,70.19,55,65,55,65,57,65,50.367,55,47.627,65,55,55.532,59.855,44.558,68.089,35.828,76.356,27.131,83.908,17.805,91.895,8.8491,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.10292,0.089314,0.10034,0.097064,0.084244,0.11504,0.10726,0.10699,0.084388,0.11244,0.10096,0.11863,0.10966,0.09032,0.085929,0.088984,0.11436,0.079077,0.10285,0.10923,0.11909,0.10399,0.084172,0.096332,0.088947,0.12603,0.11469,0.081988,0.086631,0.098128,0.10571,0.091796,0.095334,0.11014,0.11214,0.094309,0.1071,0.084131,0.08397,0.11537,0.10425,0.10437,0.11143,0.080817,0.09307,0.10798,0.099058,0.11433,0.098218,0.086479,0.11631,0.080865,0.1104,0.081843,0.10286,0.090629,0.11978,0.099276,0.083684,0.11435,0.092664,0.10499,0.095824,0.098349,0.093406,0.11147,0.09953,0.084164,0.11789,0.10172,0.096347,0.091183,0.10153,0.093343,0.1092,0.11128,0.09694,0.10687,0.090625,0.10269,0.1042,0.099601,0.086054,0.10817,0.094649,0.095732,0.11267,0.11102,0.08515,0.10276,0.082672,0.10474,0.095253,0.11137,0.11191,0.11735,0.092385,0.090829,0.089541,0.10395,0.090465,0.11072,0.080729,0.10692,0.098626,0.10229,0.10071,0.10294,0.10715,0.09944,0.10809,0.095441,0.10761,0.10535,0.10788,0.10775,0.083991,0.091412,0.1102,0.082264,0.10159,0.08595,0.087885,0.10595,0.10113,0.099994,0.1032,0.11279,0.10442,0.097089,0.085735,0.095801,0.092709,0.1098,0.079694,0.10037,0.10301,0.1188,0.11455,0.099528,0.091683,0.079448,0.089651,0.11379,0.11717,0.10652,0.10499,0.10699,0.10913,0.080641,0.10108,0.098348,0.12416,0.086412,0.11472,0.10118,0.089169,0.1034,0.094297,0.08724,0.11302,0.084145,0.084952,0.10518,0.088615,0.10195,0.10205,0.09099,0.11648,0.11262,0.10511,0.11089,0.079657,0.08225,0.097434,0.096318,0.11936,0.09602,0.10032,0.11264,0.10935,0.08526,0.08606,0.10847,0.096915,0.11075,0.11197,0.084672,0.088343,0.11821,0.082061,0.095344,0.10958,0.11292,0.10159,0.10454,0.11055,0.079207,0.11221,0.091997,493.9,446.82,488.1,466.66,421.16,550.16,503.67,546.66,428.08,529.82,488.74,567.55,523.49,447.18,431.27,446.01,530.02,427.53,495.43,506.5,562.7,499.8,434.09,466.68,440.62,585.44,528.95,433.93,438.85,468.29,518.56,456.29,470.31,530.15,533.64,461.59,506.29,432.47,424.33,544.59,502.8,504.44,543.98,414.63,452.93,513.37,478.93,553.16,476.12,430.88,557.81,420.13,525.13,419.12,485.61,450.78,566.06,477.36,424.41,540.71,462.7,506.46,473.45,478.52,454.65,538.44,484.71,423,558.51,488.22,478.23,457.03,496.57,464.08,511.52,541,479.58,499.04,449.89,496.32,506.47,488.15,439.23,516.12,462.02,473.11,548.07,511.39,427.98,496.58,426.7,504.59,469.05,537.3,533,562.33,459.48,439.23,440.34,498.31,455.3,542.13,418.7,523.23,475.78,496.92,491.66,481.86,503.98,484.39,529.02,468.12,526.44,512.22,518.27,525.36,423.02,440.35,524.98,414.37,497.41,441.56,448.29,508.76,483.93,488.2,501.58,519.81,497.67,476.2,436.86,473.07,460.31,531.09,409.37,488.82,496.82,554.11,541.51,481.56,458.57,417.1,450.06,543.47,560.49,513.86,502.32,501.32,506.7,415.65,490.97,484.13,583.13,434.98,539.8,495.26,446.9,488.45,454.15,440.67,534.38,438.36,436.48,496.98,454.32,501.57,490.66,450.44,527.13,528.4,503.84,542.71,411.72,414.41,484.51,479.56,562.76,463.71,468.42,539.99,518.7,439.92,436.64,504.68,486.29,534.23,521.91,429.22,431.25,559.44,415.09,469.42,528.73,532.63,516.06,522.76,528.17,401.16,520.57,448.9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.192,0.124,0.133,0.175,0.107,0.171,0.168,0.13,0.171,0.191,0.181,0.152,0.113,0.19,0.149,0.141,0.155,0.121,0.133,0.174,0.156,0.176,0.176,0.176,0.114,0.165,0.148,0.106,0.184,0.122,0.101,0.164,0.117,0.106,0.194,0.114,0.152,0.137,0.104,0.131,0.135,0.149,0.171,0.2,0.152,0.195,0.153,0.159,0.114,0.157,0.126,0.127,0.143,0.166,0.162,0.13,0.102,0.124,0.145,0.191,0.161,0.188,0.159,0.144,0.133,0.197,0.148,0.136,0.191,0.181,0.159,0.157,0.15,0.109,0.169,0.137,0.101,0.173,0.113,0.18,0.126,0.159,0.157,0.117,0.144,0.182,0.198,0.101,0.114,0.162,0.1,0.176,0.158,0.167,0.163,0.16,0.11,0.123,0.146,0.133,0.179,0.168,0.131,0.196,0.165,0.185,0.191,0.119,0.14,0.106,0.114,0.159,0.152,0.144,0.172,0.126,0.141,0.194,0.157,0.168,0.175,0.145,0.143,0.147,0.187,0.136,0.189,0.104,0.125,0.19,0.194,0.12,0.121,0.176,0.136,0.12,0.122,0.13,0.184,0.146,0.112,0.137,0.132,0.107,0.183,0.173,0.143,0.17,0.134,0.194,0.15,0.111,0.147,0.136,0.103,0.135,0.198,0.126,0.173,0.115,0.117,0.129,0.101,0.148,0.197,0.128,0.167,0.185,0.194,0.102,0.185,0.108,0.131,0.175,0.137,0.105,0.175,0.156,0.146,0.141,0.163,0.192,0.142,0.139,0.136,0.12,0.184,0.123,0.155,0.178,0.102,0.15,0.14,0.107,0.182,0.14,0.137,0.168,0.144,0.137,2.8786,2.6035,2.7002,2.6929,2.2859,2.7307,2.5633,3.106,2.8527,2.5676,3.0116,2.9432,2.7077,2.9416,2.6709,2.7322,2.6727,3.0953,2.7748,2.6757,3.0122,3.2172,3.2636,3.0219,2.5549,2.9975,2.7742,2.9528,3.1877,2.536,2.8541,3.4258,3.1003,2.8143,3.2713,2.9042,3.0735,3.3734,2.8548,2.8512,3.0619,3.2159,3.4071,3.3871,2.96,3.3723,3.0338,3.2746,2.8197,2.9828,3.1968,3.2311,3.4013,3.4245,3.2006,3.1412,2.8556,3.0522,3.2251,3.4308,3.3732,3.5588,3.3903,3.1853,2.9068,3.5004,3.1777,2.9049,3.3802,3.3343,3.5328,3.4783,3.4728,3.0739,3.2407,3.2224,2.9676,3.1494,2.9827,3.5388,3.2491,3.5008,3.5253,3.1253,3.0957,3.5508,3.6992,2.6876,2.9759,3.3897,3.015,3.6767,3.5306,3.5137,3.3518,3.4962,3.0407,2.8449,3.1443,3.2303,3.5693,3.4728,3.2195,3.6286,3.156,3.4799,3.5613,2.762,3.1033,2.8569,3.0688,3.4543,3.4168,3.2578,3.2701,3.1034,3.2041,3.3156,3.213,3.3474,3.587,3.3542,3.3336,3.3085,3.4095,3.2235,3.5977,2.6091,2.9328,3.5793,3.7484,3.2127,3.189,3.5013,3.185,3.1688,3.0902,2.926,3.3156,3.2844,3.0464,3.3256,3.2093,2.8781,3.5631,3.5923,3.1886,3.1109,2.8702,3.572,3.3551,3.1152,3.3216,3.0739,3.0066,3.3427,3.4831,2.9016,3.0525,2.9756,2.9375,3.1561,2.7838,2.9794,3.697,3.1799,3.1168,3.1848,2.9621,2.7266,3.2831,2.8802,2.9211,2.9914,3.248,2.9046,3.0221,2.9402,2.5836,2.9324,2.9656,3.3053,2.8193,2.6093,3.1358,2.9047,2.874,2.6028,2.4506,2.9789,2.5037,3.0036,2.7441,2.3491,3.4836,3.0403,2.5657,2.8286,2.3208,2.6987,0,0,7,9.7468,13.772,19.653,21.111,29.148,28.583,38.537,34.954,48.706,42,58.42,44,70.252,43.636,65,55,61.145,44,65.013,45.514,57.651,55,65,57,53.168,66.182,48.558,69.759,37.104,76.127,26.933,84.058,17.927,91.776,8.7387,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.11271,0.087414,0.09049,0.10821,0.08264,0.10621,0.10686,0.084817,0.10488,0.11577,0.11082,0.099564,0.084017,0.11512,0.10122,0.097006,0.10381,0.083837,0.092899,0.1117,0.1015,0.10762,0.10712,0.10974,0.086985,0.10548,0.1006,0.078675,0.11114,0.091148,0.08614,0.11203,0.092409,0.089417,0.12679,0.092885,0.11028,0.099799,0.08785,0.1024,0.091014,0.095625,0.10285,0.11442,0.099672,0.11268,0.099307,0.099287,0.083572,0.10157,0.093048,0.093188,0.099173,0.10941,0.11005,0.095639,0.083938,0.093574,0.10199,0.11998,0.098075,0.1069,0.097061,0.092804,0.090834,0.11095,0.094631,0.092221,0.10996,0.10657,0.10425,0.10393,0.10082,0.084744,0.11179,0.097374,0.081484,0.11451,0.087837,0.11327,0.091411,0.10426,0.10311,0.088144,0.10175,0.11363,0.11857,0.084192,0.088161,0.10678,0.080985,0.11085,0.10453,0.1087,0.10867,0.10579,0.086213,0.09512,0.10315,0.095997,0.10631,0.10283,0.089192,0.11238,0.10497,0.10967,0.11116,0.088265,0.094586,0.080643,0.08408,0.10109,0.098421,0.096516,0.10859,0.089688,0.095713,0.11703,0.10279,0.10608,0.10636,0.095876,0.095184,0.097262,0.11315,0.093116,0.11192,0.083664,0.090946,0.11252,0.11665,0.088935,0.089694,0.11184,0.097167,0.089396,0.091247,0.097017,0.11721,0.10084,0.084867,0.094321,0.093166,0.084,0.11199,0.10753,0.098584,0.11144,0.097759,0.11635,0.10358,0.086674,0.10253,0.099922,0.083431,0.096564,0.12301,0.096794,0.1172,0.090288,0.088031,0.091674,0.081211,0.10249,0.11545,0.090937,0.1094,0.11618,0.12226,0.082366,0.11386,0.083013,0.094103,0.11294,0.093454,0.081171,0.1126,0.10537,0.10479,0.098687,0.10343,0.11132,0.095981,0.096921,0.089901,0.084881,0.11292,0.089559,0.1057,0.10939,0.08378,0.10195,0.10021,0.088149,0.11041,0.097,0.10076,0.11172,0.10673,0.0993,543,442.66,455.11,512.5,417.61,505.73,502.71,448.8,505.91,543.71,535.42,488.08,433.12,549.67,483.61,471.92,491.93,442.85,460.96,516.58,490.67,519.56,519.46,519.89,433.84,503.88,481.67,420.8,539.76,444.81,438.85,531.53,464.59,448.4,582.59,459.39,514.48,491.92,444.49,484.13,453.15,474.36,503.57,551.28,477.95,543.75,479.22,486.47,425,483.81,462.86,466.45,488.78,520.54,514.62,469.56,429.07,460.9,490.97,563.21,479.45,526.36,479.11,459.03,443.71,536.87,463.74,447.45,530.2,516.77,504.41,504.2,494.48,436.26,519.97,475.41,423.57,525.22,441.6,543.89,456.58,504.44,501.63,445.73,483.48,544.03,565.42,421.3,440.8,506.78,423.28,532.17,507.95,520.17,514.12,509.33,439.56,458.34,491.01,471.83,520.94,498.71,448.77,544.71,494.28,529.78,538.11,431.26,460.55,411.84,431.72,496.13,486.64,475.72,512.88,449.68,470.96,551.18,492.87,506.49,511.29,473.72,470.95,476.34,539.38,460.15,541.58,415,445.52,542.11,559.76,451.37,452.68,528.48,473.33,450.17,453.61,464.73,549.16,486.28,433.32,470.74,463.78,427.89,542.27,518.04,478.44,515.12,466.35,556.04,499.41,446.15,497.61,482.38,433.26,479.34,576.33,467.02,533.2,450.75,442.15,461.15,420.34,487.99,561.66,458.39,512.94,546.3,559.96,420.48,548.38,433.19,466.55,527.37,473.66,427.46,526.42,500.3,487.72,479.06,496.65,546.55,470.56,466.73,460.69,438.14,537.32,442.85,488.59,527.98,428.78,499.74,486.11,438.53,551.92,484.16,481.52,523.69,492.14,480.31,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.128,0.132,0.149,0.173,0.101,0.148,0.112,0.186,0.126,0.14,0.104,0.115,0.1,0.136,0.181,0.158,0.184,0.117,0.168,0.175,0.134,0.111,0.174,0.152,0.147,0.184,0.149,0.129,0.175,0.127,0.127,0.121,0.11,0.18,0.17,0.138,0.173,0.197,0.147,0.149,0.153,0.126,0.125,0.149,0.15,0.129,0.158,0.177,0.169,0.114,0.164,0.1,0.139,0.146,0.18,0.188,0.172,0.178,0.194,0.148,0.128,0.137,0.143,0.131,0.13,0.199,0.2,0.164,0.181,0.172,0.168,0.114,0.113,0.189,0.101,0.168,0.181,0.172,0.114,0.164,0.112,0.146,0.166,0.137,0.152,0.195,0.131,0.117,0.191,0.148,0.15,0.196,0.127,0.18,0.156,0.169,0.147,0.138,0.114,0.199,0.173,0.145,0.149,0.1,0.102,0.181,0.104,0.177,0.172,0.168,0.154,0.135,0.198,0.191,0.147,0.117,0.123,0.101,0.188,0.136,0.149,0.153,0.18,0.162,0.106,0.138,0.146,0.172,0.179,0.1,0.16,0.103,0.184,0.124,0.133,0.123,0.187,0.13,0.174,0.161,0.187,0.119,0.152,0.184,0.161,0.101,0.125,0.169,0.161,0.19,0.193,0.18,0.118,0.137,0.197,0.148,0.133,0.197,0.17,0.17,0.141,0.109,0.199,0.108,0.167,0.105,0.101,0.101,0.195,0.146,0.16,0.114,0.149,0.152,0.115,0.146,0.189,0.158,0.118,0.196,0.19,0.193,0.178,0.156,0.178,0.162,0.1,0.111,0.111,0.155,0.17,0.194,0.191,0.16,0.157,0.106,0.177,0.126,0.192,0.122,2.638,2.7564,2.9051,2.7762,2.3279,2.7083,2.3561,3.662,2.6904,2.4335,2.5687,2.7367,2.6434,2.6971,2.8838,2.8818,2.8507,3.1161,3.0258,2.7211,2.8893,2.7906,3.2726,2.8991,2.8099,3.1393,2.7951,3.1936,3.1345,2.5893,2.9407,2.9626,2.8884,3.1776,3.0452,2.972,3.0554,3.6398,3.0245,2.8455,3.2871,3.1388,3.1459,3.1484,3.0692,3.0516,3.1419,3.4955,3.265,2.7699,3.3424,2.8538,3.2072,3.1096,3.2489,3.4481,3.2373,3.2986,3.321,3.0378,3.1466,3.2476,3.2916,3.0855,2.982,3.6022,3.5283,3.1236,3.2781,3.3235,3.5809,3.1295,3.1104,3.6357,2.8225,3.5186,3.5789,3.1169,2.8716,3.4441,3.1007,3.3951,3.5435,3.2607,3.2156,3.6773,3.2068,2.7363,3.3988,3.3222,3.3734,3.6886,3.1714,3.5154,3.1879,3.444,3.2773,2.8376,2.8204,3.6059,3.6361,3.3895,3.4314,2.9649,2.7991,3.5856,3.0064,3.0716,3.3264,3.5167,3.4745,3.3138,3.7637,3.6524,3.202,3.1051,3.1458,2.6031,3.3694,3.2438,3.4343,3.4599,3.644,3.4554,2.8663,3.2874,3.3364,3.0821,3.3166,2.9137,3.5066,3.0232,3.6692,3.1194,3.1285,3.174,3.5796,2.8795,3.261,3.4005,3.5804,3.1189,3.3279,3.4053,3.3499,2.9252,2.9991,3.0942,3.0203,3.4828,3.4562,3.4798,2.9131,2.9203,3.5531,3.2613,2.9048,3.1687,2.8881,3.2129,3.2079,3.0537,3.5661,2.7588,3.5947,3.0498,2.7196,2.6674,3.0201,3.1591,3.1124,2.9111,3.0223,2.8465,3.0337,3.232,3.0755,2.92,2.4069,3.2359,3.1211,3.321,3.0354,2.7107,3.4524,3.2276,2.3901,2.5204,2.231,2.8661,2.8255,3.1309,2.9021,2.5499,3.1772,2.6526,2.665,2.4945,2.4221,2.5024,0,0,8.2049,8.7567,16.358,17.562,24.4,26.468,32.369,35.44,41.38,43.365,48.533,53,55.437,62.815,55,65,55,65,55,72,57,65,57,65,57,57.603,63.504,47.519,70.063,37.47,78,28.47,84.883,18.64,92.377,9.2679,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.095959,0.096603,0.10289,0.11475,0.085407,0.10459,0.090982,0.11048,0.09441,0.10393,0.083794,0.087731,0.080831,0.098427,0.11605,0.10637,0.11763,0.084717,0.10909,0.11537,0.094548,0.084329,0.10795,0.10263,0.10137,0.11346,0.10243,0.088949,0.10986,0.09447,0.090611,0.087463,0.082719,0.11136,0.10869,0.095454,0.10982,0.1131,0.098979,0.10181,0.1025,0.091358,0.090787,0.10217,0.10348,0.093762,0.1063,0.11067,0.10977,0.0892,0.1004,0.075827,0.091049,0.095195,0.10789,0.10888,0.1048,0.10656,0.11257,0.096841,0.087999,0.091121,0.093373,0.090056,0.090686,0.11313,0.11431,0.10428,0.10959,0.10545,0.10631,0.085674,0.085353,0.11449,0.081939,0.10697,0.11181,0.11302,0.088403,0.10603,0.084287,0.097761,0.10505,0.094997,0.1024,0.1156,0.092699,0.090751,0.117,0.099447,0.096323,0.11188,0.087923,0.10743,0.10092,0.10369,0.096014,0.096649,0.08525,0.11392,0.10842,0.098613,0.10001,0.080314,0.083173,0.11232,0.082084,0.11621,0.11131,0.10755,0.10103,0.09395,0.11643,0.11483,0.10076,0.087252,0.089861,0.084067,0.11666,0.095168,0.099151,0.10069,0.11036,0.10472,0.08395,0.095607,0.098817,0.11306,0.11347,0.080172,0.10355,0.080871,0.11201,0.090812,0.095135,0.089735,0.1142,0.096347,0.11223,0.10512,0.11023,0.085155,0.098318,0.11091,0.10199,0.077909,0.08936,0.10813,0.10553,0.11247,0.10874,0.1035,0.082785,0.091526,0.1092,0.092726,0.089885,0.11335,0.1059,0.10238,0.1016,0.086847,0.12334,0.08944,0.10946,0.084684,0.085937,0.086499,0.12768,0.10451,0.10358,0.084398,0.099756,0.10299,0.083609,0.096174,0.11592,0.10481,0.091848,0.11691,0.11319,0.11217,0.1094,0.10384,0.1049,0.10078,0.080747,0.085048,0.088206,0.10172,0.1038,0.10966,0.11104,0.1028,0.094776,0.077429,0.10831,0.08869,0.11673,0.086751,470.61,472.64,497.92,532.51,429.17,497.31,445.74,558.23,467.4,488.93,428.56,441.97,420.67,474.74,547.27,504.27,551.25,445.79,519.09,530.33,467.51,431.36,519.75,491.7,484.32,545.19,486.67,458.17,523.09,458.57,452.96,441.18,426.74,535.39,510.56,466.85,513.99,555.97,480.61,484.48,497.83,456.84,457.07,491.6,492.48,463.05,502.87,539.18,519.44,443.54,488.95,397.13,453.67,464.21,519.83,529.86,497.66,516.84,539.45,468.44,444.23,453.39,463.06,447.66,445.85,547.93,549.18,491.71,526.54,504.33,513,435.14,435.16,550.99,417.52,511.36,539.45,517.37,438.14,508.35,433.46,478.02,506.5,468.24,488.42,556.12,458.87,439.82,553.12,484.76,475.56,543.37,442.47,525.29,482.49,499.27,469.64,458.33,425.52,551.25,521.46,480.22,487.3,417.72,420.77,541.57,423.17,537.53,520.37,515.47,492.22,462.85,559.5,551.51,481.49,439.36,447.56,415.74,549.09,468.11,487.03,489.04,537.66,503.79,424.89,470.42,481.01,517.12,538.65,416.95,502.57,419.28,543.61,452.15,464.28,450.03,547.81,460.3,521.59,504.61,538.83,433.06,480.01,534.62,492.43,408.15,443.03,503.35,494.37,543.63,533.05,512.93,420.65,447.95,536.58,461.65,441.46,537.77,493.04,493.2,491.52,442.04,579.45,443.04,525.35,437.51,431.29,431.5,577.92,499.15,500.29,432.86,483.54,488.96,435.76,479.19,548.91,496.09,442.46,559.78,544.81,544.82,527.36,488.2,526.31,494.42,407.41,424.18,425.98,487.88,498.79,537.48,536.13,485.18,479.03,408.35,518.17,437.59,541.29,433.87,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.19,0.191,0.167,0.121,0.106,0.175,0.136,0.112,0.184,0.154,0.195,0.158,0.196,0.155,0.117,0.197,0.109,0.118,0.2,0.178,0.184,0.147,0.138,0.127,0.105,0.104,0.133,0.122,0.167,0.117,0.191,0.197,0.147,0.105,0.117,0.126,0.188,0.189,0.197,0.126,0.117,0.153,0.134,0.14,0.145,0.106,0.132,0.175,0.148,0.177,0.167,0.195,0.169,0.156,0.115,0.193,0.2,0.185,0.109,0.111,0.136,0.17,0.183,0.118,0.163,0.116,0.111,0.147,0.186,0.163,0.168,0.139,0.126,0.194,0.141,0.151,0.107,0.106,0.176,0.194,0.164,0.19,0.178,0.113,0.106,0.195,0.116,0.163,0.123,0.152,0.149,0.172,0.182,0.2,0.121,0.144,0.137,0.103,0.123,0.155,0.188,0.131,0.17,0.194,0.118,0.11,0.199,0.105,0.128,0.187,0.127,0.117,0.178,0.173,0.11,0.15,0.19,0.142,0.122,0.17,0.123,0.191,0.142,0.149,0.17,0.136,0.195,0.127,0.197,0.139,0.178,0.181,0.162,0.181,0.159,0.16,0.114,0.189,0.115,0.151,0.132,0.129,0.117,0.155,0.185,0.15,0.136,0.193,0.113,0.148,0.176,0.19,0.193,0.111,0.154,0.121,0.117,0.187,0.137,0.11,0.122,0.138,0.165,0.163,0.193,0.131,0.14,0.128,0.111,0.197,0.109,0.147,0.157,0.17,0.127,0.152,0.139,0.109,0.112,0.14,0.1,0.102,0.105,0.177,0.189,0.191,0.1,0.166,0.128,0.107,0.11,0.106,0.155,0.13,0.116,0.114,0.184,0.102,0.15,0.107,2.8867,2.9987,2.9208,2.4258,2.2935,2.7659,2.425,2.9665,2.935,2.4325,3.0195,2.9197,3.1696,2.7094,2.4346,2.9711,2.3505,2.9966,3.0834,2.6438,3.3012,3.1656,3.138,2.8328,2.6021,2.6987,2.7874,3.2445,3.2001,2.6042,3.3219,3.4401,3.1507,2.6366,2.6616,2.8427,3.1014,3.5432,3.2937,2.666,3.0207,3.3705,3.2439,3.1078,3.0422,2.8664,2.9844,3.5019,3.1573,3.2051,3.3833,3.6071,3.4569,3.2141,2.7833,3.4707,3.4301,3.3547,2.7893,2.7699,3.2883,3.5618,3.6718,3.0625,3.2333,3.0365,2.9683,3.0756,3.4279,3.3284,3.5636,3.3408,3.2182,3.6479,3.1475,3.3781,2.972,2.668,3.2984,3.6201,3.5429,3.7157,3.6295,3.0503,2.8488,3.6781,3.0748,3.0404,2.9452,3.3531,3.4349,3.6054,3.6492,3.7005,3.0195,3.3509,3.2662,2.6037,2.9128,3.4054,3.679,3.258,3.5498,3.6173,2.9565,3.0137,3.6398,2.6595,2.9517,3.5479,3.2596,3.1381,3.6377,3.5773,2.8652,3.3583,3.6918,2.8649,2.9645,3.5226,3.15,3.6624,3.296,3.2956,3.2979,3.2089,3.6107,2.7535,3.3595,3.2057,3.5413,3.587,3.4294,3.4532,3.2309,3.3804,2.9412,3.1947,2.789,3.2292,3.241,3.2751,3.1045,3.2775,3.5702,3.4247,3.1403,3.3067,2.7533,3.2566,3.4655,3.6653,3.5572,2.8146,3.383,3.1486,2.879,3.2079,2.7838,2.8731,2.9687,3.2156,3.265,3.0625,3.6658,3.1969,2.9418,2.8008,2.4891,3.3821,2.83,3.2763,3.1679,3.0314,3.2468,3.3831,2.8813,2.6736,2.4369,2.9994,2.6425,2.7995,2.6665,2.915,3.6674,3.5444,2.4837,2.9642,2.4068,2.6475,2.6456,2.7697,2.9152,2.562,3.0927,2.9333,2.8712,2.5043,2.4076,2.5765,0,0,7.7826,9.134,15.35,18.447,23.428,27.321,31.32,36.361,37.992,46.335,44.32,56.531,55,62.003,55,65,60,65,55,60,55,72,57,65,55,56.061,62.027,46.334,70.559,37.896,78,28.481,85.021,18.75,92.399,9.2855,100,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.11331,0.11246,0.10389,0.089086,0.083131,0.1088,0.096056,0.078948,0.11047,0.10385,0.11137,0.098055,0.1101,0.099101,0.085222,0.11264,0.08225,0.079708,0.11251,0.10905,0.11934,0.10434,0.10033,0.098169,0.088977,0.087375,0.10168,0.091212,0.1131,0.095474,0.1113,0.11232,0.095105,0.080658,0.086445,0.088844,0.11253,0.10815,0.1139,0.090746,0.089089,0.10277,0.095224,0.099552,0.10261,0.084891,0.097023,0.11101,0.10276,0.11507,0.10208,0.11082,0.10212,0.099254,0.084966,0.11152,0.11463,0.10965,0.081872,0.083097,0.094134,0.10646,0.11071,0.087689,0.10697,0.086942,0.085069,0.10153,0.11455,0.10595,0.10557,0.094977,0.090032,0.11538,0.097966,0.10009,0.082899,0.085595,0.1118,0.11568,0.10424,0.11324,0.10926,0.085374,0.083802,0.11564,0.086665,0.10921,0.091588,0.10097,0.099308,0.1076,0.11132,0.11803,0.090296,0.097902,0.095516,0.08526,0.092445,0.10233,0.11154,0.091127,0.10552,0.11459,0.087922,0.083208,0.11631,0.084318,0.092932,0.11254,0.090935,0.087183,0.11,0.10854,0.086413,0.10078,0.11436,0.10239,0.091569,0.10784,0.086415,0.11046,0.093781,0.096918,0.1059,0.091955,0.11257,0.092574,0.11605,0.093369,0.1055,0.10621,0.1001,0.10764,0.10095,0.099779,0.083294,0.1136,0.08541,0.097514,0.09387,0.092047,0.087815,0.10422,0.11397,0.10039,0.096871,0.12009,0.089471,0.10126,0.10914,0.1127,0.11506,0.086004,0.10058,0.087571,0.088412,0.11643,0.099245,0.084857,0.089318,0.094376,0.10588,0.10721,0.11307,0.091274,0.098236,0.094063,0.088886,0.11769,0.088138,0.10246,0.10824,0.11552,0.093096,0.10364,0.10293,0.089821,0.094024,0.10213,0.084643,0.084088,0.087177,0.11915,0.11599,0.11814,0.086359,0.11384,0.10212,0.088482,0.09226,0.088703,0.11198,0.10373,0.090708,0.091336,0.12537,0.089313,0.11525,0.09135,544.14,545.18,502.65,440.63,418.11,512.56,459.99,425.67,536.37,485.78,536.62,477.05,538.28,473.94,421.72,539.38,409.78,422.06,542.86,516.02,564.38,502.75,491.06,475.41,442.32,441.23,482.32,466.33,529.65,460.99,536.61,543.98,468.45,409.7,426.56,439.6,532.42,533.13,544.45,439.91,449.55,499.52,474.41,482.45,488.35,433.67,469.82,527.79,492.71,543.82,492.64,540.39,496.11,479.2,422.86,538.26,545.99,527.65,414.36,417.63,466.9,512.25,541.52,442.39,503.04,439.34,430.94,481.53,545.5,503.58,508.48,470.31,453.13,554.9,472.54,486.49,424.12,423.42,519.46,554.67,502.56,548.29,533.18,433.56,422.74,554.88,436.51,501.4,447.54,487.23,485.46,515.9,541.35,564.49,446.88,479.06,468.25,420.9,450.22,493.9,540.63,454.02,506.47,549.1,435.47,424.47,553.77,416.71,449.89,539.93,456.29,442.44,536.8,518.61,431.96,487.98,551.07,476.94,449.46,514.46,438.46,539.89,465.31,474.29,501.07,456.54,544.15,443.98,548.27,460.65,519.22,523.14,487.94,524,483.03,484.74,421.45,534.02,423.91,473.09,465.71,461.78,445.46,497.68,547.59,490.36,470.25,558.82,439.15,487.94,518.65,548.76,553.57,431.22,489.49,445.1,438.51,545.35,467.7,429.43,448.21,470.45,507.41,504.72,553.59,460.72,472.18,456.24,432.88,560.41,447.09,501.14,515.82,533.12,472.25,507.76,489.17,446.75,452.16,491.83,430.66,433.61,439.07,552.24,565.3,569.14,430.17,523.86,473.05,441.82,459.2,452.9,524.64,489.52,466.95,464.99,574.58,446.46,517.55,454.84,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1[m
[1mdiff --git a/env/Env.py b/env/Env.py[m
[1mindex 33e22ae..bf8911a 100644[m
[1m--- a/env/Env.py[m
[1m+++ b/env/Env.py[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mfrom collections import namedtuple[m
[32m+[m
 import numpy as np[m
 [m
 [m
[36m@@ -22,16 +24,12 @@[m [mclass BaseEnv(object):[m
         self.max_velocity = max_velocity[m
 [m
     def reset(self):[m
[31m-        """[m
[31m-        重置环境[m
[31m-        :return:[m
[31m-        """[m
         pass[m
 [m
     def step(self):[m
         pass[m
 [m
[31m-    def sample(self):[m
[32m+[m[32m    def sample(self, n_sample=1):[m
         pass[m
 [m
 [m
[1mdiff --git a/env/Solution.py b/env/Solution.py[m
[1mindex 9ae9ee1..c0287da 100644[m
[1m--- a/env/Solution.py[m
[1m+++ b/env/Solution.py[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mimport math[m
[32m+[m
 import numpy as np[m
 [m
 [m
[36m@@ -24,7 +26,7 @@[m [mclass Solution:[m
 [m
     # md parameter[m
     __md_transmit_power = 1[m
[31m-    __md_frequency = 50[m
[32m+[m[32m    __md_frequency = 100[m
     __md_storage = 1[m
     __md_number = 4[m
     __md_tasks = None[m
[36m@@ -43,13 +45,6 @@[m [mclass Solution:[m
     __TK = 10[m
     __UAV_CA = 0.00375[m
 [m
[31m-    def __init__(self, name='solution') -> None:[m
[31m-        super().__init__()[m
[31m-        self.__name = name[m
[31m-[m
[31m-    def solve(self):[m
[31m-        pass[m
[31m-[m
     def __init__(self, md_positions, tasks, slot_number, slot_length) -> None:[m
         super().__init__()[m
         self.__md_position = md_positions[m
[36m@@ -59,12 +54,16 @@[m [mclass Solution:[m
         self.__latency = slot_length[m
         self.__md_tasks = tasks[m
 [m
[32m+[m[32m    def solve(self):[m
[32m+[m[32m        pass[m
[32m+[m
     def uavFlyEnergy(self, velocity):[m
         '''[m
         uavFlyEnergy: 计算UAV的飞行能耗[m
 [m
             @velocity: UAV的速度向量[m
         '''[m
[32m+[m[32m        pass[m
 [m
     def Db2Dec(self, dB):[m
         '''[m
[36m@@ -80,16 +79,20 @@[m [mclass Solution:[m
             @positions 维度为2*K[m
         '''[m
 [m
[31m-        slot_numb = trajectory.shape[1][m
[32m+[m[32m        slot_numb = self.__slot[m
         md_num = self.__md_number[m
 [m
         dis = np.zeros([md_num, slot_numb])[m
 [m
[31m-        for i in range(0, slot_numb):[m
[31m-            temp = np.repeat(trajectory[:, i], md_num)[m
[31m-            temp = np.power(temp.reshape(2, md_num) - self.__md_position, 2)[m
[31m-            temp = temp[1, :] + temp[0, :] + self.__height ** 2[m
[31m-            dis[:, i] = np.sqrt(temp)[m
[32m+[m[32m        if slot_numb > 1:[m
[32m+[m[32m            for i in range(0, slot_numb):[m
[32m+[m[32m                temp = np.repeat(trajectory[:, i], md_num)[m
[32m+[m[32m                temp = np.power(temp.reshape(2, md_num) - self.__md_position, 2)[m
[32m+[m[32m                temp = temp[1, :] + temp[0, :] + self.__height ** 2[m
[32m+[m[32m                dis[:, i] = np.sqrt(temp)[m
[32m+[m[32m        else:[m
[32m+[m[32m            temp = np.repeat(trajectory, md_num).reshape(2, 10)[m
[32m+[m
         return dis[m
 [m
     def DataRate(self, trajectory, band_portion):[m
[36m@@ -228,3 +231,60 @@[m [mclass Solution:[m
         off = self.offloadingLatency(trajectory, bandwidth, task_type, task_portion, allocated_frequency)[m
 [m
         return np.maximum(loc, off)[m
[32m+[m
[32m+[m[32m    def slotDistance(self, uav_position):[m
[32m+[m[32m        """[m
[32m+[m
[32m+[m[32m        """[m
[32m+[m[32m        distanze = np.zeros(shape=(self.__md_number))[m
[32m+[m[32m        md_position = self.__md_position[m
[32m+[m
[32m+[m[32m        temp = np.repeat(uav_position, self.__md_number).reshape(2, self.__md_number)[m
[32m+[m[32m        temp = self.__md_position - temp[m
[32m+[m
[32m+[m[32m        for d in range(0, self.__md_number):[m
[32m+[m[32m            x = temp[0, d][m
[32m+[m[32m            y = temp[1, d][m
[32m+[m
[32m+[m[32m            distanze[d] = math.sqrt(x ** 2 + y ** 2 + self.__height ** 2)[m
[32m+[m[32m        return distanze[m
[32m+[m
[32m+[m[32m    def slotDataRate(self, p_uav, bandwidth):[m
[32m+[m[32m        distanze = self.slotDistance(p_uav)[m
[32m+[m[32m        channel_gain = self.__transmit_power * 1000[m
[32m+[m[32m        channel_gain = channel_gain * self.Db2Dec(self.__channel_power)[m
[32m+[m[32m        channel_gain = channel_gain / distanze[m
[32m+[m
[32m+[m[32m        band = self.__bandwidth * bandwidth[m
[32m+[m[32m        denominator = (band * np.power(10, 6) * self.Db2Dec(self.__noise_pose))[m
[32m+[m
[32m+[m[32m        rate = band * np.log2(1 + channel_gain / denominator)[m
[32m+[m[32m        return rate[m
[32m+[m
[32m+[m[32m    def slotTranEnergy(self, task_size, task_portion, uav_position, bandwidth):[m
[32m+[m[32m        rate = self.slotDataRate(uav_position, bandwidth)[m
[32m+[m[32m        egy = self.__md_transmit_power * task_size * task_portion / rate[m
[32m+[m[32m        return egy.sum()[m
[32m+[m
[32m+[m[32m    def slotDeviceEnergy(self, task_size, uav_position, task_type, offloading_portion, bandwidth):[m
[32m+[m[32m        """[m
[32m+[m[32m        mdEnergy 计算当前时间片MD的能耗和[m
[32m+[m[32m        @uav_position UAV当前位置[m
[32m+[m[32m        @task_type 卸载类型[m
[32m+[m[32m        @offloading_portion 卸载比例[m
[32m+[m[32m        @bandwidth 分配的带宽[m
[32m+[m[32m        @frequency 分配的CPU[m
[32m+[m[32m        """[m
[32m+[m
[32m+[m[32m        e_cac = (1 - task_type) * (1 - offloading_portion) * task_size * self.__CA[m
[32m+[m[32m        e_cac = e_cac.sum()[m
[32m+[m
[32m+[m[32m        e_exe = self.__ETA * self.__BITS * (self.__md_frequency ** 2)[m
[32m+[m[32m        e_exe = task_type * (1 - offloading_portion) * task_size * e_exe[m
[32m+[m[32m        e_exe = e_exe.sum()[m
[32m+[m
[32m+[m[32m        e_trn = self.slotTranEnergy(task_size, offloading_portion, uav_position, bandwidth)[m
[32m+[m
[32m+[m[32m        # e_trn_matrix, e_trn = self.mdTransmitionEnergy(uav_position, bandwidth, offloading_portion)[m
[32m+[m
[32m+[m[32m        return (e_trn + e_cac + e_exe)[m
[1mdiff --git a/env/__pycache__/Env.cpython-36.pyc b/env/__pycache__/Env.cpython-36.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..f74d388[m
Binary files /dev/null and b/env/__pycache__/Env.cpython-36.pyc differ
[1mdiff --git a/env/__pycache__/Solution.cpython-36.pyc b/env/__pycache__/Solution.cpython-36.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..93d67f5[m
Binary files /dev/null and b/env/__pycache__/Solution.cpython-36.pyc differ
[1mdiff --git a/env/trajectory/SimulatedEnv.py b/env/trajectory/SimulatedEnv.py[m
[1mindex 16c547c..3eef5ed 100644[m
[1m--- a/env/trajectory/SimulatedEnv.py[m
[1m+++ b/env/trajectory/SimulatedEnv.py[m
[36m@@ -1,11 +1,15 @@[m
 import os[m
[32m+[m[32mfrom math import sqrt[m
 [m
[31m-from env.Env import BaseEnv[m
[32m+[m[32mfrom env.Env import BaseEnv, ActionSet, Velocity, Action[m
 import pandas as pd[m
 import numpy as np[m
 [m
[32m+[m[32mfrom env.Solution import Solution[m
[32m+[m
 [m
 class SimulatedEnv(BaseEnv):[m
[32m+[m
     def __init__(self,[m
                  filepath,[m
                  start_point=(0, 0),[m
[36m@@ -13,58 +17,161 @@[m [mclass SimulatedEnv(BaseEnv):[m
                  latency=0.5,[m
                  md_number=10,[m
                  slot_number=20,[m
[31m-                 max_velocity=15) -> None:[m
[32m+[m[32m                 max_velocity=15,[m
[32m+[m[32m                 reward_radius=5,[m
[32m+[m[32m                 energy_reward_coefficient=0.8,[m
[32m+[m[32m                 trajectory_reward_coefficient=0.2) -> None:[m
[32m+[m
[32m+[m[32m        self.__step = 0[m
[32m+[m[32m        self.__action_space = [][m
[32m+[m[32m        self.__reward_radius = reward_radius[m
[32m+[m[32m        self.__energy_reward_coefficient = energy_reward_coefficient,[m
[32m+[m[32m        self.__trajectory_reward_coefficient = trajectory_reward_coefficient[m
         self.data = pd.read_csv(filepath, header=None)[m
[32m+[m[32m        row = np.random.randint(0, 9)[m
         # MD Position[m
         idx_s = 0[m
         idx_e = (2 * md_number - 1)[m
[31m-        vals = self.data.loc[0, idx_s:idx_e].values[m
[32m+[m[32m        vals = self.data.loc[row, idx_s:idx_e].values[m
         md_position = np.reshape(vals, (2, md_number), order="F")[m
         super().__init__(md_position, start_point, end_point, latency, md_number, slot_number, max_velocity)[m
 [m
         # MD Tasks Matrix[m
         idx_s = idx_e + 1[m
         idx_e = idx_e + md_number * slot_number[m
[31m-        self.tasks = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[31m-        print(self.tasks)[m
[32m+[m[32m        self.tasks = np.reshape(self.data.loc[row, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        # print(self.tasks)[m
 [m
         # MD Rate Matrix[m
         idx_s = idx_e + 1[m
         idx_e = idx_e + md_number * slot_number[m
[31m-        self.rate = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[31m-        print(self.rate)[m
[32m+[m[32m        self.rate = np.reshape(self.data.loc[row, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        # print(self.rate)[m
 [m
         # UAV Trajectory Matrix[m
         idx_s = idx_e + 1[m
         idx_e = idx_e + 2 * slot_number[m
[31m-        self.trajectory = np.reshape(self.data.loc[0, idx_s:idx_e].values, (2, slot_number), order="F")[m
[31m-        print(self.trajectory)[m
[32m+[m[32m        self.trajectory = np.reshape(self.data.loc[row, idx_s:idx_e].values, (2, slot_number), order="F")[m
[32m+[m[32m        # print(self.trajectory)[m
 [m
         idx_s = idx_e + 1[m
         idx_e = idx_e + md_number * slot_number[m
[31m-        self.task_type = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[31m-        print(self.task_type)[m
[32m+[m[32m        self.task_type = np.reshape(self.data.loc[row, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        # print(self.task_type)[m
 [m
         idx_s = idx_e + 1[m
         idx_e = idx_e + md_number * slot_number[m
[31m-        self.bandwidth = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[31m-        print(self.bandwidth)[m
[32m+[m[32m        self.bandwidth = np.reshape(self.data.loc[row, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        # print(self.bandwidth)[m
 [m
         idx_s = idx_e + 1[m
         idx_e = idx_e + md_number * slot_number[m
[31m-        self.frequency = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[31m-        print(self.frequency)[m
[32m+[m[32m        self.frequency = np.reshape(self.data.loc[row, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        # print(self.frequency)[m
 [m
         idx_s = idx_e + 1[m
         idx_e = idx_e + md_number * slot_number[m
[31m-        self.offloading = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[31m-        print(self.offloading)[m
[32m+[m[32m        self.offloading = np.reshape(self.data.loc[row, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m
[32m+[m[32m        self.__solution = Solution(self.md_position, self.tasks, slot_number, latency)[m
[32m+[m
[32m+[m[32m        # print(self.offloading)[m
[32m+[m[32m        self.__generate_action_space()[m
[32m+[m
[32m+[m[32m    def __generate_action_space(self) -> ActionSet:[m
[32m+[m[32m        """[m
[32m+[m[32m        创建动作空间[m
[32m+[m[32m        """[m
[32m+[m[32m        # 单个时间片内可飞行的最大距离[m
[32m+[m[32m        # 假设飞行速度为矢量(x,y)，且在x/y轴的方向可正可负[m
[32m+[m[32m        # max_distance = self.__max_velocity * self.__latency[m
[32m+[m
[32m+[m[32m        a_space = [][m
[32m+[m
[32m+[m[32m        for x in range(-1 * self.max_velocity, self.max_velocity):[m
[32m+[m[32m            for y in range(-1 * self.max_velocity, self.max_velocity):[m
[32m+[m[32m                val = sqrt(x ** 2 + y ** 2)[m
[32m+[m[32m                if val <= self.max_velocity:[m
[32m+[m[32m                    a_space.append(Velocity(x, y, val))[m
[32m+[m
[32m+[m[32m        self.__action_space = ActionSet(a_space)[m
[32m+[m
[32m+[m[32m        return self.__action_space[m
[32m+[m
[32m+[m[32m    def get_action_space(self):[m
[32m+[m[32m        return self.__action_space[m
 [m
[32m+[m[32m    def sample(self, n_sample=1):[m
[32m+[m[32m        return self.__action_space.sample(n_sample)[m
 [m
[32m+[m[32m    def step(self, action: Action):[m
[32m+[m[32m        """[m
[32m+[m[32m        环境对Agent的回应[m
[32m+[m[32m        :param action: Agent所采取的动作[m
[32m+[m[32m        :return: (观察，奖励，是否成功等相关信息)[m
[32m+[m[32m        """[m
[32m+[m[32m        self.__step = 1[m
[32m+[m[32m        done = False[m
[32m+[m[32m        t_reward = 0[m
[32m+[m[32m        e_reward = 0[m
[32m+[m[32m        t_ce = self.__trajectory_reward_coefficient[m
[32m+[m[32m        e_ce = self.__energy_reward_coefficient[m
[32m+[m
[32m+[m[32m        sol_point = self.trajectory[:, self.__step][m
[32m+[m[32m        sol_tasks = self.tasks[:, self.__step - 1][m
[32m+[m[32m        sol_bandwidth = self.bandwidth[:, self.__step - 1][m
[32m+[m[32m        sol_frequency = self.frequency[:, self.__step - 1][m
[32m+[m[32m        sol_offloading = self.offloading[:, self.__step - 1][m
[32m+[m[32m        sol_types = self.task_type[:, self.__step - 1][m
[32m+[m
[32m+[m[32m        action_end = action.p_end  # 时间到达点[m
[32m+[m[32m        action_vel = action.velocity  # 时间片速度[m
[32m+[m
[32m+[m[32m        self.__step += 1  # 步数累加[m
[32m+[m[32m        if self.__step == self.slot_number:[m
[32m+[m[32m            # 时间片终止[m
[32m+[m[32m            if action.p_start == 0:[m
[32m+[m[32m                # UAV如果到达了终点[m
[32m+[m[32m                done = True[m
[32m+[m[32m            else:[m
[32m+[m[32m                # UAV最后一个时间没有到达终点[m
[32m+[m[32m                done = False[m
[32m+[m
[32m+[m[32m        # 根据当前的时间片和位置计算奖励值[m
[32m+[m[32m        x = action.p_start[0][m
[32m+[m[32m        y = action.p_start[1][m
[32m+[m[32m        x = x + action.velocity.x * self.latency[m
[32m+[m[32m        y = y + action.velocity.y * self.latency[m
[32m+[m[32m        observation = (x, y)[m
[32m+[m
[32m+[m[32m        # 1. 判断约束条件是否满足 TODO[m
[32m+[m
[32m+[m[32m        # 2. 计算能耗和轨迹奖励[m
[32m+[m[32m        dis = np.linalg.norm(np.array(action_end) - sol_point, ord=1)[m
[32m+[m[32m        if dis <= self.__reward_radius:[m
[32m+[m[32m            # 时间片终点在范围内[m
[32m+[m[32m            t_reward = (self.__reward_radius - dis) / self.__reward_radius[m
[32m+[m[32m        else:[m
[32m+[m[32m            t_reward = 0[m
[32m+[m
[32m+[m[32m        if 0 <= x <= 100 and 0 < y <= 100:[m
[32m+[m[32m            energy = self.__solution.slotDeviceEnergy(sol_tasks, sol_point, sol_types, sol_offloading, sol_bandwidth)[m
[32m+[m[32m            e_reward = (20 - energy) / 20[m
[32m+[m[32m        else:[m
[32m+[m[32m            e_reward = 0[m
[32m+[m
[32m+[m[32m        # 3. 返回相关信息[m
[32m+[m
[32m+[m[32m        reward = 0.2 * t_reward + 0.8 * e_reward[m
[32m+[m[32m        return (done, observation, reward)[m
 [m
 [m
 if __name__ == '__main__':[m
     work_dir = '/Users/yulu/workspace/UAV_RL/data'[m
     file_path = os.path.join(work_dir, 'data.csv')[m
     senv = SimulatedEnv(file_path)[m
[31m-    senv[m
[32m+[m
[32m+[m[32m    v = senv.sample()[m
[32m+[m[32m    ps = (0, 0)[m
[32m+[m[32m    pe = (v.x * senv.latency, v.y * senv.latency)[m
[32m+[m[32m    print(senv.step(Action(velocity=v, p_start=(0, 0), p_end=pe)))[m
[1mdiff --git a/env/trajectory/UavTrajectoryEnv.py b/env/trajectory/UavTrajectoryEnv.py[m
[1mindex 540084b..db052cf 100644[m
[1m--- a/env/trajectory/UavTrajectoryEnv.py[m
[1m+++ b/env/trajectory/UavTrajectoryEnv.py[m
[36m@@ -36,7 +36,6 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
         """[m
 [m
         super().__init__(md_position, start_point, end_point, latency, md_number, slot_number, max_velocity)[m
[31m-        self.__max_velocity = max_velocity[m
         self.__reward_radius = reward_radius[m
         self.__energy_reward_coefficient = energy_reward_coefficient,[m
         self.__trajectory_reward_coefficient = trajectory_reward_coefficient[m
[36m@@ -51,10 +50,10 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
 [m
         action_space = [][m
 [m
[31m-        for x in range(-1 * self.__max_velocity, self.__max_velocity):[m
[31m-            for y in range(-1 * self.__max_velocity, self.__max_velocity):[m
[32m+[m[32m        for x in range(-1 * self.max_velocity, self.max_velocity):[m
[32m+[m[32m            for y in range(-1 * self.max_velocity, self.max_velocity):[m
                 val = sqrt(x ** 2 + y ** 2)[m
[31m-                if val <= self.__max_velocity:[m
[32m+[m[32m                if val <= self.max_velocity:[m
                     action_space.append(Velocity(x, y, val))[m
 [m
         self.__action_space = ActionSet(action_space)[m
[36m@@ -68,7 +67,7 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
             2. 使用CVX计算UAV飞行轨迹[m
         :return:[m
         """[m
[31m-        self.__tasks = np.random.randint(100, 200, size=(self.__md_number, self.__slot_number)) / 1024[m
[32m+[m[32m        self.tasks = np.random.randint(100, 200, size=(self.md_number, self.slot_number)) / 1024[m
 [m
         # 使用CVX计算UAV的轨迹等数据[m
 [m
[36m@@ -86,7 +85,7 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
         e_reward = 0[m
 [m
         self.__step += 1  # 步数累加[m
[31m-        if self.__step == self.__slot_number:[m
[32m+[m[32m        if self.__step == self.slot_number:[m
             # 时间片终止[m
             if action.p_start == 0:[m
                 # UAV如果到达了终点[m

[33mcommit 13d3b19efa694b1cac33d427ed107c6eceac152e[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sat Aug 8 16:58:30 2020 +0800

    DRL 环境变量

[1mdiff --git a/data/data.csv b/data/data.csv[m
[1mnew file mode 100644[m
[1mindex 0000000..f357f85[m
[1m--- /dev/null[m
[1m+++ b/data/data.csv[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m55,72,60,55,42,65,44,90,97,38,79,53,57,93,7,8,2,84,78,87,0.192,0.16,0.158,0.184,0.184,0.118,0.142,0.182,0.174,0.185,0.113,0.144,0.171,0.173,0.107,0.171,0.163,0.135,0.13,0.102,0.139,0.131,0.143,0.171,0.114,0.148,0.18,0.125,0.187,0.194,0.111,0.111,0.165,0.152,0.191,0.18,0.15,0.106,0.109,0.145,0.13,0.195,0.167,0.127,0.136,0.108,0.125,0.132,0.164,0.117,0.168,0.111,0.19,0.163,0.158,0.118,0.174,0.123,0.18,0.178,0.194,0.179,0.136,0.151,0.163,0.127,0.18,0.133,0.113,0.106,0.166,0.126,0.186,0.178,0.111,0.156,0.197,0.183,0.188,0.126,0.173,0.134,0.183,0.11,0.169,0.165,0.126,0.163,0.191,0.162,0.118,0.13,0.135,0.131,0.169,0.195,0.15,0.179,0.195,0.137,0.104,0.176,0.174,0.13,0.127,0.171,0.115,0.185,0.186,0.157,0.122,0.195,0.123,0.131,0.144,0.152,0.146,0.1,0.187,0.102,0.189,0.183,0.194,0.131,0.118,0.105,0.169,0.115,0.116,0.123,0.128,0.121,0.161,0.151,0.165,0.164,0.186,0.103,0.156,0.138,0.179,0.123,0.161,0.127,0.123,0.133,0.106,0.175,0.189,0.101,0.165,0.156,0.191,0.169,0.142,0.158,0.112,0.116,0.122,0.148,0.126,0.11,0.152,0.17,0.109,0.173,0.102,0.17,0.196,0.146,0.106,0.128,0.114,0.15,0.118,0.2,0.142,0.139,0.106,0.16,0.112,0.126,0.13,0.109,0.183,0.111,0.148,0.129,0.123,0.122,0.167,0.18,0.141,0.132,0.173,0.127,0.187,0.129,0.105,0.147,2.8514,2.3696,2.8791,2.6064,2.4777,2.9351,2.4033,3.5347,2.7068,2.3862,2.7073,2.7287,3.0502,2.4709,2.58,2.6789,2.7221,3.6921,3.0451,2.3649,3.0727,3.1548,2.9998,2.6443,2.7909,3.1725,2.819,2.8166,2.429,2.5299,3.0699,3.1905,3.2488,2.7874,2.8678,3.0904,2.6469,2.9932,2.7076,2.7302,2.7509,3.1774,2.7748,3.0164,2.9447,3.2353,2.9459,3.363,2.9032,2.8847,3.004,3.4822,3.1644,2.8787,3.2081,3.2896,2.9034,2.8257,2.9716,2.8895,3.3498,3.2199,3.1783,3.1478,3.096,3.0259,2.7654,3.5857,2.9226,3.0276,3.0086,2.8189,3.5705,3.0202,2.9645,3.6631,2.9585,3.4254,3.3243,2.956,3.0605,3.7316,3.5956,3.1302,2.9394,2.7144,3.0262,3.6251,3.0024,3.2833,2.7762,3.5799,3.7639,3.5876,3.1599,2.7052,3.4784,3.3794,2.5541,3.2879,3.4347,3.1352,3.2927,3.1788,3.423,3.3999,3.1753,3.1637,2.9748,3.3967,3.7735,3.8527,3.211,3.4055,3.0394,2.7647,3.1487,2.8486,2.925,3.3334,3.6125,3.3961,3.5167,2.6547,3.3668,3.4129,3.1335,2.9333,2.6534,3.395,3.3555,3.6876,3.0936,3.0696,3.173,3.2346,2.4949,3.2927,2.8521,3.2387,2.8972,3.6459,2.9473,3.1076,3.4898,3.5867,3.028,2.8,2.7371,2.8484,3.2625,3.0893,2.9373,3.0681,3.6325,2.6951,2.8256,2.9979,2.7583,3.0019,2.5438,3.2208,3.0402,3.03,3.1095,3.6824,2.8025,2.9171,2.4436,2.9335,2.7684,3.069,3.1052,2.6102,3.3669,3.2469,2.6349,2.9565,2.5732,2.6811,3.0429,2.9078,2.8218,2.8207,3.2286,2.7839,2.4502,2.7978,2.464,2.8013,2.6399,2.7045,2.884,2.3981,3.1556,2.7418,2.751,2.8418,2.5168,2.5774,0,0,4.7414,5.8111,9.4455,11.652,14.119,17.519,19.176,23.057,24.582,28.255,29.996,33.446,35.44,38.604,42.128,42,49.478,43.492,55.671,47.723,62.602,44.858,69.534,41.994,72.693,35.192,76.068,28.494,79.741,21.955,83.976,15.764,88.99,10.187,94.502,5.1013,100,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,0,0,0,0,1,1,1,0,1,1,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0,0,0,0,1,1,1,1,0,1,0,0,1,0,0,0,1,1,1,1,1,0,0,1,0,0,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,1,1,0,1,0,0,0,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,1,1,0,1,1,0,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,1,1,1.9874e-09,2.1018e-09,2.1501e-09,1.9893e-09,1.9008e-09,2.0154e-09,1.9273e-09,2.5124e-09,2.0317e-09,1.8875e-09,2.0636e-09,2.0637e-09,2.0914e-09,2.0028e-09,1.9676e-09,1.969e-09,1.9423e-09,2.4833e-09,2.0981e-09,1.8349e-09,2.077e-09,2.1499e-09,2.174e-09,2.0151e-09,1.9156e-09,2.0365e-09,1.8973e-09,2.3714e-09,2.0407e-09,1.8498e-09,2.1016e-09,2.0961e-09,2.1232e-09,2.0349e-09,1.9875e-09,1.9976e-09,1.9115e-09,2.3235e-09,2.0406e-09,1.9229e-09,2.1086e-09,2.165e-09,2.2081e-09,1.9792e-09,1.927e-09,2.0097e-09,1.9769e-09,2.267e-09,2.0333e-09,1.8767e-09,2.1221e-09,2.1156e-09,2.1364e-09,2.0621e-09,1.9324e-09,2.0206e-09,1.9372e-09,2.2673e-09,2.0182e-09,1.9516e-09,2.0649e-09,2.114e-09,2.1913e-09,1.9892e-09,1.9918e-09,2.0237e-09,1.9977e-09,2.1988e-09,2.0503e-09,1.9554e-09,2.0879e-09,2.1318e-09,2.1414e-09,2.0114e-09,2.0048e-09,2.0484e-09,2.0372e-09,2.1324e-09,1.9849e-09,2.002e-09,2.17e-09,2.1993e-09,2.1364e-09,2.0157e-09,1.9732e-09,2.0689e-09,1.9851e-09,2.0701e-09,2.0124e-09,1.9576e-09,2.1554e-09,2.2092e-09,2.1828e-09,2.0721e-09,2.0009e-09,2.1433e-09,1.9877e-09,1.9554e-09,1.9109e-09,1.9761e-09,2.116e-09,2.1559e-09,2.1239e-09,2.0961e-09,2.032e-09,2.1175e-09,2.016e-09,1.9714e-09,1.947e-09,2.0171e-09,2.0764e-09,2.2032e-09,2.1448e-09,2.04e-09,2.1146e-09,2.1715e-09,1.9739e-09,1.9332e-09,1.8902e-09,2.0542e-09,2.1045e-09,2.1672e-09,2.0923e-09,2.0463e-09,2.2029e-09,2.1713e-09,1.9989e-09,1.8796e-09,1.8827e-09,2.0392e-09,2.1431e-09,2.2304e-09,2.1374e-09,1.953e-09,2.1556e-09,2.1736e-09,1.9658e-09,1.9571e-09,1.7964e-09,2.0688e-09,2.1283e-09,2.1594e-09,2.1303e-09,1.9329e-09,2.2628e-09,2.1853e-09,2.0127e-09,1.9155e-09,1.8404e-09,2.0041e-09,2.1284e-09,2.2351e-09,2.1096e-09,1.9239e-09,2.2328e-09,2.2018e-09,1.9387e-09,2.0061e-09,1.7789e-09,2.0024e-09,2.1284e-09,2.2279e-09,2.0478e-09,1.9164e-09,2.2696e-09,2.2149e-09,1.9973e-09,1.9627e-09,1.7759e-09,2.0021e-09,2.0528e-09,2.1673e-09,2.109e-09,1.984e-09,2.3032e-09,2.2255e-09,1.9301e-09,1.9751e-09,1.7755e-09,2.0051e-09,2.0963e-09,2.1444e-09,2.0783e-09,1.9427e-09,2.3716e-09,2.2118e-09,1.9096e-09,1.9621e-09,1.7567e-09,2.0463e-09,2.0717e-09,2.1965e-09,2.0003e-09,1.8796e-09,2.3907e-09,2.2575e-09,1.9488e-09,2.0276e-09,1.7516e-09,1.983e-09,2.579e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.509e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.6409e-05,2.8731e-05,2.8731e-05,2.0808e-05,2.1075e-05,2.8731e-05,2.8731e-05,2.0739e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.1066e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.757e-05,2.8731e-05,1.7257e-05,1.7587e-05,1.7467e-05,1.7697e-05,2.8731e-05,1.5026e-05,1.4964e-05,2.8731e-05,2.8731e-05,1.5141e-05,1.5016e-05,1.5015e-05,1.5128e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.4891e-05,1.5157e-05,1.5162e-05,2.8731e-05,1.4961e-05,1.4977e-05,1.5134e-05,2.8731e-05,1.5041e-05,1.5129e-05,2.8731e-05,1.4843e-05,1.5135e-05,1.5133e-05,2.8731e-05,1.5019e-05,2.8731e-05,2.1529e-05,2.0731e-05,2.8731e-05,2.053e-05,2.8731e-05,2.0515e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.5099e-05,1.5053e-05,1.5073e-05,1.5073e-05,2.8731e-05,1.4924e-05,2.8731e-05,2.8731e-05,1.5082e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.5104e-05,1.5104e-05,1.4889e-05,1.5096e-05,1.5027e-05,2.8731e-05,2.8731e-05,1.5062e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.7456e-05,2.8731e-05,1.7523e-05,1.7462e-05,1.7524e-05,1.764e-05,1.3226e-05,1.3152e-05,1.3196e-05,2.8731e-05,1.311e-05,1.3148e-05,1.308e-05,2.8731e-05,2.8731e-05,1.3237e-05,3.0889e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,3.2254e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.318e-05,1.3058e-05,1.3242e-05,2.8731e-05,2.8731e-05,1.3123e-05,1.3099e-05,1.3231e-05,2.8731e-05,1.321e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.7391e-05,1.7826e-05,1.7302e-05,1.75e-05,2.8731e-05,1.7501e-05,2.8731e-05,2.8731e-05,1.7432e-05,2.8731e-05,1.7286e-05,2.8731e-05,1.7382e-05,2.8731e-05,1.7709e-05,2.8731e-05,1.7739e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.5153e-05,1.5154e-05,1.4915e-05,1.4883e-05,2.8731e-05,1.5167e-05,1.4992e-05,2.8731e-05,2.8731e-05,1.322e-05,1.319e-05,1.3189e-05,1.3202e-05,2.8731e-05,1.3197e-05,1.3049e-05,1.3107e-05,1.1699e-05,1.1658e-05,2.8731e-05,2.8731e-05,1.1705e-05,1.1734e-05,1.1628e-05,1.1664e-05,1.1682e-05,1.1719e-05,2.8731e-05,1.7766e-05,2.8731e-05,2.8731e-05,2.8731e-05,1.7515e-05,1.7288e-05,1.7573e-05,1.7388e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.103e-05,2.0716e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.8731e-05,2.0939e-05,2.1058e-05,1,0.83333,0.87374,0.86034,1,0.86188,0.8538,0.86911,1,0.86631,0.85294,1,1,0.86413,0.86188,1,0.86413,0.87179,0.86702,1,0.83766,0.86486,0.85465,0.8538,1,0.84472,1,1,1,1,0.85632,1,1,0.86486,0.86979,1,1,1,1,0.86188,0.83974,0.84177,0.87374,1,1,1,0.83871,1,1,1,0.84472,1,1,0.87437,1,1,1,0.85207,1,0.86111,1,1,0.84663,1,0.85465,1,0.84375,0.86631,0.85294,0.84663,1,1,1,1,0.8366,1,0.86772,0.84663,1,0.87437,0.86702,0.84472,1,1,1,1,1,0.84472,0.85465,1,0.83871,0.86034,0.84756,0.85714,1,0.84756,1,1,1,1,1,1,1,0.86842,1,1,1,0.8538,0.8366,1,1,0.8731,0.86486,0.86264,0.86702,0.85955,1,0.87374,0.87113,0.85294,1,1,1,0.84375,0.875,1,1,1,0.85714,1,0.8494,0.86772,0.86111,1,1,1,1,0.85876,1,0.83974,0.84568,1,0.86979,1,0.86979,1,0.86842,1,0.86034,1,0.85632,0.86559,0.8366,1,1,1,1,0.85714,1,1,0.86702,0.84756,1,1,1,1,0.86772,1,1,1,1,1,0.86339,0.875,1,1,1,1,1,1,0.86339,1,0.85632,0.8366,0.8503,1,1,1,1,0.85294,0.84076,0.86111,1,1,0.86559,0.84076,0.82993,0.86842,1,1[m
[1mdiff --git a/env/Env.py b/env/Env.py[m
[1mindex 9623d4a..33e22ae 100644[m
[1m--- a/env/Env.py[m
[1m+++ b/env/Env.py[m
[36m@@ -1,4 +1,26 @@[m
[32m+[m[32mimport numpy as np[m
[32m+[m
[32m+[m
 class BaseEnv(object):[m
[32m+[m[32m    def __init__(self,[m
[32m+[m[32m                 md_position,[m
[32m+[m[32m                 start_point=(0, 0),[m
[32m+[m[32m                 end_point=(100, 0),[m
[32m+[m[32m                 latency=0.5,[m
[32m+[m[32m                 md_number=4,[m
[32m+[m[32m                 slot_number=20,[m
[32m+[m[32m                 max_velocity=15, ) -> None:[m
[32m+[m[32m        super().__init__()[m
[32m+[m[32m        self.md_position = md_position[m
[32m+[m[32m        self.tasks = np.random.randint(100, 200, size=(md_number, slot_number)) / 1024[m
[32m+[m[32m        self.latency = latency[m
[32m+[m[32m        self.md_number = md_number[m
[32m+[m[32m        self.slot_number = slot_number[m
[32m+[m[32m        self.start_point = start_point[m
[32m+[m[32m        self.end_point = end_point[m
[32m+[m
[32m+[m[32m        self.max_velocity = max_velocity[m
[32m+[m
     def reset(self):[m
         """[m
         重置环境[m
[36m@@ -11,3 +33,35 @@[m [mclass BaseEnv(object):[m
 [m
     def sample(self):[m
         pass[m
[32m+[m
[32m+[m
[32m+[m[32mVelocity = namedtuple("velocity", ['x', 'y', 'val'])[m
[32m+[m[32mAction = namedtuple('action', ['p_start', 'p_end', 'velocity'])[m
[32m+[m
[32m+[m
[32m+[m[32mclass ActionSet:[m
[32m+[m
[32m+[m[32m    def __init__(self, set) -> None:[m
[32m+[m[32m        super().__init__()[m
[32m+[m[32m        self.__action_set = set[m
[32m+[m
[32m+[m[32m    def sample(self, n_sample=1):[m
[32m+[m[32m        """[m
[32m+[m[32m            sample 对动作空间进行随机抽样[m
[32m+[m
[32m+[m[32m            @n_sample 抽样的数量,默认为1个[m
[32m+[m[32m        """[m
[32m+[m[32m        import random[m
[32m+[m[32m        if n_sample == 1:[m
[32m+[m[32m            idx = random.randint(0, len(self.__action_set))[m
[32m+[m[32m            return self.__action_set[idx][m
[32m+[m[32m        else:[m
[32m+[m[32m            sample = [][m
[32m+[m[32m            for i in range(n_sample):[m
[32m+[m[32m                idx = random.randint(0, len(self.__action_set))[m
[32m+[m[32m                sample.append(self.__action_set[idx])[m
[32m+[m
[32m+[m[32m            return sample[m
[32m+[m
[32m+[m[32m    def action_space(self):[m
[32m+[m[32m        return self.__action_set[m
[1mdiff --git a/env/Solution.py b/env/Solution.py[m
[1mindex 268649a..9ae9ee1 100644[m
[1m--- a/env/Solution.py[m
[1m+++ b/env/Solution.py[m
[36m@@ -1,4 +1,47 @@[m
[32m+[m[32mimport numpy as np[m
[32m+[m
[32m+[m
 class Solution:[m
[32m+[m[32m    __bandwidth = 10[m
[32m+[m[32m    __storage = 50[m
[32m+[m[32m    __energy_budget = 10 ^ 6[m
[32m+[m[32m    __frequency = 5 * 10 ^ 3[m
[32m+[m[32m    __channel_power = -50[m
[32m+[m[32m    __noise_pose = -130[m
[32m+[m[32m    __transmit_power = 1[m
[32m+[m
[32m+[m[32m    # uav fly parameters[m
[32m+[m[32m    __blade_power = 158.76[m
[32m+[m[32m    __induced_power = 88.63[m
[32m+[m[32m    __qtips = 120[m
[32m+[m[32m    __rho = 1.225[m
[32m+[m[32m    __rotor_disc_aera = 1[m
[32m+[m[32m    __hover_induced_velocity = 4.03[m
[32m+[m[32m    __fuselage_drag_ratio = 0.3[m
[32m+[m[32m    __fuselage_rotor_solidity = 0.05[m
[32m+[m[32m    __max_velocity = 15[m
[32m+[m[32m    __height = 100[m
[32m+[m
[32m+[m[32m    # md parameter[m
[32m+[m[32m    __md_transmit_power = 1[m
[32m+[m[32m    __md_frequency = 50[m
[32m+[m[32m    __md_storage = 1[m
[32m+[m[32m    __md_number = 4[m
[32m+[m[32m    __md_tasks = None[m
[32m+[m[32m    __md_position = None[m
[32m+[m[32m    __md_cache = 0.001[m
[32m+[m
[32m+[m[32m    __width = 100[m
[32m+[m[32m    __latency = 0.5[m
[32m+[m[32m    __slot = 20[m
[32m+[m[32m    __Q0 = [0, 0][m
[32m+[m[32m    __QF = [0, 0][m
[32m+[m
[32m+[m[32m    __ETA = 10 ** -6[m
[32m+[m[32m    __BITS = 10 ** 3[m
[32m+[m[32m    __CA = 0.015[m
[32m+[m[32m    __TK = 10[m
[32m+[m[32m    __UAV_CA = 0.00375[m
 [m
     def __init__(self, name='solution') -> None:[m
         super().__init__()[m
[36m@@ -6,3 +49,182 @@[m [mclass Solution:[m
 [m
     def solve(self):[m
         pass[m
[32m+[m
[32m+[m[32m    def __init__(self, md_positions, tasks, slot_number, slot_length) -> None:[m
[32m+[m[32m        super().__init__()[m
[32m+[m[32m        self.__md_position = md_positions[m
[32m+[m[32m        self.__md_number = tasks.shape[0][m
[32m+[m
[32m+[m[32m        self.__slot = slot_number[m
[32m+[m[32m        self.__latency = slot_length[m
[32m+[m[32m        self.__md_tasks = tasks[m
[32m+[m
[32m+[m[32m    def uavFlyEnergy(self, velocity):[m
[32m+[m[32m        '''[m
[32m+[m[32m        uavFlyEnergy: 计算UAV的飞行能耗[m
[32m+[m
[32m+[m[32m            @velocity: UAV的速度向量[m
[32m+[m[32m        '''[m
[32m+[m
[32m+[m[32m    def Db2Dec(self, dB):[m
[32m+[m[32m        '''[m
[32m+[m[32m            dB 为矩阵[m
[32m+[m[32m        '''[m
[32m+[m[32m        dec = np.power(10, (dB / 10))[m
[32m+[m[32m        return dec[m
[32m+[m
[32m+[m[32m    def Distance(self, trajectory):[m
[32m+[m[32m        '''[m
[32m+[m[32m            Distance 计算UAV到各个MD之间的距离[m
[32m+[m
[32m+[m[32m            @positions 维度为2*K[m
[32m+[m[32m        '''[m
[32m+[m
[32m+[m[32m        slot_numb = trajectory.shape[1][m
[32m+[m[32m        md_num = self.__md_number[m
[32m+[m
[32m+[m[32m        dis = np.zeros([md_num, slot_numb])[m
[32m+[m
[32m+[m[32m        for i in range(0, slot_numb):[m
[32m+[m[32m            temp = np.repeat(trajectory[:, i], md_num)[m
[32m+[m[32m            temp = np.power(temp.reshape(2, md_num) - self.__md_position, 2)[m
[32m+[m[32m            temp = temp[1, :] + temp[0, :] + self.__height ** 2[m
[32m+[m[32m            dis[:, i] = np.sqrt(temp)[m
[32m+[m[32m        return dis[m
[32m+[m
[32m+[m[32m    def DataRate(self, trajectory, band_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            DataRate 根据给定的带宽和轨迹计算MD设备的实际通讯速率[m
[32m+[m[32m            @trajectory UAV轨迹矩阵[m
[32m+[m[32m            @band_portion UAV分配给各个用户的带宽占比[m
[32m+[m[32m        """[m
[32m+[m[32m        distanze = self.Distance(trajectory)[m
[32m+[m[32m        channel_gain = self.__transmit_power * 1000[m
[32m+[m[32m        channel_gain = channel_gain * self.Db2Dec(self.__channel_power)[m
[32m+[m[32m        channel_gain = channel_gain / distanze[m
[32m+[m
[32m+[m[32m        band = self.__bandwidth * band_portion[m
[32m+[m[32m        denominator = (band * np.power(10, 6) * self.Db2Dec(self.__noise_pose))[m
[32m+[m
[32m+[m[32m        rate = band * np.log2(1 + channel_gain / denominator)[m
[32m+[m[32m        return rate[m
[32m+[m
[32m+[m[32m    def mdCacheEnergy(self, bits):[m
[32m+[m[32m        """[m
[32m+[m[32m            根据比特述计算存储能耗[m
[32m+[m[32m        """[m
[32m+[m[32m        return bits * self.__md_cache[m
[32m+[m
[32m+[m[32m    def mdCacheEnergy(self, task_type, task_offloading_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            根据卸载的比特述计算存储能耗[m
[32m+[m[32m        """[m
[32m+[m[32m        egy = self.__md_cache * self.__md_tasks[m
[32m+[m[32m        return (egy, egy.sum())[m
[32m+[m
[32m+[m[32m    def mdLocalComputingEnergy(self, task_type, task_offloading_portion):[m
[32m+[m[32m        egy = task_type * self.__md_tasks * self.__ETA * (1 - task_offloading_portion) * self.__BITS * ([m
[32m+[m[32m                self.__md_frequency ** 2)[m
[32m+[m[32m        return (egy, egy.sum())[m
[32m+[m
[32m+[m[32m    def mdTransmitionEnergy(self, trajectory, bandwidth, task_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            mdTransmitionEnergy 计算所有用户的传输能耗[m
[32m+[m
[32m+[m[32m            @trajectory UAV轨迹[m
[32m+[m[32m            @bandwidth UAV分配带宽矩阵[m
[32m+[m[32m            @task_portion 用户卸载比例矩阵[m
[32m+[m[32m        """[m
[32m+[m[32m        rate = self.DataRate(trajectory, bandwidth)[m
[32m+[m[32m        tran_latency = self.__md_tasks * task_portion / rate[m
[32m+[m[32m        return (self.__md_transmit_power * tran_latency, (tran_latency * self.__md_transmit_power).sum())[m
[32m+[m
[32m+[m[32m    def uavCacheEnergy(self, task_type, task_offloading_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            uavCacheEnergy 计算UAV的存储能耗[m
[32m+[m
[32m+[m[32m            @task_type 任务处理类型矩阵[m
[32m+[m[32m            @task_offloading_portion 任务卸载比例矩阵[m
[32m+[m
[32m+[m[32m            @return (egy,egySum) 存储能耗矩阵，uav总存储能耗[m
[32m+[m[32m        """[m
[32m+[m
[32m+[m[32m        egy = self.__UAV_CA * (1 - task_type) * task_offloading_portion * self.__md_tasks[m
[32m+[m[32m        return (egy, egy.sum())[m
[32m+[m
[32m+[m[32m    def uavComputingEnergy(self, task_type, task_offloading_portion, allocated_frequency):[m
[32m+[m[32m        """[m
[32m+[m[32m            uavComputingEnergy 根据任务类型矩阵、任务卸载比例矩阵和分配的CPU矩阵计算UAV的计算能耗[m
[32m+[m[32m            @task_type 任务处理类型矩阵 A[m
[32m+[m[32m            @task_offloading_portion 任务卸载比例矩阵 L[m
[32m+[m[32m            @allocated_frequency CPU分配矩阵 F[m
[32m+[m
[32m+[m[32m            @return (egy, egy.sum()) 各个任务的能耗和总能耗[m
[32m+[m[32m        """[m
[32m+[m[32m        egy = task_type * self.__ETA * task_offloading_portion * self.__md_tasks * self.__BITS * ([m
[32m+[m[32m                allocated_frequency ** 2)[m
[32m+[m[32m        return (egy, egy.sum())[m
[32m+[m
[32m+[m[32m    def uavFlyEnergy(self, velocity):[m
[32m+[m[32m        """[m
[32m+[m[32m            uavFlyEnergy 根据给定的速度向量计算UAV的飞行能耗[m
[32m+[m
[32m+[m[32m            @velocity UAV轨迹飞行速度向量[m
[32m+[m[32m            @return egy UAV飞行所消耗的能耗[m
[32m+[m[32m        """[m
[32m+[m[32m        egy = self.__blade_power * (1 + 3 * np.power(velocity, 2) / (self.__qtips ** 2))[m
[32m+[m
[32m+[m[32m        temp = np.sqrt((1 + np.power(velocity, 4) / (4 * self.__hover_induced_velocity ** 4)))[m
[32m+[m[32m        egy = egy + self.__induced_power * (np.sqrt(temp, 0.5))[m
[32m+[m
[32m+[m[32m        egy = egy + 0.5 * self.__fuselage_drag_ratio * self.__fuselage_rotor_solidity * self.__rotor_disc_aera * self.__rho * np.power([m
[32m+[m[32m            velocity, 3)[m
[32m+[m[32m        egy = egy * (self.__latency * self.__slot)[m
[32m+[m
[32m+[m[32m        return egy[m
[32m+[m
[32m+[m[32m    def localLatency(self, task_type, task_offloading_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            localLatency 计算任务的本地处理时间[m
[32m+[m
[32m+[m[32m            @task_type 任务类型 A[m
[32m+[m[32m            @task_offloading_portion 任务卸载比例矩阵[m
[32m+[m
[32m+[m[32m            @return(latency) 本地处理时延矩阵[m
[32m+[m[32m        """[m
[32m+[m[32m        task_type * (1 - task_offloading_portion) * self.__md_tasks * self.__BITS[m
[32m+[m
[32m+[m[32m    def offloadingLatency(self, trajectory, bandwidth, task_type, task_portion, allocated_frequency):[m
[32m+[m[32m        """[m
[32m+[m[32m            offloadingLatency 计算卸载任务时延[m
[32m+[m
[32m+[m[32m            @trajectory uav飞行轨迹[m
[32m+[m[32m            @bandwidth uav带宽分配占比[m
[32m+[m[32m            @task_type 任务类型矩阵[m
[32m+[m[32m            @task_portion 任务卸载比例矩阵[m
[32m+[m[32m            @allocated_frequency uav分配的计算资源矩阵[m
[32m+[m
[32m+[m[32m            @return(latency) 卸载到uav上的处理时延[m
[32m+[m[32m        """[m
[32m+[m[32m        rate = self.DataRate(trajectory, bandwidth)[m
[32m+[m[32m        latency_transmition = self.__md_tasks * task_portion / rate[m
[32m+[m[32m        latency_uavExecution = task_type * task_portion * self.__md_tasks * self.__BITS / allocated_frequency[m
[32m+[m[32m        return latency_transmition + latency_uavExecution[m
[32m+[m
[32m+[m[32m    def taskLatency(self, trajectory, bandwidth, task_type, task_portion, allocated_frequency):[m
[32m+[m[32m        """[m
[32m+[m[32m            taskLatency 计算实际的处理时延[m
[32m+[m
[32m+[m[32m            @trajectory uav飞行轨迹[m
[32m+[m[32m            @bandwidth uav带宽分配占比[m
[32m+[m[32m            @task_type 任务类型矩阵[m
[32m+[m[32m            @task_portion 任务卸载比例矩阵[m
[32m+[m[32m            @allocated_frequency uav分配的计算资源矩阵[m
[32m+[m
[32m+[m[32m            @return(latency) 任务总的处理时延[m
[32m+[m[32m        """[m
[32m+[m
[32m+[m[32m        loc = self.localLatency(task_type, task_portion)[m
[32m+[m[32m        off = self.offloadingLatency(trajectory, bandwidth, task_type, task_portion, allocated_frequency)[m
[32m+[m
[32m+[m[32m        return np.maximum(loc, off)[m
[1mdiff --git a/env/cvx/ConvexSolution.py b/env/cvx/ConvexSolution.py[m
[1mdeleted file mode 100644[m
[1mindex c01bbda..0000000[m
[1m--- a/env/cvx/ConvexSolution.py[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-from env import Env[m
[31m-from env.Solution import Solution[m
[31m-import cvxpy as cp[m
[31m-[m
[31m-[m
[31m-class ConvexSolution(Solution):[m
[31m-    """[m
[31m-    使用CVX求解目标问题[m
[31m-    """[m
[31m-[m
[31m-    def __init__(self, env: Env) -> None:[m
[31m-        super().__init__('cvx_solution')[m
[31m-        self.__env = env[m
[31m-[m
[31m-    def solve(self):[m
[31m-        super().solve()[m
[1mdiff --git a/env/sol/ConvexSolution.py b/env/sol/ConvexSolution.py[m
[1mnew file mode 100644[m
[1mindex 0000000..62e3fc9[m
[1m--- /dev/null[m
[1m+++ b/env/sol/ConvexSolution.py[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32mfrom env import Env[m
[32m+[m[32mfrom env.Solution import Solution[m
[32m+[m[32mimport cvxpy as cp[m
[32m+[m
[32m+[m
[32m+[m[32mclass ConvexSolution(Solution):[m
[32m+[m[32m    """[m
[32m+[m[32m    使用CVX求解目标问题[m
[32m+[m[32m    """[m
[32m+[m
[32m+[m[32m    def __init__(self, env: Env) -> None:[m
[32m+[m[32m        super().__init__('cvx_solution')[m
[32m+[m[32m        self.__env = env[m
[32m+[m
[32m+[m[32m    def solve(self):[m
[32m+[m[32m        super().solve()[m
[32m+[m
[32m+[m[32m    def trajectory(self, type, portion, bandwidth, frequency):[m
[32m+[m[32m        """[m
[32m+[m[32m        trajectory 根据给定的其他变量求解UAV轨迹[m
[32m+[m[32m        """[m
[32m+[m[32m        return[m
[32m+[m
[32m+[m[32m    def resource(self, trajectory, type, portion):[m
[32m+[m[32m        """[m
[32m+[m[32m        求解资源分配子问题[m
[32m+[m[32m        """[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def offloading(self, trajectory, bandwidth, frequency):[m
[32m+[m[32m        """[m
[32m+[m[32m        求解卸载比例子问题[m
[32m+[m[32m        """[m
[32m+[m[32m        pass[m
[1mdiff --git a/env/sol/SimulatedSolution.py b/env/sol/SimulatedSolution.py[m
[1mnew file mode 100644[m
[1mindex 0000000..18e8cfc[m
[1m--- /dev/null[m
[1m+++ b/env/sol/SimulatedSolution.py[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom env.Env import BaseEnv[m
[32m+[m[32mfrom env.Solution import Solution[m
[32m+[m[32mimport pandas as pd[m
[32m+[m[32mimport numpy as np[m
[32m+[m
[32m+[m[32mfrom env.trajectory.SimulatedEnv import SimulatedEnv[m
[32m+[m
[32m+[m
[32m+[m[32mclass SimulatedSolution(Solution):[m
[32m+[m[32m    def __init__(self, env: SimulatedEnv, name='solution') -> None:[m
[32m+[m[32m        super().__init__(name)[m
[32m+[m[32m        self.env = env[m
[32m+[m
[32m+[m[32m    def solve(self):[m
[32m+[m[32m        return (self.env.rate,[m
[32m+[m[32m                self.env.trajectory,[m
[32m+[m[32m                self.env.task_type,[m
[32m+[m[32m                self.env.offloading,[m
[32m+[m[32m                self.env.bandwidth,[m
[32m+[m[32m                self.env.frequency)[m
[32m+[m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    work_dir = '/Users/yulu/workspace/UAV_RL/data'[m
[32m+[m[32m    file_path = os.path.join(work_dir, 'data.csv')[m
[32m+[m[32m    senv = SimulatedEnv(file_path)[m
[32m+[m
[32m+[m[32m    ssol = SimulatedSolution(senv)[m
[32m+[m[32m    ssol.solve()[m
[1mdiff --git a/env/trajectory/SimulatedEnv.py b/env/trajectory/SimulatedEnv.py[m
[1mnew file mode 100644[m
[1mindex 0000000..16c547c[m
[1m--- /dev/null[m
[1m+++ b/env/trajectory/SimulatedEnv.py[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom env.Env import BaseEnv[m
[32m+[m[32mimport pandas as pd[m
[32m+[m[32mimport numpy as np[m
[32m+[m
[32m+[m
[32m+[m[32mclass SimulatedEnv(BaseEnv):[m
[32m+[m[32m    def __init__(self,[m
[32m+[m[32m                 filepath,[m
[32m+[m[32m                 start_point=(0, 0),[m
[32m+[m[32m                 end_point=(100, 0),[m
[32m+[m[32m                 latency=0.5,[m
[32m+[m[32m                 md_number=10,[m
[32m+[m[32m                 slot_number=20,[m
[32m+[m[32m                 max_velocity=15) -> None:[m
[32m+[m[32m        self.data = pd.read_csv(filepath, header=None)[m
[32m+[m[32m        # MD Position[m
[32m+[m[32m        idx_s = 0[m
[32m+[m[32m        idx_e = (2 * md_number - 1)[m
[32m+[m[32m        vals = self.data.loc[0, idx_s:idx_e].values[m
[32m+[m[32m        md_position = np.reshape(vals, (2, md_number), order="F")[m
[32m+[m[32m        super().__init__(md_position, start_point, end_point, latency, md_number, slot_number, max_velocity)[m
[32m+[m
[32m+[m[32m        # MD Tasks Matrix[m
[32m+[m[32m        idx_s = idx_e + 1[m
[32m+[m[32m        idx_e = idx_e + md_number * slot_number[m
[32m+[m[32m        self.tasks = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        print(self.tasks)[m
[32m+[m
[32m+[m[32m        # MD Rate Matrix[m
[32m+[m[32m        idx_s = idx_e + 1[m
[32m+[m[32m        idx_e = idx_e + md_number * slot_number[m
[32m+[m[32m        self.rate = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        print(self.rate)[m
[32m+[m
[32m+[m[32m        # UAV Trajectory Matrix[m
[32m+[m[32m        idx_s = idx_e + 1[m
[32m+[m[32m        idx_e = idx_e + 2 * slot_number[m
[32m+[m[32m        self.trajectory = np.reshape(self.data.loc[0, idx_s:idx_e].values, (2, slot_number), order="F")[m
[32m+[m[32m        print(self.trajectory)[m
[32m+[m
[32m+[m[32m        idx_s = idx_e + 1[m
[32m+[m[32m        idx_e = idx_e + md_number * slot_number[m
[32m+[m[32m        self.task_type = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        print(self.task_type)[m
[32m+[m
[32m+[m[32m        idx_s = idx_e + 1[m
[32m+[m[32m        idx_e = idx_e + md_number * slot_number[m
[32m+[m[32m        self.bandwidth = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        print(self.bandwidth)[m
[32m+[m
[32m+[m[32m        idx_s = idx_e + 1[m
[32m+[m[32m        idx_e = idx_e + md_number * slot_number[m
[32m+[m[32m        self.frequency = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        print(self.frequency)[m
[32m+[m
[32m+[m[32m        idx_s = idx_e + 1[m
[32m+[m[32m        idx_e = idx_e + md_number * slot_number[m
[32m+[m[32m        self.offloading = np.reshape(self.data.loc[0, idx_s:idx_e].values, (md_number, slot_number), order="F")[m
[32m+[m[32m        print(self.offloading)[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    work_dir = '/Users/yulu/workspace/UAV_RL/data'[m
[32m+[m[32m    file_path = os.path.join(work_dir, 'data.csv')[m
[32m+[m[32m    senv = SimulatedEnv(file_path)[m
[32m+[m[32m    senv[m
[1mdiff --git a/env/trajectory/UavTrajectoryEnv.py b/env/trajectory/UavTrajectoryEnv.py[m
[1mindex 0d26958..540084b 100644[m
[1m--- a/env/trajectory/UavTrajectoryEnv.py[m
[1m+++ b/env/trajectory/UavTrajectoryEnv.py[m
[36m@@ -3,38 +3,7 @@[m [mfrom math import sqrt[m
 [m
 import numpy as np[m
 [m
[31m-from env.Env import BaseEnv[m
[31m-[m
[31m-Velocity = namedtuple("velocity", ['x', 'y', 'val'])[m
[31m-Action = namedtuple('action', ['p_start', 'p_end', 'velocity'])[m
[31m-[m
[31m-[m
[31m-class ActionSet:[m
[31m-[m
[31m-    def __init__(self, set) -> None:[m
[31m-        super().__init__()[m
[31m-        self.__action_set = set[m
[31m-[m
[31m-    def sample(self, n_sample=1):[m
[31m-        """[m
[31m-            sample 对动作空间进行随机抽样[m
[31m-[m
[31m-            @n_sample 抽样的数量,默认为1个[m
[31m-        """[m
[31m-        import random[m
[31m-        if n_sample == 1:[m
[31m-            idx = random.randint(0, len(self.__action_set))[m
[31m-            return self.__action_set[idx][m
[31m-        else:[m
[31m-            sample = [][m
[31m-            for i in range(n_sample):[m
[31m-                idx = random.randint(0, len(self.__action_set))[m
[31m-                sample.append(self.__action_set[idx])[m
[31m-[m
[31m-            return sample[m
[31m-[m
[31m-    def action_space(self):[m
[31m-        return self.__action_set[m
[32m+[m[32mfrom env.Env import BaseEnv, Velocity, ActionSet, Action[m
 [m
 [m
 class UavTrajectoryEnv(BaseEnv):[m
[36m@@ -66,16 +35,7 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
         :param trajectory_reward_coefficient: 轨迹奖励权重[m
         """[m
 [m
[31m-        super().__init__()[m
[31m-        self.__tasks = np.random.randint(100, 200, size=(md_number, slot_number)) / 1024[m
[31m-        self.__md_positions = md_position[m
[31m-        self.__latency = latency[m
[31m-        self.__md_number = md_number[m
[31m-        self.__slot_number = slot_number[m
[31m-        self.__start_point = start_point[m
[31m-        self.__end_point = end_point[m
[31m-        self.__max_velocity = 15[m
[31m-[m
[32m+[m[32m        super().__init__(md_position, start_point, end_point, latency, md_number, slot_number, max_velocity)[m
         self.__max_velocity = max_velocity[m
         self.__reward_radius = reward_radius[m
         self.__energy_reward_coefficient = energy_reward_coefficient,[m

[33mcommit 34edbd7795afe8351b0ea08680ef30621bf94a88[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sat Aug 8 11:35:29 2020 +0800

    drl环境

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex c5af3f3..9a869ad 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -4,4 +4,5 @@[m
 .idea/*[m
 .vscode[m
 venv[m
[31m-logs[m
\ No newline at end of file[m
[32m+[m[32mlogs[m
[41m+[m
[1mdiff --git a/env/Solution.py b/env/Solution.py[m
[1mindex 2f20b9e..268649a 100644[m
[1m--- a/env/Solution.py[m
[1m+++ b/env/Solution.py[m
[36m@@ -1,2 +1,8 @@[m
 class Solution:[m
[31m-    pass[m
[32m+[m
[32m+[m[32m    def __init__(self, name='solution') -> None:[m
[32m+[m[32m        super().__init__()[m
[32m+[m[32m        self.__name = name[m
[32m+[m
[32m+[m[32m    def solve(self):[m
[32m+[m[32m        pass[m
[1mdiff --git a/env/__pycache__/Env.cpython-36.pyc b/env/__pycache__/Env.cpython-36.pyc[m
[1mdeleted file mode 100644[m
[1mindex 710b11f..0000000[m
Binary files a/env/__pycache__/Env.cpython-36.pyc and /dev/null differ
[1mdiff --git a/env/cvx/ConvexSolution.py b/env/cvx/ConvexSolution.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c01bbda[m
[1m--- /dev/null[m
[1m+++ b/env/cvx/ConvexSolution.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mfrom env import Env[m
[32m+[m[32mfrom env.Solution import Solution[m
[32m+[m[32mimport cvxpy as cp[m
[32m+[m
[32m+[m
[32m+[m[32mclass ConvexSolution(Solution):[m
[32m+[m[32m    """[m
[32m+[m[32m    使用CVX求解目标问题[m
[32m+[m[32m    """[m
[32m+[m
[32m+[m[32m    def __init__(self, env: Env) -> None:[m
[32m+[m[32m        super().__init__('cvx_solution')[m
[32m+[m[32m        self.__env = env[m
[32m+[m
[32m+[m[32m    def solve(self):[m
[32m+[m[32m        super().solve()[m
[1mdiff --git a/env/trajectory/UavTrajectoryEnv.py b/env/trajectory/UavTrajectoryEnv.py[m
[1mindex d857263..0d26958 100644[m
[1m--- a/env/trajectory/UavTrajectoryEnv.py[m
[1m+++ b/env/trajectory/UavTrajectoryEnv.py[m
[36m@@ -97,9 +97,9 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
                 if val <= self.__max_velocity:[m
                     action_space.append(Velocity(x, y, val))[m
 [m
[31m-        self.__action_space = action_space[m
[32m+[m[32m        self.__action_space = ActionSet(action_space)[m
 [m
[31m-        return ActionSet(action_space)[m
[32m+[m[32m        return self.__action_space[m
 [m
     def reset(self):[m
         """[m
[36m@@ -112,8 +112,8 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
 [m
         # 使用CVX计算UAV的轨迹等数据[m
 [m
[31m-    def sample(self):[m
[31m-        pass[m
[32m+[m[32m    def sample(self, n_sample=1):[m
[32m+[m[32m        self.__action_space.sample(n_sample)[m
 [m
     def step(self, action: Action):[m
         """[m

[33mcommit 0a00fa8bd23ca15d51a0c2111d2a16f1b3e86921[m
Author: Lwt <lwtynu@gmail.com>
Date:   Sat Aug 8 10:33:21 2020 +0800

    环境

[1mdiff --git a/env/Solution.py b/env/Solution.py[m
[1mnew file mode 100644[m
[1mindex 0000000..2f20b9e[m
[1m--- /dev/null[m
[1m+++ b/env/Solution.py[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mclass Solution:[m
[32m+[m[32m    pass[m
[1mdiff --git a/env/__pycache__/Env.cpython-36.pyc b/env/__pycache__/Env.cpython-36.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..710b11f[m
Binary files /dev/null and b/env/__pycache__/Env.cpython-36.pyc differ
[1mdiff --git a/env/trajectory/TestUavTrajectoryEnv.pyi b/env/trajectory/TestUavTrajectoryEnv.pyi[m
[1mnew file mode 100644[m
[1mindex 0000000..86659bc[m
[1m--- /dev/null[m
[1m+++ b/env/trajectory/TestUavTrajectoryEnv.pyi[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mimport unittest[m
[32m+[m[32mimport numpy as np[m
[32m+[m
[32m+[m[32mfrom env.trajectory.UavTrajectoryEnv import UavTrajectoryEnv[m
[32m+[m
[32m+[m
[32m+[m[32mclass TestUavTrajectoryEnv(unittest.TestCase):[m
[32m+[m[32m    def test_env_action_space(self):[m
[32m+[m[32m        K = 4[m
[32m+[m[32m        N = 20[m
[32m+[m
[32m+[m[32m        md_positions = np.random.randint(low=0, high=100, size=(2, K))[m
[32m+[m[32m        env = UavTrajectoryEnv(md_positions)[m
[32m+[m[32m        env.generate_action_space()[m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    unittest.main()[m
[1mdiff --git a/env/UavTrajectoryEnv.py b/env/trajectory/UavTrajectoryEnv.py[m
[1msimilarity index 52%[m
[1mrename from env/UavTrajectoryEnv.py[m
[1mrename to env/trajectory/UavTrajectoryEnv.py[m
[1mindex 075aa69..d857263 100644[m
[1m--- a/env/UavTrajectoryEnv.py[m
[1m+++ b/env/trajectory/UavTrajectoryEnv.py[m
[36m@@ -1,7 +1,41 @@[m
[32m+[m[32mfrom collections import namedtuple[m
[32m+[m[32mfrom math import sqrt[m
[32m+[m
 import numpy as np[m
 [m
 from env.Env import BaseEnv[m
 [m
[32m+[m[32mVelocity = namedtuple("velocity", ['x', 'y', 'val'])[m
[32m+[m[32mAction = namedtuple('action', ['p_start', 'p_end', 'velocity'])[m
[32m+[m
[32m+[m
[32m+[m[32mclass ActionSet:[m
[32m+[m
[32m+[m[32m    def __init__(self, set) -> None:[m
[32m+[m[32m        super().__init__()[m
[32m+[m[32m        self.__action_set = set[m
[32m+[m
[32m+[m[32m    def sample(self, n_sample=1):[m
[32m+[m[32m        """[m
[32m+[m[32m            sample 对动作空间进行随机抽样[m
[32m+[m
[32m+[m[32m            @n_sample 抽样的数量,默认为1个[m
[32m+[m[32m        """[m
[32m+[m[32m        import random[m
[32m+[m[32m        if n_sample == 1:[m
[32m+[m[32m            idx = random.randint(0, len(self.__action_set))[m
[32m+[m[32m            return self.__action_set[idx][m
[32m+[m[32m        else:[m
[32m+[m[32m            sample = [][m
[32m+[m[32m            for i in range(n_sample):[m
[32m+[m[32m                idx = random.randint(0, len(self.__action_set))[m
[32m+[m[32m                sample.append(self.__action_set[idx])[m
[32m+[m
[32m+[m[32m            return sample[m
[32m+[m
[32m+[m[32m    def action_space(self):[m
[32m+[m[32m        return self.__action_set[m
[32m+[m
 [m
 class UavTrajectoryEnv(BaseEnv):[m
     __step = 0  # 操作步数记录[m
[36m@@ -47,6 +81,26 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
         self.__energy_reward_coefficient = energy_reward_coefficient,[m
         self.__trajectory_reward_coefficient = trajectory_reward_coefficient[m
 [m
[32m+[m[32m    def generate_action_space(self) -> ActionSet:[m
[32m+[m[32m        """[m
[32m+[m[32m        创建动作空间[m
[32m+[m[32m        """[m
[32m+[m[32m        # 单个时间片内可飞行的最大距离[m
[32m+[m[32m        # 假设飞行速度为矢量(x,y)，且在x/y轴的方向可正可负[m
[32m+[m[32m        # max_distance = self.__max_velocity * self.__latency[m
[32m+[m
[32m+[m[32m        action_space = [][m
[32m+[m
[32m+[m[32m        for x in range(-1 * self.__max_velocity, self.__max_velocity):[m
[32m+[m[32m            for y in range(-1 * self.__max_velocity, self.__max_velocity):[m
[32m+[m[32m                val = sqrt(x ** 2 + y ** 2)[m
[32m+[m[32m                if val <= self.__max_velocity:[m
[32m+[m[32m                    action_space.append(Velocity(x, y, val))[m
[32m+[m
[32m+[m[32m        self.__action_space = action_space[m
[32m+[m
[32m+[m[32m        return ActionSet(action_space)[m
[32m+[m
     def reset(self):[m
         """[m
         重置环境：[m
[36m@@ -61,17 +115,20 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
     def sample(self):[m
         pass[m
 [m
[31m-    def step(self, action):[m
[32m+[m[32m    def step(self, action: Action):[m
         """[m
         环境对Agent的回应[m
         :param action: Agent所采取的动作[m
         :return: (观察，奖励，是否成功等相关信息)[m
         """[m
[31m-        self.__step += 1  # 步数累加[m
[32m+[m[32m        done = False[m
[32m+[m[32m        t_reward = 0[m
[32m+[m[32m        e_reward = 0[m
 [m
[32m+[m[32m        self.__step += 1  # 步数累加[m
         if self.__step == self.__slot_number:[m
             # 时间片终止[m
[31m-            if action.position == 0:[m
[32m+[m[32m            if action.p_start == 0:[m
                 # UAV如果到达了终点[m
                 done = True[m
             else:[m
[36m@@ -80,4 +137,24 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
 [m
         # 根据当前的时间片和位置计算奖励值[m
 [m
[31m-    pass[m
[32m+[m[32m        # 1. 判断约束条件是否满足[m
[32m+[m[32m        # 2. 计算能耗和轨迹奖励[m
[32m+[m[32m        # 3. 返回相关信息[m
[32m+[m
[32m+[m[32m        observation = ()[m
[32m+[m[32m        info = ()[m
[32m+[m
[32m+[m[32m        reward = self.__trajectory_reward_coefficient * t_reward + self.__energy_reward_coefficient * e_reward[m
[32m+[m[32m        return (done, observation, reward, info)[m
[32m+[m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    K = 4[m
[32m+[m[32m    N = 20[m
[32m+[m
[32m+[m[32m    md_positions = np.random.randint(low=0, high=100, size=(2, K))[m
[32m+[m[32m    env = UavTrajectoryEnv(md_positions)[m
[32m+[m[32m    actions = env.generate_action_space()[m
[32m+[m[32m    set = ActionSet(actions)[m
[32m+[m
[32m+[m[32m    env.step(set.sample())[m

[33mcommit c153fb2535fa33699b20117a7862c33bf4be9af1[m
Author: Lwt <lwtynu@gmail.com>
Date:   Fri Aug 7 22:02:09 2020 +0800

    奖励函数

[1mdiff --git a/env/UavTrajectoryEnv.py b/env/UavTrajectoryEnv.py[m
[1mindex 7d32d90..075aa69 100644[m
[1m--- a/env/UavTrajectoryEnv.py[m
[1m+++ b/env/UavTrajectoryEnv.py[m
[36m@@ -1,8 +1,10 @@[m
 import numpy as np[m
[32m+[m
 from env.Env import BaseEnv[m
 [m
 [m
 class UavTrajectoryEnv(BaseEnv):[m
[32m+[m[32m    __step = 0  # 操作步数记录[m
 [m
     def __init__(self, md_position,[m
                  start_point=(0, 0),[m
[36m@@ -34,8 +36,8 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
         self.__tasks = np.random.randint(100, 200, size=(md_number, slot_number)) / 1024[m
         self.__md_positions = md_position[m
         self.__latency = latency[m
[31m-        self.__n_user = md_number[m
[31m-        self.__slots = slot_number[m
[32m+[m[32m        self.__md_number = md_number[m
[32m+[m[32m        self.__slot_number = slot_number[m
         self.__start_point = start_point[m
         self.__end_point = end_point[m
         self.__max_velocity = 15[m
[36m@@ -52,7 +54,9 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
             2. 使用CVX计算UAV飞行轨迹[m
         :return:[m
         """[m
[31m-        pass[m
[32m+[m[32m        self.__tasks = np.random.randint(100, 200, size=(self.__md_number, self.__slot_number)) / 1024[m
[32m+[m
[32m+[m[32m        # 使用CVX计算UAV的轨迹等数据[m
 [m
     def sample(self):[m
         pass[m
[36m@@ -63,4 +67,17 @@[m [mclass UavTrajectoryEnv(BaseEnv):[m
         :param action: Agent所采取的动作[m
         :return: (观察，奖励，是否成功等相关信息)[m
         """[m
[31m-        pass[m
[32m+[m[32m        self.__step += 1  # 步数累加[m
[32m+[m
[32m+[m[32m        if self.__step == self.__slot_number:[m
[32m+[m[32m            # 时间片终止[m
[32m+[m[32m            if action.position == 0:[m
[32m+[m[32m                # UAV如果到达了终点[m
[32m+[m[32m                done = True[m
[32m+[m[32m            else:[m
[32m+[m[32m                # UAV最后一个时间没有到达终点[m
[32m+[m[32m                done = False[m
[32m+[m
[32m+[m[32m        # 根据当前的时间片和位置计算奖励值[m
[32m+[m
[32m+[m[32m    pass[m

[33mcommit f66a47c3065e76d8b18b455abe61f7b4a537db75[m
Author: Lwt <lwtynu@gmail.com>
Date:   Fri Aug 7 21:46:55 2020 +0800

    排除本地文件

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 8061d8b..c5af3f3 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,3 +1,7 @@[m
 /logs/events.out.tfevents.1596807778.lulu.local[m
 /.idea/other.xml[m
 /.idea/workspace.xml[m
[32m+[m[32m.idea/*[m
[32m+[m[32m.vscode[m
[32m+[m[32mvenv[m
[32m+[m[32mlogs[m
\ No newline at end of file[m

[33mcommit fd7a44cbadaf0d88c01f6d0f8a47e6550e026640[m
Author: Lwt <lwtynu@gmail.com>
Date:   Fri Aug 7 21:44:24 2020 +0800

    DRL环境

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..8061d8b[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m/logs/events.out.tfevents.1596807778.lulu.local[m
[32m+[m[32m/.idea/other.xml[m
[32m+[m[32m/.idea/workspace.xml[m
[1mdiff --git a/env/Env.py b/env/Env.py[m
[1mnew file mode 100644[m
[1mindex 0000000..9623d4a[m
[1m--- /dev/null[m
[1m+++ b/env/Env.py[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mclass BaseEnv(object):[m
[32m+[m[32m    def reset(self):[m
[32m+[m[32m        """[m
[32m+[m[32m        重置环境[m
[32m+[m[32m        :return:[m
[32m+[m[32m        """[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def step(self):[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def sample(self):[m
[32m+[m[32m        pass[m
[1mdiff --git a/env/UavTrajectoryEnv.py b/env/UavTrajectoryEnv.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7d32d90[m
[1m--- /dev/null[m
[1m+++ b/env/UavTrajectoryEnv.py[m
[36m@@ -0,0 +1,66 @@[m
[32m+[m[32mimport numpy as np[m
[32m+[m[32mfrom env.Env import BaseEnv[m
[32m+[m
[32m+[m
[32m+[m[32mclass UavTrajectoryEnv(BaseEnv):[m
[32m+[m
[32m+[m[32m    def __init__(self, md_position,[m
[32m+[m[32m                 start_point=(0, 0),[m
[32m+[m[32m                 end_point=(100, 0),[m
[32m+[m[32m                 latency=0.5,[m
[32m+[m[32m                 md_number=4,[m
[32m+[m[32m                 slot_number=20,[m
[32m+[m[32m                 max_velocity=15,[m
[32m+[m[32m                 reward_radius=20,[m
[32m+[m[32m                 energy_reward_coefficient=0.8,[m
[32m+[m[32m                 trajectory_reward_coefficient=0.2) -> None:[m
[32m+[m[32m        """[m
[32m+[m[32m        创建环境，随机生成MD设备的任务矩阵(md_number,slot_number)[m
[32m+[m
[32m+[m[32m        :param md_position: MD设备的位置矩阵 (2,K)[m
[32m+[m[32m        :param start_point: UAV起点[m
[32m+[m[32m        :param end_point: UAV终点[m
[32m+[m[32m        :param latency: 时延上限[m
[32m+[m[32m        :param user_number: MD设备的数量[m
[32m+[m[32m        :param slot_number: 时间片的数量[m
[32m+[m
[32m+[m[32m        :param max_velocity: UAV最大速度[m
[32m+[m[32m        :param reward_radius: 轨迹奖励衰减半径[m
[32m+[m[32m        :param energy_reward_coefficient: 能耗奖励权重[m
[32m+[m[32m        :param trajectory_reward_coefficient: 轨迹奖励权重[m
[32m+[m[32m        """[m
[32m+[m
[32m+[m[32m        super().__init__()[m
[32m+[m[32m        self.__tasks = np.random.randint(100, 200, size=(md_number, slot_number)) / 1024[m
[32m+[m[32m        self.__md_positions = md_position[m
[32m+[m[32m        self.__latency = latency[m
[32m+[m[32m        self.__n_user = md_number[m
[32m+[m[32m        self.__slots = slot_number[m
[32m+[m[32m        self.__start_point = start_point[m
[32m+[m[32m        self.__end_point = end_point[m
[32m+[m[32m        self.__max_velocity = 15[m
[32m+[m
[32m+[m[32m        self.__max_velocity = max_velocity[m
[32m+[m[32m        self.__reward_radius = reward_radius[m
[32m+[m[32m        self.__energy_reward_coefficient = energy_reward_coefficient,[m
[32m+[m[32m        self.__trajectory_reward_coefficient = trajectory_reward_coefficient[m
[32m+[m
[32m+[m[32m    def reset(self):[m
[32m+[m[32m        """[m
[32m+[m[32m        重置环境：[m
[32m+[m[32m            1. 随机生成任务矩阵[m
[32m+[m[32m            2. 使用CVX计算UAV飞行轨迹[m
[32m+[m[32m        :return:[m
[32m+[m[32m        """[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def sample(self):[m
[32m+[m[32m        pass[m
[32m+[m
[32m+[m[32m    def step(self, action):[m
[32m+[m[32m        """[m
[32m+[m[32m        环境对Agent的回应[m
[32m+[m[32m        :param action: Agent所采取的动作[m
[32m+[m[32m        :return: (观察，奖励，是否成功等相关信息)[m
[32m+[m[32m        """[m
[32m+[m[32m        pass[m
[1mdiff --git a/requirements.txt b/requirements.txt[m
[1mindex c02f337..0d4dbe7 100644[m
[1m--- a/requirements.txt[m
[1m+++ b/requirements.txt[m
[36m@@ -1 +1,3 @@[m
[31m-tensorflow==115.6.0[m
\ No newline at end of file[m
[32m+[m[32mtensorflow==1.15.0[m
[32m+[m[32mpygame==1.9.6[m
[32m+[m[32mcvxpy==1.1.3[m
\ No newline at end of file[m
[1mdiff --git a/run_UAV_RL.py b/run_UAV_RL.py[m
[1mindex e201ac5..4e1885f 100644[m
[1m--- a/run_UAV_RL.py[m
[1m+++ b/run_UAV_RL.py[m
[36m@@ -1,15 +1,9 @@[m
[31m-import threading[m
 from RL_brain_change_layer import DeepQNetwork[m
 from change_random_system_env_set_affinity import *[m
[31m-#from model_change_reward.data_classify import *[m
[31m-import matplotlib.pyplot as plt[m
[31m-from data_classify import text_save[m
[31m-import numpy as np[m
[31m-import time[m
[31m-import random[m
[31m-import os[m
[31m-import sys[m
[32m+[m[32m# from model_change_reward.data_classify import *[m
 from game_self import show1[m
[32m+[m
[32m+[m
 def run_maze(env):[m
     step = 0[m
     ENV, x, y = get_user_location(env.creat_ENV())[m
[36m@@ -20,37 +14,37 @@[m [mdef run_maze(env):[m
         ENV = ENV[m
         x = x[m
         y = y[m
[31m-        #print(ENV,x,y)[m
[32m+[m[32m        # print(ENV,x,y)[m
         observation = [[0, 100]][m
[31m-        observation1=[0,100][m
[32m+[m[32m        observation1 = [0, 100][m
 [m
         all_reward = [][m
[31m-        count =0[m
[32m+[m[32m        count = 0[m
         while True:  #[m
             action = RL.choose_action(step, observation)  # 强化学习，动作选择[m
             print("action", action)[m
[31m-            #根据选择的动作映射出 x，y的飞行方向和速度[m
[32m+[m[32m            # 根据选择的动作映射出 x，y的飞行方向和速度[m
             x_speed, y_speed = env.get_action(action)[m
[31m-            observation_ = step_all(observation1,x_speed,y_speed)[m
[32m+[m[32m            observation_ = step_all(observation1, x_speed, y_speed)[m
             observation1 = observation_[m
[31m-            show1(observation_,x_speed,y_speed)[m
[31m-            print("ob  x_speed y_speed ob_",observation,x_speed,y_speed,observation_)[m
[32m+[m[32m            show1(observation_, x_speed, y_speed)[m
[32m+[m[32m            print("ob  x_speed y_speed ob_", observation, x_speed, y_speed, observation_)[m
             reward = compute_reward(observation_, x, y)[m
             all_reward.append(reward)[m
 [m
[31m-            print("memory",observation, action, reward, observation_)[m
[31m-            RL.store_transition(observation, action,[[reward]], observation_)[m
[32m+[m[32m            print("memory", observation, action, reward, observation_)[m
[32m+[m[32m            RL.store_transition(observation, action, [[reward]], observation_)[m
 [m
             if (step1 > 200) and (step1 % 5 == 0):[m
                 RL.learn()[m
[31m-            step1 +=1[m
[32m+[m[32m            step1 += 1[m
             # swap observation[m
 [m
[31m-            count +=  1[m
[31m-            print("count",count)[m
[32m+[m[32m            count += 1[m
[32m+[m[32m            print("count", count)[m
             observation = [observation_][m
[31m-            #当步数多余20时不满足退出，飞出限定区域不满足退出[m
[31m-            if count>20 :[m
[32m+[m[32m            # 当步数多余20时不满足退出，飞出限定区域不满足退出[m
[32m+[m[32m            if count > 20:[m
                 break[m
             # text_save("data/data2/model_mean_yes_input_yes_f_c.txt", [np.mean(tem)]) #数据保存[m
             # text_save("data/data2/model_max_yes_input_yes_f_c", [max(tem)])[m
[36m@@ -58,21 +52,21 @@[m [mdef run_maze(env):[m
 [m
         step += 1[m
 [m
[31m-[m
     import matplotlib.pyplot as plt[m
     plt.plot(all_reward)[m
     plt.show()[m
 [m
[32m+[m
 if __name__ == "__main__":[m
     # maze game[m
[31m-    env = System_ENV(2,100,15)[m
[32m+[m[32m    env = System_ENV(2, 100, 15)[m
     RL = DeepQNetwork(env.n_actions, env.n_features,[m
                       learning_rate=0.1,[m
                       reward_decay=0.9,[m
                       e_greedy=0.9,[m
                       replace_target_iter=200,[m
                       memory_size=2000,[m
[31m-                      # output_graph=True[m
[32m+[m[32m                      output_graph=True[m
                       )[m
     run_maze(env)[m
[31m-    RL.plot_cost()[m
\ No newline at end of file[m
[32m+[m[32m    RL.plot_cost()[m

[33mcommit 945e0881dbd03113d3ed62a3910a13a9c635d541[m
Author: Lwt <lwtynu@gmail.com>
Date:   Fri Aug 7 20:43:48 2020 +0800

    rm workspace settings

[1mdiff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml[m
[1mdeleted file mode 100644[m
[1mindex 105ce2d..0000000[m
[1m--- a/.idea/inspectionProfiles/profiles_settings.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<component name="InspectionProjectProfileManager">[m
[31m-  <settings>[m
[31m-    <option name="USE_PROJECT_PROFILE" value="false" />[m
[31m-    <version value="1.0" />[m
[31m-  </settings>[m
[31m-</component>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/liwentao.iml b/.idea/liwentao.iml[m
[1mdeleted file mode 100644[m
[1mindex 50f5b98..0000000[m
[1m--- a/.idea/liwentao.iml[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<module type="PYTHON_MODULE" version="4">[m
[31m-  <component name="NewModuleRootManager">[m
[31m-    <content url="file://$MODULE_DIR$" />[m
[31m-    <orderEntry type="jdk" jdkName="Python 3.6 (UAV_RL)" jdkType="Python SDK" />[m
[31m-    <orderEntry type="sourceFolder" forTests="false" />[m
[31m-  </component>[m
[31m-  <component name="TestRunnerService">[m
[31m-    <option name="projectConfiguration" value="pytest" />[m
[31m-    <option name="PROJECT_TEST_RUNNER" value="pytest" />[m
[31m-  </component>[m
[31m-</module>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mdeleted file mode 100644[m
[1mindex 88b03a1..0000000[m
[1m--- a/.idea/misc.xml[m
[1m+++ /dev/null[m
[36m@@ -1,4 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.6 (UAV_RL)" project-jdk-type="Python SDK" />[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/modules.xml b/.idea/modules.xml[m
[1mdeleted file mode 100644[m
[1mindex 31656da..0000000[m
[1m--- a/.idea/modules.xml[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="ProjectModuleManager">[m
[31m-    <modules>[m
[31m-      <module fileurl="file://$PROJECT_DIR$/.idea/liwentao.iml" filepath="$PROJECT_DIR$/.idea/liwentao.iml" />[m
[31m-    </modules>[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/vcs.xml b/.idea/vcs.xml[m
[1mdeleted file mode 100644[m
[1mindex 94a25f7..0000000[m
[1m--- a/.idea/vcs.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="VcsDirectoryMappings">[m
[31m-    <mapping directory="$PROJECT_DIR$" vcs="Git" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/workspace.xml b/.idea/workspace.xml[m
[1mdeleted file mode 100644[m
[1mindex 7bbf2a9..0000000[m
[1m--- a/.idea/workspace.xml[m
[1m+++ /dev/null[m
[36m@@ -1,250 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="ChangeListManager">[m
[31m-    <list default="true" id="ac3496c0-552d-409c-80c6-aee6b5e33eb0" name="Default Changelist" comment="">[m
[31m-      <change beforePath="$PROJECT_DIR$/.idea/liwentao.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/liwentao.iml" afterDir="false" />[m
[31m-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />[m
[31m-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />[m
[31m-      <change beforePath="$PROJECT_DIR$/.vscode/settings.json" beforeDir="false" afterPath="$PROJECT_DIR$/.vscode/settings.json" afterDir="false" />[m
[31m-      <change beforePath="$PROJECT_DIR$/requirements.txt" beforeDir="false" afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />[m
[31m-    </list>[m
[31m-    <option name="SHOW_DIALOG" value="false" />[m
[31m-    <option name="HIGHLIGHT_CONFLICTS" value="true" />[m
[31m-    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />[m
[31m-    <option name="LAST_RESOLUTION" value="IGNORE" />[m
[31m-  </component>[m
[31m-  <component name="FavoritesManager">[m
[31m-    <favorites_list name="liwentao" />[m
[31m-  </component>[m
[31m-  <component name="FileTemplateManagerImpl">[m
[31m-    <option name="RECENT_TEMPLATES">[m
[31m-      <list>[m
[31m-        <option value="Python Script" />[m
[31m-      </list>[m
[31m-    </option>[m
[31m-  </component>[m
[31m-  <component name="Git.Settings">[m
[31m-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />[m
[31m-  </component>[m
[31m-  <component name="JupyterTrust" id="ba7e9f3c-b251-439e-bcef-f05155d8dacd" />[m
[31m-  <component name="ProjectId" id="1f7Ob2Kh3W8KVvSSd7mkLmKWm4s" />[m
[31m-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />[m
[31m-  <component name="ProjectViewState">[m
[31m-    <option name="hideEmptyMiddlePackages" value="true" />[m
[31m-    <option name="showLibraryContents" value="true" />[m
[31m-  </component>[m
[31m-  <component name="PropertiesComponent">[m
[31m-    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />[m
[31m-    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />[m
[31m-    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />[m
[31m-    <property name="WebServerToolWindowFactoryState" value="true" />[m
[31m-    <property name="last_opened_file_path" value="$PROJECT_DIR$" />[m
[31m-    <property name="node.js.detected.package.eslint" value="true" />[m
[31m-    <property name="node.js.path.for.package.eslint" value="project" />[m
[31m-    <property name="node.js.selected.package.eslint" value="(autodetect)" />[m
[31m-    <property name="settings.editor.selected.configurable" value="editor.preferences.fonts.default" />[m
[31m-  </component>[m
[31m-  <component name="RecentsManager">[m
[31m-    <key name="CopyFile.RECENT_KEYS">[m
[31m-      <recent name="C:\Users\86151\Desktop\liwentao" />[m
[31m-      <recent name="C:\Users\86151\Desktop\liwentao\Fonts" />[m
[31m-      <recent name="C:\Users\Administrator\Desktop\liwentao" />[m
[31m-    </key>[m
[31m-  </component>[m
[31m-  <component name="RunManager" selected="Python.run_UAV_RL">[m
[31m-    <configuration name="change_random_system_env_set_affinity" type="PythonConfigurationType" factoryName="Python" temporary="true">[m
[31m-      <module name="liwentao" />[m
[31m-      <option name="INTERPRETER_OPTIONS" value="" />[m
[31m-      <option name="PARENT_ENVS" value="true" />[m
[31m-      <envs>[m
[31m-        <env name="PYTHONUNBUFFERED" value="1" />[m
[31m-      </envs>[m
[31m-      <option name="SDK_HOME" value="" />[m
[31m-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />[m
[31m-      <option name="IS_MODULE_SDK" value="true" />[m
[31m-      <option name="ADD_CONTENT_ROOTS" value="true" />[m
[31m-      <option name="ADD_SOURCE_ROOTS" value="true" />[m
[31m-      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
[31m-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/change_random_system_env_set_affinity.py" />[m
[31m-      <option name="PARAMETERS" value="" />[m
[31m-      <option name="SHOW_COMMAND_LINE" value="false" />[m
[31m-      <option name="EMULATE_TERMINAL" value="false" />[m
[31m-      <option name="MODULE_MODE" value="false" />[m
[31m-      <option name="REDIRECT_INPUT" value="false" />[m
[31m-      <option name="INPUT_FILE" value="" />[m
[31m-      <method v="2" />[m
[31m-    </configuration>[m
[31m-    <configuration name="game_self" type="PythonConfigurationType" factoryName="Python" temporary="true">[m
[31m-      <module name="liwentao" />[m
[31m-      <option name="INTERPRETER_OPTIONS" value="" />[m
[31m-      <option name="PARENT_ENVS" value="true" />[m
[31m-      <envs>[m
[31m-        <env name="PYTHONUNBUFFERED" value="1" />[m
[31m-      </envs>[m
[31m-      <option name="SDK_HOME" value="" />[m
[31m-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />[m
[31m-      <option name="IS_MODULE_SDK" value="true" />[m
[31m-      <option name="ADD_CONTENT_ROOTS" value="true" />[m
[31m-      <option name="ADD_SOURCE_ROOTS" value="true" />[m
[31m-      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
[31m-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/game_self.py" />[m
[31m-      <option name="PARAMETERS" value="" />[m
[31m-      <option name="SHOW_COMMAND_LINE" value="false" />[m
[31m-      <option name="EMULATE_TERMINAL" value="false" />[m
[31m-      <option name="MODULE_MODE" value="false" />[m
[31m-      <option name="REDIRECT_INPUT" value="false" />[m
[31m-      <option name="INPUT_FILE" value="" />[m
[31m-      <method v="2" />[m
[31m-    </configuration>[m
[31m-    <configuration name="graph1" type="PythonConfigurationType" factoryName="Python" temporary="true">[m
[31m-      <module name="liwentao" />[m
[31m-      <option name="INTERPRETER_OPTIONS" value="" />[m
[31m-      <option name="PARENT_ENVS" value="true" />[m
[31m-      <envs>[m
[31m-        <env name="PYTHONUNBUFFERED" value="1" />[m
[31m-      </envs>[m
[31m-      <option name="SDK_HOME" value="" />[m
[31m-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />[m
[31m-      <option name="IS_MODULE_SDK" value="true" />[m
[31m-      <option name="ADD_CONTENT_ROOTS" value="true" />[m
[31m-      <option name="ADD_SOURCE_ROOTS" value="true" />[m
[31m-      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
[31m-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/graph1.py" />[m
[31m-      <option name="PARAMETERS" value="" />[m
[31m-      <option name="SHOW_COMMAND_LINE" value="false" />[m
[31m-      <option name="EMULATE_TERMINAL" value="false" />[m
[31m-      <option name="MODULE_MODE" value="false" />[m
[31m-      <option name="REDIRECT_INPUT" value="false" />[m
[31m-      <option name="INPUT_FILE" value="" />[m
[31m-      <method v="2" />[m
[31m-    </configuration>[m
[31m-    <configuration name="run_UAV_RL" type="PythonConfigurationType" factoryName="Python" temporary="true">[m
[31m-      <module name="liwentao" />[m
[31m-      <option name="INTERPRETER_OPTIONS" value="" />[m
[31m-      <option name="PARENT_ENVS" value="true" />[m
[31m-      <envs>[m
[31m-        <env name="PYTHONUNBUFFERED" value="1" />[m
[31m-      </envs>[m
[31m-      <option name="SDK_HOME" value="" />[m
[31m-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />[m
[31m-      <option name="IS_MODULE_SDK" value="true" />[m
[31m-      <option name="ADD_CONTENT_ROOTS" value="true" />[m
[31m-      <option name="ADD_SOURCE_ROOTS" value="true" />[m
[31m-      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
[31m-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/run_UAV_RL.py" />[m
[31m-      <option name="PARAMETERS" value="" />[m
[31m-      <option name="SHOW_COMMAND_LINE" value="false" />[m
[31m-      <option name="EMULATE_TERMINAL" value="false" />[m
[31m-      <option name="MODULE_MODE" value="false" />[m
[31m-      <option name="REDIRECT_INPUT" value="false" />[m
[31m-      <option name="INPUT_FILE" value="" />[m
[31m-      <method v="2" />[m
[31m-    </configuration>[m
[31m-    <configuration name="run_this_1" type="PythonConfigurationType" factoryName="Python" temporary="true">[m
[31m-      <module name="liwentao" />[m
[31m-      <option name="INTERPRETER_OPTIONS" value="" />[m
[31m-      <option name="PARENT_ENVS" value="true" />[m
[31m-      <envs>[m
[31m-        <env name="PYTHONUNBUFFERED" value="1" />[m
[31m-      </envs>[m
[31m-      <option name="SDK_HOME" value="" />[m
[31m-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />[m
[31m-      <option name="IS_MODULE_SDK" value="true" />[m
[31m-      <option name="ADD_CONTENT_ROOTS" value="true" />[m
[31m-      <option name="ADD_SOURCE_ROOTS" value="true" />[m
[31m-      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
[31m-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/run_this_1.py" />[m
[31m-      <option name="PARAMETERS" value="" />[m
[31m-      <option name="SHOW_COMMAND_LINE" value="false" />[m
[31m-      <option name="EMULATE_TERMINAL" value="false" />[m
[31m-      <option name="MODULE_MODE" value="false" />[m
[31m-      <option name="REDIRECT_INPUT" value="false" />[m
[31m-      <option name="INPUT_FILE" value="" />[m
[31m-      <method v="2" />[m
[31m-    </configuration>[m
[31m-    <recent_temporary>[m
[31m-      <list>[m
[31m-        <item itemvalue="Python.run_UAV_RL" />[m
[31m-        <item itemvalue="Python.graph1" />[m
[31m-        <item itemvalue="Python.game_self" />[m
[31m-        <item itemvalue="Python.run_this_1" />[m
[31m-        <item itemvalue="Python.change_random_system_env_set_affinity" />[m
[31m-      </list>[m
[31m-    </recent_temporary>[m
[31m-  </component>[m
[31m-  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />[m
[31m-  <component name="SvnConfiguration">[m
[31m-    <configuration />[m
[31m-  </component>[m
[31m-  <component name="TaskManager">[m
[31m-    <task active="true" id="Default" summary="Default task">[m
[31m-      <changelist id="ac3496c0-552d-409c-80c6-aee6b5e33eb0" name="Default Changelist" comment="" />[m
[31m-      <created>1595565731461</created>[m
[31m-      <option name="number" value="Default" />[m
[31m-      <option name="presentableId" value="Default" />[m
[31m-      <updated>1595565731461</updated>[m
[31m-      <workItem from="1596725284844" duration="866000" />[m
[31m-    </task>[m
[31m-    <servers />[m
[31m-  </component>[m
[31m-  <component name="TypeScriptGeneratedFilesManager">[m
[31m-    <option name="version" value="3" />[m
[31m-  </component>[m
[31m-  <component name="Vcs.Log.Tabs.Properties">[m
[31m-    <option name="TAB_STATES">[m
[31m-      <map>[m
[31m-        <entry key="MAIN">[m
[31m-          <value>[m
[31m-            <State />[m
[31m-          </value>[m
[31m-        </entry>[m
[31m-      </map>[m
[31m-    </option>[m
[31m-    <option name="oldMeFiltersMigrated" value="true" />[m
[31m-  </component>[m
[31m-  <component name="WindowStateProjectService">[m
[31m-    <state width="1878" height="305" key="GridCell.Tab.0.bottom" timestamp="1596726176103">[m
[31m-      <screen x="836" y="-1080" width="1920" height="1080" />[m
[31m-    </state>[m
[31m-    <state width="1345" height="179" key="GridCell.Tab.0.bottom/0.0.1366.728@0.0.1366.728" timestamp="1595640593364" />[m
[31m-    <state width="1878" height="305" key="GridCell.Tab.0.bottom/0.0.1680.1050/836.-1080.1920.1080/-1084.-1080.1920.1080@836.-1080.1920.1080" timestamp="1596726176103" />[m
[31m-    <state width="1878" height="305" key="GridCell.Tab.0.center" timestamp="1596726176100">[m
[31m-      <screen x="836" y="-1080" width="1920" height="1080" />[m
[31m-    </state>[m
[31m-    <state width="1345" height="179" key="GridCell.Tab.0.center/0.0.1366.728@0.0.1366.728" timestamp="1595640593364" />[m
[31m-    <state width="1878" height="305" key="GridCell.Tab.0.center/0.0.1680.1050/836.-1080.1920.1080/-1084.-1080.1920.1080@836.-1080.1920.1080" timestamp="1596726176100" />[m
[31m-    <state width="1878" height="305" key="GridCell.Tab.0.left" timestamp="1596726176099">[m
[31m-      <screen x="836" y="-1080" width="1920" height="1080" />[m
[31m-    </state>[m
[31m-    <state width="1345" height="179" key="GridCell.Tab.0.left/0.0.1366.728@0.0.1366.728" timestamp="1595640593363" />[m
[31m-    <state width="1878" height="305" key="GridCell.Tab.0.left/0.0.1680.1050/836.-1080.1920.1080/-1084.-1080.1920.1080@836.-1080.1920.1080" timestamp="1596726176099" />[m
[31m-    <state width="1878" height="305" key="GridCell.Tab.0.right" timestamp="1596726176102">[m
[31m-      <screen x="836" y="-1080" width="1920" height="1080" />[m
[31m-    </state>[m
[31m-    <state width="1345" height="179" key="GridCell.Tab.0.right/0.0.1366.728@0.0.1366.728" timestamp="1595640593364" />[m
[31m-    <state width="1878" height="305" key="GridCell.Tab.0.right/0.0.1680.1050/836.-1080.1920.1080/-1084.-1080.1920.1080@836.-1080.1920.1080" timestamp="1596726176102" />[m
[31m-    <state x="184" y="6" key="SettingsEditor" timestamp="1595565831431">[m
[31m-      <screen x="0" y="0" width="1366" height="728" />[m
[31m-    </state>[m
[31m-    <state x="184" y="6" key="SettingsEditor/0.0.1366.728@0.0.1366.728" timestamp="1595565831431" />[m
[31m-  </component>[m
[31m-  <component name="XDebuggerManager">[m
[31m-    <breakpoint-manager>[m
[31m-      <breakpoints>[m
[31m-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">[m
[31m-          <url>file://$PROJECT_DIR$/change_random_system_env_set_affinity.py</url>[m
[31m-          <line>15</line>[m
[31m-          <option name="timeStamp" value="1" />[m
[31m-        </line-breakpoint>[m
[31m-        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">[m
[31m-          <url>file://$PROJECT_DIR$/change_random_system_env_set_affinity.py</url>[m
[31m-          <line>185</line>[m
[31m-          <option name="timeStamp" value="2" />[m
[31m-        </line-breakpoint>[m
[31m-      </breakpoints>[m
[31m-    </breakpoint-manager>[m
[31m-  </component>[m
[31m-  <component name="com.intellij.coverage.CoverageDataManagerImpl">[m
[31m-    <SUITE FILE_PATH="coverage/UAV_RL$run_UAV_RL.coverage" NAME="run_UAV_RL Coverage Results" MODIFIED="1596726134979" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/__pycache__/RL_brain_change_layer.cpython-36.pyc b/__pycache__/RL_brain_change_layer.cpython-36.pyc[m
[1mdeleted file mode 100644[m
[1mindex 8a4782c..0000000[m
Binary files a/__pycache__/RL_brain_change_layer.cpython-36.pyc and /dev/null differ
[1mdiff --git a/__pycache__/RL_brain_change_layer.cpython-38.pyc b/__pycache__/RL_brain_change_layer.cpython-38.pyc[m
[1mdeleted file mode 100644[m
[1mindex 7f0578f..0000000[m
Binary files a/__pycache__/RL_brain_change_layer.cpython-38.pyc and /dev/null differ
[1mdiff --git a/__pycache__/UAV_RL_env.cpython-36.pyc b/__pycache__/UAV_RL_env.cpython-36.pyc[m
[1mdeleted file mode 100644[m
[1mindex 8751083..0000000[m
Binary files a/__pycache__/UAV_RL_env.cpython-36.pyc and /dev/null differ
[1mdiff --git a/__pycache__/change_random_system_env_set_affinity.cpython-36.pyc b/__pycache__/change_random_system_env_set_affinity.cpython-36.pyc[m
[1mdeleted file mode 100644[m
[1mindex 7cb737f..0000000[m
Binary files a/__pycache__/change_random_system_env_set_affinity.cpython-36.pyc and /dev/null differ
[1mdiff --git a/__pycache__/data_classify.cpython-36.pyc b/__pycache__/data_classify.cpython-36.pyc[m
[1mdeleted file mode 100644[m
[1mindex ef6e39f..0000000[m
Binary files a/__pycache__/data_classify.cpython-36.pyc and /dev/null differ
[1mdiff --git a/__pycache__/game_self.cpython-36.pyc b/__pycache__/game_self.cpython-36.pyc[m
[1mdeleted file mode 100644[m
[1mindex 7797ae9..0000000[m
Binary files a/__pycache__/game_self.cpython-36.pyc and /dev/null differ

[33mcommit 58aba6e07d5182de66ba595200eee521d3ef3de3[m
Author: Lwt <lwtynu@gmail.com>
Date:   Fri Aug 7 15:45:12 2020 +0800

    file

[1mdiff --git a/.idea/liwentao.iml b/.idea/liwentao.iml[m
[1mindex 5d21650..50f5b98 100644[m
[1m--- a/.idea/liwentao.iml[m
[1m+++ b/.idea/liwentao.iml[m
[36m@@ -2,7 +2,7 @@[m
 <module type="PYTHON_MODULE" version="4">[m
   <component name="NewModuleRootManager">[m
     <content url="file://$MODULE_DIR$" />[m
[31m-    <orderEntry type="jdk" jdkName="Python 3.6 (图像分割)" jdkType="Python SDK" />[m
[32m+[m[32m    <orderEntry type="jdk" jdkName="Python 3.6 (UAV_RL)" jdkType="Python SDK" />[m
     <orderEntry type="sourceFolder" forTests="false" />[m
   </component>[m
   <component name="TestRunnerService">[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mindex 78ab426..88b03a1 100644[m
[1m--- a/.idea/misc.xml[m
[1m+++ b/.idea/misc.xml[m
[36m@@ -1,4 +1,4 @@[m
 <?xml version="1.0" encoding="UTF-8"?>[m
 <project version="4">[m
[31m-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.6 (图像分割)" project-jdk-type="Python SDK" />[m
[32m+[m[32m  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.6 (UAV_RL)" project-jdk-type="Python SDK" />[m
 </project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/workspace.xml b/.idea/workspace.xml[m
[1mindex 88c2fe9..7bbf2a9 100644[m
[1m--- a/.idea/workspace.xml[m
[1m+++ b/.idea/workspace.xml[m
[36m@@ -2,12 +2,12 @@[m
 <project version="4">[m
   <component name="ChangeListManager">[m
     <list default="true" id="ac3496c0-552d-409c-80c6-aee6b5e33eb0" name="Default Changelist" comment="">[m
[32m+[m[32m      <change beforePath="$PROJECT_DIR$/.idea/liwentao.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/liwentao.iml" afterDir="false" />[m
[32m+[m[32m      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />[m
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />[m
[31m-      <change beforePath="$PROJECT_DIR$/RL_brain_change_layer.py" beforeDir="false" afterPath="$PROJECT_DIR$/RL_brain_change_layer.py" afterDir="false" />[m
[31m-      <change beforePath="$PROJECT_DIR$/change_random_system_env_set_affinity.py" beforeDir="false" afterPath="$PROJECT_DIR$/change_random_system_env_set_affinity.py" afterDir="false" />[m
[31m-      <change beforePath="$PROJECT_DIR$/run_UAV_RL.py" beforeDir="false" afterPath="$PROJECT_DIR$/run_UAV_RL.py" afterDir="false" />[m
[32m+[m[32m      <change beforePath="$PROJECT_DIR$/.vscode/settings.json" beforeDir="false" afterPath="$PROJECT_DIR$/.vscode/settings.json" afterDir="false" />[m
[32m+[m[32m      <change beforePath="$PROJECT_DIR$/requirements.txt" beforeDir="false" afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />[m
     </list>[m
[31m-    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />[m
     <option name="SHOW_DIALOG" value="false" />[m
     <option name="HIGHLIGHT_CONFLICTS" value="true" />[m
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />[m
[36m@@ -26,17 +26,22 @@[m
   <component name="Git.Settings">[m
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />[m
   </component>[m
[32m+[m[32m  <component name="JupyterTrust" id="ba7e9f3c-b251-439e-bcef-f05155d8dacd" />[m
   <component name="ProjectId" id="1f7Ob2Kh3W8KVvSSd7mkLmKWm4s" />[m
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />[m
   <component name="ProjectViewState">[m
     <option name="hideEmptyMiddlePackages" value="true" />[m
[31m-    <option name="showExcludedFiles" value="true" />[m
     <option name="showLibraryContents" value="true" />[m
   </component>[m
   <component name="PropertiesComponent">[m
[32m+[m[32m    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />[m
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />[m
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />[m
[32m+[m[32m    <property name="WebServerToolWindowFactoryState" value="true" />[m
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />[m
[32m+[m[32m    <property name="node.js.detected.package.eslint" value="true" />[m
[32m+[m[32m    <property name="node.js.path.for.package.eslint" value="project" />[m
[32m+[m[32m    <property name="node.js.selected.package.eslint" value="(autodetect)" />[m
     <property name="settings.editor.selected.configurable" value="editor.preferences.fonts.default" />[m
   </component>[m
   <component name="RecentsManager">[m
[36m@@ -46,18 +51,6 @@[m
       <recent name="C:\Users\Administrator\Desktop\liwentao" />[m
     </key>[m
   </component>[m
[31m-  <component name="RunDashboard">[m
[31m-    <option name="ruleStates">[m
[31m-      <list>[m
[31m-        <RuleState>[m
[31m-          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />[m
[31m-        </RuleState>[m
[31m-        <RuleState>[m
[31m-          <option name="name" value="StatusDashboardGroupingRule" />[m
[31m-        </RuleState>[m
[31m-      </list>[m
[31m-    </option>[m
[31m-  </component>[m
   <component name="RunManager" selected="Python.run_UAV_RL">[m
     <configuration name="change_random_system_env_set_affinity" type="PythonConfigurationType" factoryName="Python" temporary="true">[m
       <module name="liwentao" />[m
[36m@@ -71,6 +64,7 @@[m
       <option name="IS_MODULE_SDK" value="true" />[m
       <option name="ADD_CONTENT_ROOTS" value="true" />[m
       <option name="ADD_SOURCE_ROOTS" value="true" />[m
[32m+[m[32m      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
       <option name="SCRIPT_NAME" value="$PROJECT_DIR$/change_random_system_env_set_affinity.py" />[m
       <option name="PARAMETERS" value="" />[m
       <option name="SHOW_COMMAND_LINE" value="false" />[m
[36m@@ -92,6 +86,7 @@[m
       <option name="IS_MODULE_SDK" value="true" />[m
       <option name="ADD_CONTENT_ROOTS" value="true" />[m
       <option name="ADD_SOURCE_ROOTS" value="true" />[m
[32m+[m[32m      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
       <option name="SCRIPT_NAME" value="$PROJECT_DIR$/game_self.py" />[m
       <option name="PARAMETERS" value="" />[m
       <option name="SHOW_COMMAND_LINE" value="false" />[m
[36m@@ -113,6 +108,7 @@[m
       <option name="IS_MODULE_SDK" value="true" />[m
       <option name="ADD_CONTENT_ROOTS" value="true" />[m
       <option name="ADD_SOURCE_ROOTS" value="true" />[m
[32m+[m[32m      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
       <option name="SCRIPT_NAME" value="$PROJECT_DIR$/graph1.py" />[m
       <option name="PARAMETERS" value="" />[m
       <option name="SHOW_COMMAND_LINE" value="false" />[m
[36m@@ -134,6 +130,7 @@[m
       <option name="IS_MODULE_SDK" value="true" />[m
       <option name="ADD_CONTENT_ROOTS" value="true" />[m
       <option name="ADD_SOURCE_ROOTS" value="true" />[m
[32m+[m[32m      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
       <option name="SCRIPT_NAME" value="$PROJECT_DIR$/run_UAV_RL.py" />[m
       <option name="PARAMETERS" value="" />[m
       <option name="SHOW_COMMAND_LINE" value="false" />[m
[36m@@ -155,6 +152,7 @@[m
       <option name="IS_MODULE_SDK" value="true" />[m
       <option name="ADD_CONTENT_ROOTS" value="true" />[m
       <option name="ADD_SOURCE_ROOTS" value="true" />[m
[32m+[m[32m      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />[m
       <option name="SCRIPT_NAME" value="$PROJECT_DIR$/run_this_1.py" />[m
       <option name="PARAMETERS" value="" />[m
       <option name="SHOW_COMMAND_LINE" value="false" />[m
[36m@@ -174,6 +172,7 @@[m
       </list>[m
     </recent_temporary>[m
   </component>[m
[32m+[m[32m  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />[m
   <component name="SvnConfiguration">[m
     <configuration />[m
   </component>[m
[36m@@ -184,39 +183,46 @@[m
       <option name="number" value="Default" />[m
       <option name="presentableId" value="Default" />[m
       <updated>1595565731461</updated>[m
[32m+[m[32m      <workItem from="1596725284844" duration="866000" />[m
     </task>[m
     <servers />[m
   </component>[m
[32m+[m[32m  <component name="TypeScriptGeneratedFilesManager">[m
[32m+[m[32m    <option name="version" value="3" />[m
[32m+[m[32m  </component>[m
   <component name="Vcs.Log.Tabs.Properties">[m
     <option name="TAB_STATES">[m
       <map>[m
         <entry key="MAIN">[m
           <value>[m
[31m-            <State>[m
[31m-              <option name="COLUMN_ORDER" />[m
[31m-            </State>[m
[32m+[m[32m            <State />[m
           </value>[m
         </entry>[m
       </map>[m
     </option>[m
[32m+[m[32m    <option name="oldMeFiltersMigrated" value="true" />[m
   </component>[m
   <component name="WindowStateProjectService">[m
[31m-    <state width="1345" height="179" key="GridCell.Tab.0.bottom" timestamp="1595640593364">[m
[31m-      <screen x="0" y="0" width="1366" height="728" />[m
[32m+[m[32m    <state width="1878" height="305" key="GridCell.Tab.0.bottom" timestamp="1596726176103">[m
[32m+[m[32m      <screen x="836" y="-1080" width="1920" height="1080" />[m
     </state>[m
     <state width="1345" height="179" key="GridCell.Tab.0.bottom/0.0.1366.728@0.0.1366.728" timestamp="1595640593364" />[m
[31m-    <state width="1345" height="179" key="GridCell.Tab.0.center" timestamp="1595640593364">[m
[31m-      <screen x="0" y="0" width="1366" height="728" />[m
[32m+[m[32m    <state width="1878" height="305" key="GridCell.Tab.0.bottom/0.0.1680.1050/836.-1080.1920.1080/-1084.-1080.1920.1080@836.-1080.1920.1080" timestamp="1596726176103" />[m
[32m+[m[32m    <state width="1878" height="305" key="GridCell.Tab.0.center" timestamp="1596726176100">[m
[32m+[m[32m      <screen x="836" y="-1080" width="1920" height="1080" />[m
     </state>[m
     <state width="1345" height="179" key="GridCell.Tab.0.center/0.0.1366.728@0.0.1366.728" timestamp="1595640593364" />[m
[31m-    <state width="1345" height="179" key="GridCell.Tab.0.left" timestamp="1595640593363">[m
[31m-      <screen x="0" y="0" width="1366" height="728" />[m
[32m+[m[32m    <state width="1878" height="305" key="GridCell.Tab.0.center/0.0.1680.1050/836.-1080.1920.1080/-1084.-1080.1920.1080@836.-1080.1920.1080" timestamp="1596726176100" />[m
[32m+[m[32m    <state width="1878" height="305" key="GridCell.Tab.0.left" timestamp="1596726176099">[m
[32m+[m[32m      <screen x="836" y="-1080" width="1920" height="1080" />[m
     </state>[m
     <state width="1345" height="179" key="GridCell.Tab.0.left/0.0.1366.728@0.0.1366.728" timestamp="1595640593363" />[m
[31m-    <state width="1345" height="179" key="GridCell.Tab.0.right" timestamp="1595640593364">[m
[31m-      <screen x="0" y="0" width="1366" height="728" />[m
[32m+[m[32m    <state width="1878" height="305" key="GridCell.Tab.0.left/0.0.1680.1050/836.-1080.1920.1080/-1084.-1080.1920.1080@836.-1080.1920.1080" timestamp="1596726176099" />[m
[32m+[m[32m    <state width="1878" height="305" key="GridCell.Tab.0.right" timestamp="1596726176102">[m
[32m+[m[32m      <screen x="836" y="-1080" width="1920" height="1080" />[m
     </state>[m
     <state width="1345" height="179" key="GridCell.Tab.0.right/0.0.1366.728@0.0.1366.728" timestamp="1595640593364" />[m
[32m+[m[32m    <state width="1878" height="305" key="GridCell.Tab.0.right/0.0.1680.1050/836.-1080.1920.1080/-1084.-1080.1920.1080@836.-1080.1920.1080" timestamp="1596726176102" />[m
     <state x="184" y="6" key="SettingsEditor" timestamp="1595565831431">[m
       <screen x="0" y="0" width="1366" height="728" />[m
     </state>[m
[36m@@ -238,4 +244,7 @@[m
       </breakpoints>[m
     </breakpoint-manager>[m
   </component>[m
[32m+[m[32m  <component name="com.intellij.coverage.CoverageDataManagerImpl">[m
[32m+[m[32m    <SUITE FILE_PATH="coverage/UAV_RL$run_UAV_RL.coverage" NAME="run_UAV_RL Coverage Results" MODIFIED="1596726134979" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />[m
[32m+[m[32m  </component>[m
 </project>[m
\ No newline at end of file[m
[1mdiff --git a/.vscode/settings.json b/.vscode/settings.json[m
[1mindex 5b80df3..a8e9a02 100644[m
[1m--- a/.vscode/settings.json[m
[1m+++ b/.vscode/settings.json[m
[36m@@ -1,3 +1,3 @@[m
 {[m
[31m-    "python.pythonPath": "venv/bin/python"[m
[32m+[m[32m    "python.pythonPath": "/Applications/Anaconda/anaconda3/envs/UAV_RL/bin/python"[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/Solution.py b/Solution.py[m
[1mnew file mode 100644[m
[1mindex 0000000..87a143f[m
[1m--- /dev/null[m
[1m+++ b/Solution.py[m
[36m@@ -0,0 +1,224 @@[m
[32m+[m[32mimport numpy as np[m
[32m+[m
[32m+[m
[32m+[m[32mclass Solution:[m
[32m+[m[32m    '''[m
[32m+[m[32m        可行解相关方法[m
[32m+[m[32m    '''[m
[32m+[m
[32m+[m[32m    __bandwidth = 10[m
[32m+[m[32m    __storage = 50[m
[32m+[m[32m    __energy_budget = 10 ^ 6[m
[32m+[m[32m    __frequency = 5 * 10 ^ 3[m
[32m+[m[32m    __channel_power = -50[m
[32m+[m[32m    __noise_pose = -130[m
[32m+[m[32m    __transmit_power = 1[m
[32m+[m
[32m+[m[32m    # uav fly parameters[m
[32m+[m[32m    __blade_power = 158.76[m
[32m+[m[32m    __induced_power = 88.63[m
[32m+[m[32m    __qtips = 120[m
[32m+[m[32m    __rho = 1.225[m
[32m+[m[32m    __rotor_disc_aera = 1[m
[32m+[m[32m    __hover_induced_velocity = 4.03[m
[32m+[m[32m    __fuselage_drag_ratio = 0.3[m
[32m+[m[32m    __fuselage_rotor_solidity = 0.05[m
[32m+[m[32m    __max_velocity = 15[m
[32m+[m[32m    __height = 100[m
[32m+[m
[32m+[m[32m    # md parameter[m
[32m+[m[32m    __md_transmit_power = 1[m
[32m+[m[32m    __md_frequency = 50[m
[32m+[m[32m    __md_storage = 1[m
[32m+[m[32m    __md_number = 4[m
[32m+[m[32m    __md_tasks = None[m
[32m+[m[32m    __md_position = None[m
[32m+[m[32m    __md_cache = 0.001[m
[32m+[m
[32m+[m[32m    __width = 100[m
[32m+[m[32m    __latency = 0.5[m
[32m+[m[32m    __slot = 20[m
[32m+[m[32m    __Q0 = [0, 0][m
[32m+[m[32m    __QF = [0, 0][m
[32m+[m
[32m+[m[32m    __ETA = 10 ** -6[m
[32m+[m[32m    __BITS = 10 ** 3[m
[32m+[m[32m    __CA = 0.015[m
[32m+[m[32m    __TK = 10[m
[32m+[m[32m    __UAV_CA = 0.00375[m
[32m+[m
[32m+[m[32m    def __init__(self, md_positions, tasks, slot_number, slot_length) -> None:[m
[32m+[m[32m        super().__init__()[m
[32m+[m[32m        self.__md_position = md_positions[m
[32m+[m[32m        self.__md_number = tasks.shape[0][m
[32m+[m
[32m+[m[32m        self.__slot = slot_number[m
[32m+[m[32m        self.__latency = slot_length[m
[32m+[m[32m        self.__md_tasks = tasks[m
[32m+[m
[32m+[m[32m    def uavFlyEnergy(self, velocity):[m
[32m+[m[32m        '''[m
[32m+[m[32m        uavFlyEnergy: 计算UAV的飞行能耗[m
[32m+[m
[32m+[m[32m            @velocity: UAV的速度向量[m
[32m+[m[32m        '''[m
[32m+[m
[32m+[m[32m    def Db2Dec(self, dB):[m
[32m+[m[32m        '''[m
[32m+[m[32m            dB 为矩阵[m
[32m+[m[32m        '''[m
[32m+[m[32m        dec = np.power(10, (dB / 10))[m
[32m+[m[32m        return dec[m
[32m+[m
[32m+[m[32m    def Distance(self, trajectory):[m
[32m+[m[32m        '''[m
[32m+[m[32m            Distance 计算UAV到各个MD之间的距离[m
[32m+[m
[32m+[m[32m            @positions 维度为2*K[m
[32m+[m[32m        '''[m
[32m+[m
[32m+[m[32m        slot_numb = trajectory.shape[1][m
[32m+[m[32m        md_num = self.__md_number[m
[32m+[m
[32m+[m[32m        dis = np.zeros([md_num, slot_numb])[m
[32m+[m
[32m+[m[32m        for i in range(0, slot_numb):[m
[32m+[m[32m            temp = np.repeat(trajectory[:, i], md_num)[m
[32m+[m[32m            temp = np.power(temp.reshape(2, md_num) - self.__md_position, 2)[m
[32m+[m[32m            temp = temp[1, :] + temp[0, :] + self.__height ** 2[m
[32m+[m[32m            dis[:, i] = np.sqrt(temp)[m
[32m+[m[32m        return dis[m
[32m+[m
[32m+[m[32m    def DataRate(self, trajectory, band_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            DataRate 根据给定的带宽和轨迹计算MD设备的实际通讯速率[m
[32m+[m[32m            @trajectory UAV轨迹矩阵[m
[32m+[m[32m            @band_portion UAV分配给各个用户的带宽占比[m
[32m+[m[32m        """[m
[32m+[m[32m        distanze = self.Distance(trajectory)[m
[32m+[m[32m        channel_gain = self.__transmit_power * 1000[m
[32m+[m[32m        channel_gain = channel_gain * self.Db2Dec(self.__channel_power)[m
[32m+[m[32m        channel_gain = channel_gain / distanze[m
[32m+[m
[32m+[m[32m        band = self.__bandwidth * band_portion[m
[32m+[m[32m        denominator = (band * np.power(10, 6) * self.Db2Dec(self.__noise_pose))[m
[32m+[m
[32m+[m[32m        rate = band * np.log2(1 + channel_gain / denominator)[m
[32m+[m[32m        return rate[m
[32m+[m
[32m+[m[32m    def mdCacheEnergy(self, bits):[m
[32m+[m[32m        """[m
[32m+[m[32m            根据比特述计算存储能耗[m
[32m+[m[32m        """[m
[32m+[m[32m        return bits * self.__md_cache[m
[32m+[m
[32m+[m[32m    def mdCacheEnergy(self, task_type, task_offloading_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            根据卸载的比特述计算存储能耗[m
[32m+[m[32m        """[m
[32m+[m[32m        egy = self.__md_cache * self.__md_tasks[m
[32m+[m[32m        return (egy, egy.sum())[m
[32m+[m
[32m+[m[32m    def mdLocalComputingEnergy(self, task_type, task_offloading_portion):[m
[32m+[m[32m        egy = task_type * self.__md_tasks * self.__ETA * (1 - task_offloading_portion) * self.__BITS * (self.__md_frequency ** 2)[m
[32m+[m[32m        return (egy, egy.sum())[m
[32m+[m
[32m+[m[32m    def mdTransmitionEnergy(self, trajectory, bandwidth, task_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            mdTransmitionEnergy 计算所有用户的传输能耗[m
[32m+[m
[32m+[m[32m            @trajectory UAV轨迹[m
[32m+[m[32m            @bandwidth UAV分配带宽矩阵[m
[32m+[m[32m            @task_portion 用户卸载比例矩阵[m
[32m+[m[32m        """[m
[32m+[m[32m        rate = self.DataRate(trajectory, bandwidth)[m
[32m+[m[32m        tran_latency = self.__md_tasks * task_portion / rate[m
[32m+[m[32m        return (self.__md_transmit_power * tran_latency, (tran_latency * self.__md_transmit_power).sum())[m
[32m+[m
[32m+[m[32m    def uavCacheEnergy(self, task_type, task_offloading_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            uavCacheEnergy 计算UAV的存储能耗[m
[32m+[m
[32m+[m[32m            @task_type 任务处理类型矩阵[m
[32m+[m[32m            @task_offloading_portion 任务卸载比例矩阵[m
[32m+[m
[32m+[m[32m            @return (egy,egySum) 存储能耗矩阵，uav总存储能耗[m
[32m+[m[32m        """[m
[32m+[m
[32m+[m[32m        egy = self.__UAV_CA * (1 - task_type) * task_offloading_portion * self.__md_tasks[m
[32m+[m[32m        return (egy, egy.sum())[m
[32m+[m
[32m+[m[32m    def uavComputingEnergy(self, task_type, task_offloading_portion, allocated_frequency):[m
[32m+[m[32m        """[m
[32m+[m[32m            uavComputingEnergy 根据任务类型矩阵、任务卸载比例矩阵和分配的CPU矩阵计算UAV的计算能耗[m
[32m+[m[32m            @task_type 任务处理类型矩阵 A[m
[32m+[m[32m            @task_offloading_portion 任务卸载比例矩阵 L[m
[32m+[m[32m            @allocated_frequency CPU分配矩阵 F[m
[32m+[m
[32m+[m[32m            @return (egy, egy.sum()) 各个任务的能耗和总能耗[m
[32m+[m[32m        """[m
[32m+[m[32m        egy = task_type * self.__ETA * task_offloading_portion * self.__md_tasks * self.__BITS * (allocated_frequency ** 2)[m
[32m+[m[32m        return (egy, egy.sum())[m
[32m+[m
[32m+[m[32m    def uavFlyEnergy(self, velocity):[m
[32m+[m[32m        """[m
[32m+[m[32m            uavFlyEnergy 根据给定的速度向量计算UAV的飞行能耗[m
[32m+[m
[32m+[m[32m            @velocity UAV轨迹飞行速度向量[m
[32m+[m[32m            @return egy UAV飞行所消耗的能耗[m
[32m+[m[32m        """[m
[32m+[m[32m        egy = self.__blade_power * (1 + 3 * np.power(velocity, 2) / (self.__qtips ** 2))[m
[32m+[m
[32m+[m[32m        temp = np.sqrt((1 + np.power(velocity, 4) / (4 * self.__hover_induced_velocity ** 4)))[m
[32m+[m[32m        egy = egy + self.__induced_power * (np.sqrt(temp, 0.5))[m
[32m+[m
[32m+[m[32m        egy = egy + 0.5 * self.__fuselage_drag_ratio * self.__fuselage_rotor_solidity * self.__rotor_disc_aera * self.__rho * np.power(velocity, 3)[m
[32m+[m[32m        egy = egy * (self.__latency * self.__slot)[m
[32m+[m
[32m+[m[32m        return egy[m
[32m+[m
[32m+[m[32m    def localLatency(self, task_type, task_offloading_portion):[m
[32m+[m[32m        """[m
[32m+[m[32m            localLatency 计算任务的本地处理时间[m
[32m+[m
[32m+[m[32m            @task_type 任务类型 A[m
[32m+[m[32m            @task_offloading_portion 任务卸载比例矩阵[m
[32m+[m
[32m+[m[32m            @return(latency) 本地处理时延矩阵[m
[32m+[m[32m        """[m
[32m+[m[32m        task_type * (1 - task_offloading_portion) * self.__md_tasks * self.__BITS[m
[32m+[m
[32m+[m[32m    def offloadingLatency(self, trajectory, bandwidth, task_type, task_portion, allocated_frequency):[m
[32m+[m[32m        """[m
[32m+[m[32m            offloadingLatency 计算卸载任务时延[m
[32m+[m
[32m+[m[32m            @trajectory uav飞行轨迹[m
[32m+[m[32m            @bandwidth uav带宽分配占比[m
[32m+[m[32m            @task_type 任务类型矩阵[m
[32m+[m[32m            @task_portion 任务卸载比例矩阵[m
[32m+[m[32m            @allocated_frequency uav分配的计算资源矩阵[m
[32m+[m
[32m+[m[32m            @return(latency) 卸载到uav上的处理时延[m
[32m+[m[32m        """[m
[32m+[m[32m        rate = self.DataRate(trajectory, bandwidth)[m
[32m+[m[32m        latency_transmition = self.__md_tasks * task_portion / rate[m
[32m+[m[32m        latency_uavExecution = task_type * task_portion * self.__md_tasks * self.__BITS / allocated_frequency[m
[32m+[m[32m        return latency_transmition + latency_uavExecution[m
[32m+[m
[32m+[m[32m    def taskLatency(self, trajectory, bandwidth, task_type, task_portion, allocated_frequency):[m
[32m+[m[32m        """[m
[32m+[m[32m            taskLatency 计算实际的处理时延[m
[32m+[m
[32m+[m[32m            @trajectory uav飞行轨迹[m
[32m+[m[32m            @bandwidth uav带宽分配占比[m
[32m+[m[32m            @task_type 任务类型矩阵[m
[32m+[m[32m            @task_portion 任务卸载比例矩阵[m
[32m+[m[32m            @allocated_frequency uav分配的计算资源矩阵[m
[32m+[m
[32m+[m[32m            @return(latency) 任务总的处理时延[m
[32m+[m[32m        """[m
[32m+[m
[32m+[m[32m        loc = self.localLatency(task_type, task_portion)[m
[32m+[m[32m        off = self.offloadingLatency(trajectory, bandwidth, task_type, task_portion, allocated_frequency)[m
[32m+[m
[32m+[m[32m        return np.maximum(loc, off)[m
[1mdiff --git a/__pycache__/RL_brain_change_layer.cpython-36.pyc b/__pycache__/RL_brain_change_layer.cpython-36.pyc[m
[1mindex 05240ef..8a4782c 100644[m
Binary files a/__pycache__/RL_brain_change_layer.cpython-36.pyc and b/__pycache__/RL_brain_change_layer.cpython-36.pyc differ
[1mdiff --git a/requirements.txt b/requirements.txt[m
[1mindex 9eff3bf..c02f337 100644[m
[1m--- a/requirements.txt[m
[1m+++ b/requirements.txt[m
[36m@@ -1,234 +1 @@[m
[31m-absl-py==0.9.0[m
[31m-alabaster==0.7.10[m
[31m-albumentations==0.4.5[m
[31m-alembic==1.4.2[m
[31m-anaconda-client==1.6.5[m
[31m-anaconda-navigator==1.6.9[m
[31m-anaconda-project==0.8.0[m
[31m-asn1crypto==0.22.0[m
[31m-astor==0.8.1[m
[31m-astroid==1.5.3[m
[31m-astropy==2.0.2[m
[31m-astunparse==1.6.3[m
[31m-babel==2.5.0[m
[31m-backports.shutil-get-terminal-size==1.0.0[m
[31m-beautifulsoup4==4.6.0[m
[31m-bitarray==0.8.1[m
[31m-bkcharts==0.2[m
[31m-blaze==0.11.3[m
[31m-bleach==1.5.0[m
[31m-bokeh==0.12.10[m
[31m-boto==2.48.0[m
[31m-Bottleneck==1.2.1[m
[31m-CacheControl==0.12.3[m
[31m-cachetools==4.1.0[m
[31m-catalyst==20.6[m
[31m-certifi==2017.7.27.1[m
[31m-cffi==1.10.0[m
[31m-chardet==3.0.4[m
[31m-click==7.1.2[m
[31m-cloudpickle==0.4.0[m
[31m-clyent==1.2.2[m
[31m-colorama==0.3.9[m
[31m-comtypes==1.1.2[m
[31m-conda==4.8.3[m
[31m-conda-build==3.0.27[m
[31m-conda-package-handling==1.7.0[m
[31m-conda-verify==2.0.0[m
[31m-contextlib2==0.5.5[m
[31m-crc32c==2.0[m
[31m-cryptography==2.0.3[m
[31m-cycler==0.10.0[m
[31m-Cython==0.26.1[m
[31m-cytoolz==0.8.2[m
[31m-dask==0.15.3[m
[31m-dataset==1.3.1[m
[31m-datashape==0.5.4[m
[31m-decorator==4.1.2[m
[31m-deprecation==2.1.0[m
[31m-distlib==0.2.5[m
[31m-distributed==1.19.1[m
[31m-docutils==0.14[m
[31m-entrypoints==0.2.3[m
[31m-et-xmlfile==1.0.1[m
[31m-fastcache==1.0.2[m
[31m-fastremap==1.10.1[m
[31m-filelock==2.0.12[m
[31m-fill-voids==1.1.0[m
[31m-Flask==0.12.2[m
[31m-Flask-Cors==3.0.3[m
[31m-freeze==3.0[m
[31m-future==0.18.2[m
[31m-gast==0.3.3[m
[31m-gevent==1.2.2[m
[31m-gitdb==4.0.5[m
[31m-GitPython==3.1.3[m
[31m-glob2==0.5[m
[31m-google-auth==1.16.1[m
[31m-google-auth-oauthlib==0.4.1[m
[31m-greenlet==0.4.12[m
[31m-grpcio==1.29.0[m
[31m-h5py==2.7.0[m
[31m-heapdict==1.0.0[m
[31m-html5lib==0.9999999[m
[31m-idna==2.6[m
[31m-imageio==2.2.0[m
[31m-imagesize==0.7.1[m
[31m-imgaug==0.2.6[m
[31m-importlib-metadata==1.6.1[m
[31m-imutils==0.5.3[m
[31m-ipykernel==4.6.1[m
[31m-ipython==6.1.0[m
[31m-ipython-genutils==0.2.0[m
[31m-ipywidgets==7.0.0[m
[31m-isort==4.2.15[m
[31m-itsdangerous==0.24[m
[31m-jdcal==1.3[m
[31m-jedi==0.10.2[m
[31m-Jinja2==2.9.6[m
[31m-joblib==0.15.1[m
[31m-jsonschema==2.6.0[m
[31m-jupyter-client==5.1.0[m
[31m-jupyter-console==5.2.0[m
[31m-jupyter-core==4.3.0[m
[31m-jupyterlab==0.27.0[m
[31m-jupyterlab-launcher==0.4.0[m
[31m-Keras==2.1.6[m
[31m-Keras-Applications==1.0.8[m
[31m-Keras-Preprocessing==1.1.2[m
[31m-lazy-object-proxy==1.3.1[m
[31m-llvmlite==0.20.0[m
[31m-locket==0.2.0[m
[31m-lockfile==0.12.2[m
[31m-lungmask @ git+https://github.com/JoHof/lungmask@817d17d93741498f1e2784d454e4968d41920ad7[m
[31m-lxml==4.1.0[m
[31m-Mako==1.1.3[m
[31m-Markdown==3.2.2[m
[31m-MarkupSafe==1.0[m
[31m-matplotlib==2.1.0[m
[31m-mccabe==0.6.1[m
[31m-menuinst==1.4.16[m
[31m-mistune==0.7.4[m
[31m-mpmath==0.19[m
[31m-msgpack-python==0.4.8[m
[31m-multipledispatch==0.4.9[m
[31m-navigator-updater==0.1.0[m
[31m-nbconvert==5.3.1[m
[31m-nbformat==4.4.0[m
[31m-networkx==2.0[m
[31m-nltk==3.2.4[m
[31m-nose==1.3.7[m
[31m-notebook==5.0.0[m
[31m-numba==0.35.0+10.g143f70e[m
[31m-numexpr==2.6.2[m
[31m-numpy==1.18.5[m
[31m-numpydoc==0.7.0[m
[31m-oauthlib==3.1.0[m
[31m-odo==0.5.1[m
[31m-olefile==0.44[m
[31m-opencv-python==4.2.0.34[m
[31m-openpyxl==2.4.8[m
[31m-packaging==16.8[m
[31m-pandas==1.0.4[m
[31m-pandocfilters==1.4.2[m
[31m-partd==0.3.8[m
[31m-path.py==10.3.1[m
[31m-pathlib2==2.3.0[m
[31m-patsy==0.4.1[m
[31m-pep8==1.7.0[m
[31m-pickleshare==0.7.4[m
[31m-Pillow==7.1.2[m
[31m-pkginfo==1.4.1[m
[31m-plotly==4.8.1[m
[31m-ply==3.10[m
[31m-progress==1.3[m
[31m-prompt-toolkit==1.0.15[m
[31m-protobuf==3.12.2[m
[31m-psutil==5.4.0[m
[31m-py==1.4.34[m
[31m-pyasn1==0.4.8[m
[31m-pyasn1-modules==0.2.8[m
[31m-pycodestyle==2.3.1[m
[31m-pycosat==0.6.3[m
[31m-pycparser==2.18[m
[31m-pycrypto==2.6.1[m
[31m-pycurl==7.43.0[m
[31m-pydicom==2.0.0[m
[31m-pyflakes==1.6.0[m
[31m-pygame==1.9.6[m
[31m-Pygments==2.2.0[m
[31m-pylint==1.7.4[m
[31m-pyodbc==4.0.17[m
[31m-pyOpenSSL==17.2.0[m
[31m-pyparsing==2.2.0[m
[31m-PySocks==1.6.7[m
[31m-pytest==3.2.1[m
[31m-python-dateutil==2.6.1[m
[31m-python-editor==1.0.4[m
[31m-pytz==2017.2[m
[31m-PyWavelets==0.5.2[m
[31m-pywin32==221[m
[31m-PyYAML==3.12[m
[31m-pyzmq==16.0.2[m
[31m-QtAwesome==0.4.4[m
[31m-qtconsole==4.3.1[m
[31m-QtPy==1.3.1[m
[31m-requests==2.23.0[m
[31m-requests-oauthlib==1.3.0[m
[31m-retrying==1.3.3[m
[31m-rope==0.10.5[m
[31m-rsa==4.0[m
[31m-ruamel-yaml==0.11.14[m
[31m-scikit-image==0.13.0[m
[31m-scikit-learn==0.23.1[m
[31m-scipy==1.2.1[m
[31m-seaborn==0.8[m
[31m-simplegeneric==0.8.1[m
[31m-SimpleITK==1.2.4[m
[31m-singledispatch==3.4.0.3[m
[31m-six==1.15.0[m
[31m-smmap==3.0.4[m
[31m-snowballstemmer==1.2.1[m
[31m-solver==0.0.4[m
[31m-sortedcollections==0.5.3[m
[31m-sortedcontainers==1.5.7[m
[31m-Sphinx==1.6.3[m
[31m-sphinxcontrib-websupport==1.0.1[m
[31m-spyder==3.2.4[m
[31m-SQLAlchemy==1.3.17[m
[31m-statsmodels==0.8.0[m
[31m-sympy==1.1.1[m
[31m-tables==3.4.2[m
[31m-tblib==1.3.2[m
[31m-tensorboard==1.6.0[m
[31m-tensorboard-plugin-wit==1.6.0.post3[m
[31m-tensorboardX==2.0[m
[31m-tensorflow==1.6.0[m
[31m-tensorflow-estimator==2.2.0[m
[31m-termcolor==1.1.0[m
[31m-testpath==0.3.1[m
[31m-threadpoolctl==2.1.0[m
[31m-toolz==0.8.2[m
[31m-torch==1.5.0[m
[31m-torchvision==0.6.0[m
[31m-tornado==4.5.2[m
[31m-tqdm==4.46.0[m
[31m-traitlets==4.3.2[m
[31m-typing==3.6.2[m
[31m-unet==0.7.3[m
[31m-unicodecsv==0.14.1[m
[31m-urllib3==1.22[m
[31m-wcwidth==0.1.7[m
[31m-webencodings==0.5.1[m
[31m-Werkzeug==0.12.2[m
[31m-widgetsnbextension==3.0.2[m
[31m-win-inet-pton==1.0.1[m
[31m-win-unicode-console==0.5[m
[31m-wincertstore==0.2[m
[31m-wrapt==1.10.11[m
[31m-xlrd==1.1.0[m
[31m-XlsxWriter==1.0.2[m
[31m-xlwings==0.11.4[m
[31m-xlwt==1.3.0[m
[31m-zict==0.1.3[m
[31m-zipp==3.1.0[m
[32m+[m[32mtensorflow==115.6.0[m
\ No newline at end of file[m

[33mcommit c123d5869970c57a79ecf6619dda15974c2e08fe[m
Merge: 11e344d 9626b09
Author: Lwt <lwtynu@gmail.com>
Date:   Thu Aug 6 21:19:39 2020 +0800

    Merge branch 'master' of https://github.com/15198657119/UAV_RL

[33mcommit 11e344d46c46f3bd9bfdcbbe48152d217c8135d3[m
Author: Lwt <lwtynu@gmail.com>
Date:   Thu Aug 6 13:32:17 2020 +0800

    requirements

[1mdiff --git a/.vscode/settings.json b/.vscode/settings.json[m
[1mnew file mode 100644[m
[1mindex 0000000..5b80df3[m
[1m--- /dev/null[m
[1m+++ b/.vscode/settings.json[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "python.pythonPath": "venv/bin/python"[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/__pycache__/RL_brain_change_layer.cpython-38.pyc b/__pycache__/RL_brain_change_layer.cpython-38.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..7f0578f[m
Binary files /dev/null and b/__pycache__/RL_brain_change_layer.cpython-38.pyc differ
[1mdiff --git a/requirements.txt b/requirements.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..9eff3bf[m
[1m--- /dev/null[m
[1m+++ b/requirements.txt[m
[36m@@ -0,0 +1,234 @@[m
[32m+[m[32mabsl-py==0.9.0[m
[32m+[m[32malabaster==0.7.10[m
[32m+[m[32malbumentations==0.4.5[m
[32m+[m[32malembic==1.4.2[m
[32m+[m[32manaconda-client==1.6.5[m
[32m+[m[32manaconda-navigator==1.6.9[m
[32m+[m[32manaconda-project==0.8.0[m
[32m+[m[32masn1crypto==0.22.0[m
[32m+[m[32mastor==0.8.1[m
[32m+[m[32mastroid==1.5.3[m
[32m+[m[32mastropy==2.0.2[m
[32m+[m[32mastunparse==1.6.3[m
[32m+[m[32mbabel==2.5.0[m
[32m+[m[32mbackports.shutil-get-terminal-size==1.0.0[m
[32m+[m[32mbeautifulsoup4==4.6.0[m
[32m+[m[32mbitarray==0.8.1[m
[32m+[m[32mbkcharts==0.2[m
[32m+[m[32mblaze==0.11.3[m
[32m+[m[32mbleach==1.5.0[m
[32m+[m[32mbokeh==0.12.10[m
[32m+[m[32mboto==2.48.0[m
[32m+[m[32mBottleneck==1.2.1[m
[32m+[m[32mCacheControl==0.12.3[m
[32m+[m[32mcachetools==4.1.0[m
[32m+[m[32mcatalyst==20.6[m
[32m+[m[32mcertifi==2017.7.27.1[m
[32m+[m[32mcffi==1.10.0[m
[32m+[m[32mchardet==3.0.4[m
[32m+[m[32mclick==7.1.2[m
[32m+[m[32mcloudpickle==0.4.0[m
[32m+[m[32mclyent==1.2.2[m
[32m+[m[32mcolorama==0.3.9[m
[32m+[m[32mcomtypes==1.1.2[m
[32m+[m[32mconda==4.8.3[m
[32m+[m[32mconda-build==3.0.27[m
[32m+[m[32mconda-package-handling==1.7.0[m
[32m+[m[32mconda-verify==2.0.0[m
[32m+[m[32mcontextlib2==0.5.5[m
[32m+[m[32mcrc32c==2.0[m
[32m+[m[32mcryptography==2.0.3[m
[32m+[m[32mcycler==0.10.0[m
[32m+[m[32mCython==0.26.1[m
[32m+[m[32mcytoolz==0.8.2[m
[32m+[m[32mdask==0.15.3[m
[32m+[m[32mdataset==1.3.1[m
[32m+[m[32mdatashape==0.5.4[m
[32m+[m[32mdecorator==4.1.2[m
[32m+[m[32mdeprecation==2.1.0[m
[32m+[m[32mdistlib==0.2.5[m
[32m+[m[32mdistributed==1.19.1[m
[32m+[m[32mdocutils==0.14[m
[32m+[m[32mentrypoints==0.2.3[m
[32m+[m[32met-xmlfile==1.0.1[m
[32m+[m[32mfastcache==1.0.2[m
[32m+[m[32mfastremap==1.10.1[m
[32m+[m[32mfilelock==2.0.12[m
[32m+[m[32mfill-voids==1.1.0[m
[32m+[m[32mFlask==0.12.2[m
[32m+[m[32mFlask-Cors==3.0.3[m
[32m+[m[32mfreeze==3.0[m
[32m+[m[32mfuture==0.18.2[m
[32m+[m[32mgast==0.3.3[m
[32m+[m[32mgevent==1.2.2[m
[32m+[m[32mgitdb==4.0.5[m
[32m+[m[32mGitPython==3.1.3[m
[32m+[m[32mglob2==0.5[m
[32m+[m[32mgoogle-auth==1.16.1[m
[32m+[m[32mgoogle-auth-oauthlib==0.4.1[m
[32m+[m[32mgreenlet==0.4.12[m
[32m+[m[32mgrpcio==1.29.0[m
[32m+[m[32mh5py==2.7.0[m
[32m+[m[32mheapdict==1.0.0[m
[32m+[m[32mhtml5lib==0.9999999[m
[32m+[m[32midna==2.6[m
[32m+[m[32mimageio==2.2.0[m
[32m+[m[32mimagesize==0.7.1[m
[32m+[m[32mimgaug==0.2.6[m
[32m+[m[32mimportlib-metadata==1.6.1[m
[32m+[m[32mimutils==0.5.3[m
[32m+[m[32mipykernel==4.6.1[m
[32m+[m[32mipython==6.1.0[m
[32m+[m[32mipython-genutils==0.2.0[m
[32m+[m[32mipywidgets==7.0.0[m
[32m+[m[32misort==4.2.15[m
[32m+[m[32mitsdangerous==0.24[m
[32m+[m[32mjdcal==1.3[m
[32m+[m[32mjedi==0.10.2[m
[32m+[m[32mJinja2==2.9.6[m
[32m+[m[32mjoblib==0.15.1[m
[32m+[m[32mjsonschema==2.6.0[m
[32m+[m[32mjupyter-client==5.1.0[m
[32m+[m[32mjupyter-console==5.2.0[m
[32m+[m[32mjupyter-core==4.3.0[m
[32m+[m[32mjupyterlab==0.27.0[m
[32m+[m[32mjupyterlab-launcher==0.4.0[m
[32m+[m[32mKeras==2.1.6[m
[32m+[m[32mKeras-Applications==1.0.8[m
[32m+[m[32mKeras-Preprocessing==1.1.2[m
[32m+[m[32mlazy-object-proxy==1.3.1[m
[32m+[m[32mllvmlite==0.20.0[m
[32m+[m[32mlocket==0.2.0[m
[32m+[m[32mlockfile==0.12.2[m
[32m+[m[32mlungmask @ git+https://github.com/JoHof/lungmask@817d17d93741498f1e2784d454e4968d41920ad7[m
[32m+[m[32mlxml==4.1.0[m
[32m+[m[32mMako==1.1.3[m
[32m+[m[32mMarkdown==3.2.2[m
[32m+[m[32mMarkupSafe==1.0[m
[32m+[m[32mmatplotlib==2.1.0[m
[32m+[m[32mmccabe==0.6.1[m
[32m+[m[32mmenuinst==1.4.16[m
[32m+[m[32mmistune==0.7.4[m
[32m+[m[32mmpmath==0.19[m
[32m+[m[32mmsgpack-python==0.4.8[m
[32m+[m[32mmultipledispatch==0.4.9[m
[32m+[m[32mnavigator-updater==0.1.0[m
[32m+[m[32mnbconvert==5.3.1[m
[32m+[m[32mnbformat==4.4.0[m
[32m+[m[32mnetworkx==2.0[m
[32m+[m[32mnltk==3.2.4[m
[32m+[m[32mnose==1.3.7[m
[32m+[m[32mnotebook==5.0.0[m
[32m+[m[32mnumba==0.35.0+10.g143f70e[m
[32m+[m[32mnumexpr==2.6.2[m
[32m+[m[32mnumpy==1.18.5[m
[32m+[m[32mnumpydoc==0.7.0[m
[32m+[m[32moauthlib==3.1.0[m
[32m+[m[32modo==0.5.1[m
[32m+[m[32molefile==0.44[m
[32m+[m[32mopencv-python==4.2.0.34[m
[32m+[m[32mopenpyxl==2.4.8[m
[32m+[m[32mpackaging==16.8[m
[32m+[m[32mpandas==1.0.4[m
[32m+[m[32mpandocfilters==1.4.2[m
[32m+[m[32mpartd==0.3.8[m
[32m+[m[32mpath.py==10.3.1[m
[32m+[m[32mpathlib2==2.3.0[m
[32m+[m[32mpatsy==0.4.1[m
[32m+[m[32mpep8==1.7.0[m
[32m+[m[32mpickleshare==0.7.4[m
[32m+[m[32mPillow==7.1.2[m
[32m+[m[32mpkginfo==1.4.1[m
[32m+[m[32mplotly==4.8.1[m
[32m+[m[32mply==3.10[m
[32m+[m[32mprogress==1.3[m
[32m+[m[32mprompt-toolkit==1.0.15[m
[32m+[m[32mprotobuf==3.12.2[m
[32m+[m[32mpsutil==5.4.0[m
[32m+[m[32mpy==1.4.34[m
[32m+[m[32mpyasn1==0.4.8[m
[32m+[m[32mpyasn1-modules==0.2.8[m
[32m+[m[32mpycodestyle==2.3.1[m
[32m+[m[32mpycosat==0.6.3[m
[32m+[m[32mpycparser==2.18[m
[32m+[m[32mpycrypto==2.6.1[m
[32m+[m[32mpycurl==7.43.0[m
[32m+[m[32mpydicom==2.0.0[m
[32m+[m[32mpyflakes==1.6.0[m
[32m+[m[32mpygame==1.9.6[m
[32m+[m[32mPygments==2.2.0[m
[32m+[m[32mpylint==1.7.4[m
[32m+[m[32mpyodbc==4.0.17[m
[32m+[m[32mpyOpenSSL==17.2.0[m
[32m+[m[32mpyparsing==2.2.0[m
[32m+[m[32mPySocks==1.6.7[m
[32m+[m[32mpytest==3.2.1[m
[32m+[m[32mpython-dateutil==2.6.1[m
[32m+[m[32mpython-editor==1.0.4[m
[32m+[m[32mpytz==2017.2[m
[32m+[m[32mPyWavelets==0.5.2[m
[32m+[m[32mpywin32==221[m
[32m+[m[32mPyYAML==3.12[m
[32m+[m[32mpyzmq==16.0.2[m
[32m+[m[32mQtAwesome==0.4.4[m
[32m+[m[32mqtconsole==4.3.1[m
[32m+[m[32mQtPy==1.3.1[m
[32m+[m[32mrequests==2.23.0[m
[32m+[m[32mrequests-oauthlib==1.3.0[m
[32m+[m[32mretrying==1.3.3[m
[32m+[m[32mrope==0.10.5[m
[32m+[m[32mrsa==4.0[m
[32m+[m[32mruamel-yaml==0.11.14[m
[32m+[m[32mscikit-image==0.13.0[m
[32m+[m[32mscikit-learn==0.23.1[m
[32m+[m[32mscipy==1.2.1[m
[32m+[m[32mseaborn==0.8[m
[32m+[m[32msimplegeneric==0.8.1[m
[32m+[m[32mSimpleITK==1.2.4[m
[32m+[m[32msingledispatch==3.4.0.3[m
[32m+[m[32msix==1.15.0[m
[32m+[m[32msmmap==3.0.4[m
[32m+[m[32msnowballstemmer==1.2.1[m
[32m+[m[32msolver==0.0.4[m
[32m+[m[32msortedcollections==0.5.3[m
[32m+[m[32msortedcontainers==1.5.7[m
[32m+[m[32mSphinx==1.6.3[m
[32m+[m[32msphinxcontrib-websupport==1.0.1[m
[32m+[m[32mspyder==3.2.4[m
[32m+[m[32mSQLAlchemy==1.3.17[m
[32m+[m[32mstatsmodels==0.8.0[m
[32m+[m[32msympy==1.1.1[m
[32m+[m[32mtables==3.4.2[m
[32m+[m[32mtblib==1.3.2[m
[32m+[m[32mtensorboard==1.6.0[m
[32m+[m[32mtensorboard-plugin-wit==1.6.0.post3[m
[32m+[m[32mtensorboardX==2.0[m
[32m+[m[32mtensorflow==1.6.0[m
[32m+[m[32mtensorflow-estimator==2.2.0[m
[32m+[m[32mtermcolor==1.1.0[m
[32m+[m[32mtestpath==0.3.1[m
[32m+[m[32mthreadpoolctl==2.1.0[m
[32m+[m[32mtoolz==0.8.2[m
[32m+[m[32mtorch==1.5.0[m
[32m+[m[32mtorchvision==0.6.0[m
[32m+[m[32mtornado==4.5.2[m
[32m+[m[32mtqdm==4.46.0[m
[32m+[m[32mtraitlets==4.3.2[m
[32m+[m[32mtyping==3.6.2[m
[32m+[m[32munet==0.7.3[m
[32m+[m[32municodecsv==0.14.1[m
[32m+[m[32murllib3==1.22[m
[32m+[m[32mwcwidth==0.1.7[m
[32m+[m[32mwebencodings==0.5.1[m
[32m+[m[32mWerkzeug==0.12.2[m
[32m+[m[32mwidgetsnbextension==3.0.2[m
[32m+[m[32mwin-inet-pton==1.0.1[m
[32m+[m[32mwin-unicode-console==0.5[m
[32m+[m[32mwincertstore==0.2[m
[32m+[m[32mwrapt==1.10.11[m
[32m+[m[32mxlrd==1.1.0[m
[32m+[m[32mXlsxWriter==1.0.2[m
[32m+[m[32mxlwings==0.11.4[m
[32m+[m[32mxlwt==1.3.0[m
[32m+[m[32mzict==0.1.3[m
[32m+[m[32mzipp==3.1.0[m
